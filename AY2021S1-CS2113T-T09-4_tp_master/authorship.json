[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Trakcal\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    archiveBaseName \u003d \"trakCAL\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "1-Karthigeyan-1": 3
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "![Karthigeyan](diagrams/karthig.jpg) | Rani Karthigeyan Rajendrakumar| [Github](https://github.com/1-Karthigeyan-1) | [Portfolio](team/1-Karthigeyan-1.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "![Chuan An](diagrams/chuan_an.jpg) | Poon Chuan An | [Github](https://github.com/poonchuanan) | [Portfolio](team/poonchuanan.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "![Jenny](diagrams/jenny.jpg) | Jenny Lin | [Github](https://github.com/jlifah) | [Portfolio](team/jlifah.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "![Owen](diagrams/owen.jpg) | Owen Chew | [Github](https://github.com/chewyang) | [Portfolio](team/chewyang.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "![Siew Wen](diagrams/siew_wen.jpg) | Puah Siew Wen | [Github](https://github.com/e0425705) | [Portfolio](team/e0425705.md)"
      }
    ],
    "authorContributionMap": {
      "chewyang": 1,
      "e0425705": 3,
      "-": 4,
      "1-Karthigeyan-1": 1
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "# Developer Guide for traKCAL"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "The purpose of this developer guide is as reference for future collaborators of **trakCAL**."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "By: CS2113-T09-4 \u003cbr\u003e   Since: October 2020  \u003cbr\u003e Licence: MIT"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## 1.0 Introduction"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "**Welcome to traKCAL!**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "**traKCAL** is a desktop application for managing and visualizing your calorie intake, optimized for use via Command Line Interface (CLI) whilst retaining the benefits of a Graphical User Interface (GUI). "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "This guide will provide information on the design and implementation of **traKCAL** to help you get started on your journey of becoming a contributor to **traKCAL**. This guide will also explain the various features available in **traKCAL**, to provide you with a better understanding of the current version of **traKCAL**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "### 1.1 Table of Contents"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* Table of Contents"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "{:toc}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "### 2.0 Prerequisites"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * Java 11 (can be download from [here](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * Intellij IDE"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "## 2.1 Setting up"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "1. Fork the traKCAL repository [here]() and git clone it to a convenient location on your desktop eg. Desktop."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": "2. Open any IDE (Intellij preferred) and click `Configure` -\u003e `Project Defaults` -\u003e `Project Structure` -\u003e `New` and ensure that a valid Java 11 SDK is selected."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "3. Next, go to `Import Project` and select the *build.gradle* file. "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": "4. Click `Open as Project` and accept all default settings. "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": "5. After opening the project, go to `src` -\u003e `main` -\u003e `java` -\u003e `seedu.duke` -\u003e `Trakcal` and right click on the Trakcal class. Select the `Run \u0027Trakcal.main()\u0027` option."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": "6. Upon successful run, the following opening message will be shown: "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    | Hello from                                                                       |"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    |  _                  _  __   ___     _     _                                      |"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    | | |_   _ _   __ _  | |/ /  / __|   /_\\   | |                                     |"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    | |  _| | \u0027_| / _` | | \u0027 \u003c  | (__   / _ \\  | |__                                   |"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    |  \\__| |_|   \\__,_| |_|\\_\\  \\___| /_/ \\_\\ |____|                                  |"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    |                                                                                  |"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    | Hello! I\u0027m traKCAL.                                                              |"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    | Please do input \u0027help\u0027 for the commands and their respective input format.       |"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chewyang"
        },
        "content": "7. You will then be prompted to create a new user profile.  "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e    "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## 3.0 Design "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 3.1 Architecture"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jlifah"
        },
        "content": "![ArchitectureDiagram](diagrams/ArchitectureDiagram.png)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jlifah"
        },
        "content": "*Figure 1. Architecture diagram of traKCAL*"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The Architecture Diagram shown above explains the high-level design of **traKCAL**. There are 8 components in traKCAL, and their functionalities will be discussed below:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chewyang"
        },
        "content": "### 3.2 Ui component"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "![Ui Component](diagrams/ui.png)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chewyang"
        },
        "content": "*Figure 2. Diagram for UI component*"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chewyang"
        },
        "content": "The UI component deals with interactions with the user by displaying appropriate messages to the user, including the welcome message and appropriate error messages whenever an error has been detected. "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 3.3 Logic component"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "![Logic Component](diagrams/LogicComponent.png)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "*Figure 2. Diagram for logic component*"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chewyang"
        },
        "content": " \\* This means that there are multiple PrepareCommand children classes inherited by the PrepareCommand class."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "The main bulk of data processing takes place in the logic component. In this component, "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chewyang"
        },
        "content": "the data from the user input is checked for its validity and parsed down further to the PrepareCommand class to its respective command classes."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": "These command classes are derived from the Command class. Each different command block deals with the "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "proposed functionality which can be associated with `Ui`,`storage` or `model` components. "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* **traKCAL** uses the parser class to filter based on command words by user."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* Description that comes after is further parsed down by the PrepareCommand class "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "and validity of those description are checked.."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Respective Command object is created and is executed by **traKCAL**."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* Respective execution methods can be further associated with `UI`, `Storage` and `Model` components."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 3.4 Model component"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "![Model_Component](diagrams/model.png)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "*Figure 3. Diagram for Model component*"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "In the Model component, "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Contains a hashmap, dayMap, where the key is the date and the value is the list of activities for the respective day."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Contains a list of activities, lastSeenList where this list would contain the activities "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Does not depend on any of the other components."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 3.5 Command component"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Before executing the command, user input has to be prepared first to ensure that all the parameters are correctly in place. "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chewyang"
        },
        "content": "This is done by the PrepareCommand class."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0425705"
        },
        "content": "![Prepare_Component](diagrams/PrepareCommand.png)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*Figure 4. Diagram for PrepareCommand*"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chewyang"
        },
        "content": "After preparing the user input and ensuring that all necessary parameters are in place, the respective prepareCommand classes will return a "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chewyang"
        },
        "content": "command which will be executed by traKCAL. Below shows all the different Command classes inherited."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0425705"
        },
        "content": "![Command_Component](diagrams/Command.png)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*Figure 4. Diagram for Command component*"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 3.6 Storage component"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chewyang"
        },
        "content": "**traKCAL** saves both user profile data and activity entries in a text file and csv (comma separated values) file respectively. \u003cbr\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "It also handles the logging file that records down the different types operations or errors that was performed during the program."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "![Storage_Component](diagrams/storage.jpg)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 5. Diagram for Storage component*"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "On program launch:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "1. `Storage` is initialised and checks for existing saved data."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "2. If saved data exists, `Storage` will read the saved data and parses them into model objects such as activity lists for the activity data."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "3. Else, if saved data does not exist, `Storage` will create an empty save file in the tpData directory."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "4. New users will be prompted to create their profile by inputting their details and saved through `UserInfoStorage`."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "On Command execution:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Whenever the user changes the list by performing an operation such as *add* or *delete* entry, `Storage` parses the model objects and writes into the csv file."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* The respective logs will also be updated according to the given commands through `Logging`."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* `UserSetStorage` will store the relevant shortcuts created by the using *createSet* command is called."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 3.7 Exception component"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chewyang"
        },
        "content": "This component contains all the exception classes used in traKCAL."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0425705"
        },
        "content": "![Exception_Component](diagrams/Exception.png)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 6. Diagram for Exception component*"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 3.8 UserProfile component"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chewyang"
        },
        "content": "This component contains the information such as the user\u0027s name, gender, height, weight, active level and the weight goal. "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "e0425705"
        },
        "content": "![userProfile](diagrams/userprofile.png)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jlifah"
        },
        "content": "*Figure 4. Diagram for UserProfile component*"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jlifah"
        },
        "content": "## 4.0 Implementation"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jlifah"
        },
        "content": "## 4.1 Create User Profile feature"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Current Implementation"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jlifah"
        },
        "content": "The sequence diagram below shows how the components will react to a new user or for a returning user. "
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jlifah"
        },
        "content": "![CreateNewUserFeature](diagrams/createNewUser.png)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 7. Components interactions for **traKCAL** create user profile feature*"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jlifah"
        },
        "content": "The following has been omitted from the diagram to increase readability: "
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* Exception handling "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* External text file creation block"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* New users are required to create a new user profile before being able to use other features like `graph` to avoid unnecessarily being thrown exceptions."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* Genders were limited to female and male instead of other genders like binary as our recommended calories equation only took into account female and male as genders."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* Similarly, weight goals were limited to lose, maintain or gain as opposed to other forms of weight goal like cut as our current equations were only able to accomodate lose, maintain or gain."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jlifah"
        },
        "content": "## 4.2 Shortcut feature"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 4.2.1 Creating a shortcut"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Current Implementation"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jlifah"
        },
        "content": "The sequence diagram below shows how the components in **traKCAL** work together to create a new shortcut. "
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Users can create a shortcut with unlimited number of entries in this format: `createSet **SHORTCUT_NAME** ...`"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Some examples include:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e`createSet **SHORTCUT_NAME** f/ **FOOD_DESCRIPTION** c/ **CALORIE_COUNT** + f/ **FOOD_DESCRIPTION** c/ **CALORIE_COUNT**`"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e`createSet **SHORTCUT_NAME** e/ **EXERCISE_DESCRIPTION** c/ **CALORIE_COUNT**`"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e`createSet **SHORTCUT_NAME** e/ **EXERCISE_DESCRIPTION** c/ **CALORIE_COUNT** + e/ **EXERCISE_DESCRIPTION** c/ **CALORIE_COUNT** + f/ **FOOD_DESCRIPTION** c/ **CALORIE_COUNT**`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jlifah"
        },
        "content": "![createSetFeature](diagrams/createSet.png)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 8. Components interaction for **traKCAL** create set feature*"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* At least one activity tag (`e/` or `f/`) and calorie tag (`c/`) must be specified by user for a shortcut to be created."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* The order of the entry must be activity tag first before calorie tag. Calorie tag followed by activity tag is not allowed. This is to facilitate the adding of each entry in the shortcut, as seen in [section 4.3](#43-add-activity-feature)."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Multiple entries in shortcut should be separated by a `+`. "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chewyang"
        },
        "content": "### 4.2.2 Using a shortcut to add to a activity list"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Current Implementation"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jlifah"
        },
        "content": "The sequence diagram below shows how the components in **traKCAL** work together to add entries in a shortcut to the activity list. "
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Users can call any existing shortcut in this format: `addSet **SHORTCUT_NAME**`"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jlifah"
        },
        "content": "![addSetFeature](diagrams/addSet.png)"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 9. Components interaction for **traKCAL** add set feature*"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Activities added using shortcuts are only added to the activity list for the current date."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jlifah"
        },
        "content": "## 4.3 Add activity feature"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Current Implementation"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The adding mechanism is used by `AddFoodCommand` and `AddExerciseCommand` to add to the list of date stated in user input. If date is not stated, then it will be added to today\u0027s list."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The following sequence diagram shows how `AddFoodCommand` is carried out when the user issues add command, in this case, `add f/ food c/ 170 d/ 2020-10-22`:"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "e0425705"
        },
        "content": "![Add Food](diagrams/addFoodFeature.png)"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 10. Component interactions for add food command*"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e `AddExerciseCommand` diagram has a similar logic."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Aspect: How to add food/exercise"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003eCurrent choice: Using single letter words as tags for input commands. (e.g. add f/ jelly c/ 100 d/ 2020-11-09)"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Pros: Faster and shorter input keys for user."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Cons: Have to ensure that user is clear on what tags to input."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eAlternative: Using full words as tags for input commands. (e.g. add food/ chicken chop calorie/ 70 date/ 2020-11-08)"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Pros: Tags are obvious in what input is expected."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Cons: More wordy input needed from user."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Aspect: Input parameters for add food/exercise"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eCurrent choice: Input format for adding: `add f/ FOOD_DESCRIPTION c/ CALORIE_COUNT \u003cd/ DATE\u003e` OR `add f/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT \u003cd/ DATE\u003e`"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003eWhere words in CAPS are parameters to be filled by the user and word in \u003cthis\u003e are optional. Not including the \u003cdate\u003e parameter would add to today\u0027s list."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Pros: Faster and shorter input time for user."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Cons: Have to ensure that user entry would be added to the correct date."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eAlternative: Input format for adding: `add f/ FOOD_DESCRIPTION c/ CALORIE_COUNT d/ DATE` OR `add f/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT d/ DATE`"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eWhere words in CAPS are parameters to be filled by the user. "
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Pros: List where food/exercise entry to be added to is clear."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Cons: Longer input time for user."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 4.4 Listing feature for find and list commands"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The listing mechanism used by `ListCommand` and `FindCommand` to display the required list of activities is facilitated by the lastSeenList of class `ActivityList`. "
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "chewyang"
        },
        "content": "The lastSeenList is the list that the user would see after a `list` or `find` command. \u003cbr\u003e"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The following operations could be applied to the lastSeenList which would change the actual data in the database:"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "e0425705"
        },
        "content": "- delete"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "e0425705"
        },
        "content": "- move"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "e0425705"
        },
        "content": "- edit"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The details of those operations can be found further down."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### 4.4.1 List"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "chewyang"
        },
        "content": "The `list` command displays the list of entries for the current date while the `list \u003cDATE\u003e` command displays the list of entries for the date as specified by the \u003cDATE\u003e parameter."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "chewyang"
        },
        "content": "For example, "
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* A `list 2020-11-11` command would use the activityList for 2020-11-11 as the lastSeenList.\u003cbr\u003e"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Given below is an example usage scenario and how the lastSeenList behaves for different `list` commands."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Step 1. The user launches the application for the first time. The lastSeenList will be pointed to the ActivityList for today\u0027s date."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "chewyang"
        },
        "content": "This means that any `edit`, `delete` or `move` commands will be performed on the ActivityList for today\u0027s date in this case, the date would be 2020-11-12."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "chewyang"
        },
        "content": "![lastSeenList first state](diagrams/initialStateOfLastSeenList.PNG)"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 12. First state of lastSeenList*"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Step 2. The user executes a `list 2020-11-10`. This `list 2020-11-10` command causes the lastSeenList to be pointed to the actvityList for 2020-11-10."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "chewyang"
        },
        "content": "This This means that any `edit`, `delete` or `move` commands will be performed on the activityList for 2020-11-10."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "chewyang"
        },
        "content": "![lastSeenList second state](diagrams/secondStateOfLastSeenList.PNG)"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 13. Second state of lastSeenList*"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "The following sequence diagram shows how the lastSeenList is set after a “list date\" command where date is of YYYY-MM-DD or after a “list” command where the date is the current date."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "![Listing feature for find and list commands](diagrams/setLastSeenList.png)"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 14. Sequence diagram of setting the lastSeenList after a `list` command*"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "chewyang"
        },
        "content": "#### Design considerations"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Allowing the user to view the list of activities for the current date by not including the `\u003cDATE\u003e` parameter would make it easier for the user."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### 4.4.2 Find"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "chewyang"
        },
        "content": "This listing feature for the `find` command also uses the lastSeenList which is of ActivityList class.  \u003cbr\u003e"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "chewyang"
        },
        "content": "The lastSeenList is the list that the user would see after a `list` command. \u003cbr\u003e"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Using the lastSeenList allows users to make changes e.g `delete` command using the numbered index of a single `find` command."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "chewyang"
        },
        "content": "For example, "
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* A `find e/ food` command would loop through the dayMap and add activities containing the keyword/s into the lastSeenList."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The editing mechanism is used by the basic find features: `FindDescriptionCommand`, `FindCalorieCommand`, "
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "e0425705"
        },
        "content": "as well as the advanced find features: `FindAllCommand` and `FindEitherCommand` to look for keywords in the list."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Given below is an example usage scenario and how the lastSeenList for a `find` command."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Step 1. The user executes a `find e/ running` This `find e/ running` command will intialize the lastSeenList to a new ActivityList and is made up of Activities that contains the `running` keyword as per the command."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "chewyang"
        },
        "content": "This lastSeenList will not point to any other activityList in the dayMap hashmap."
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "chewyang"
        },
        "content": "![lastSeenList third state](diagrams/thirdStateOfLastSeenList.PNG)"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 12. Third state of lastSeenList*"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The following sequence diagram shows how the lastSeenList is set after a find command."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "![Find Sequence Diagram](diagrams/FindSequenceDiagram.jpg)"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 13. Sequence diagram of setting the lastSeenList after a find command*"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "chewyang"
        },
        "content": "### 4.5 Displaying the list after `find` or `list` commands"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### 4.5.1 Current implementation"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "chewyang"
        },
        "content": "The mechanism used to display the lastSeenList invoked by the list or find commands is facilitated by the listDrawer and findDrawer class respectively. "
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "chewyang"
        },
        "content": "They both work in a similar manner but the list produced by findDrawer has an extra column which contains the dates of the respective entries."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "The following sequence diagram shows how the listDrawer class is used to display the lastSeenList."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "e0425705"
        },
        "content": "![list_Drawer](diagrams/listDrawer.PNG)"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 14. Sequence diagram of the usage of listDrawer to display the list*"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "chewyang"
        },
        "content": "#### Design considerations"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* The list displayed to the user after both `find` and `list` commands has enough whitespace between the columns and rows to make it easier for the user to view the entries."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* The list displayed to the user after a `find` command has the date attribute at the left hand side of the list so as to make it easier for the user to connect the entries found to the respective date, making it easier for the user to make changes accurately"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 4.6 Edit activity in list feature"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### 4.6.1 Current Implementation"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The editing mechanism is used by `EditFoodCommand` and `EditExerciseCommand` to amend the current list of activities."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The following Sequence Diagram shows how `EditFoodCommand` is carried out when the user issues edit command, in this case, `edit 1 f/ egg c/ 10`:"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "e0425705"
        },
        "content": "![Edit_Food](diagrams/EditFood.png)"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 15. Sequence diagram of edit food feature*"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e `EditExerciseCommand` diagram has a similar logic."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### 4.6.2 Design considerations"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Aspect: How editing is carried out"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eCurrent choice: User MUST pull out the list they want to edit to before calling the edit function. `list` then `edit f/ FOOD_DESCRIPTION c/ CALORIE_COUNT` OR `edit e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT`"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Pros: The entry that is being edit is clear to the user."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Cons: More steps required to edit an entry."
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eAlternative: Adding a date tag in edit: `edit f/ FOOD_DESCRIPTION c/ CALORIE_COUNT d/ DATE` OR `edit e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT d/ DATE`"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Pros: Faster and shorter time to edit an entry."
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Cons: If list of the date is not pulled out and edit carried out immediately, high chance of the wrong entry being edited as there might be recent changes to the list."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 4.7 Chaining feature"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### 4.7.1 Current Implementation"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The chaining mechanism can be used by the various commands available The following are the types of command that can be chained:"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "e0425705"
        },
        "content": "- list"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "e0425705"
        },
        "content": "- add"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "e0425705"
        },
        "content": "- edit"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "e0425705"
        },
        "content": "- graph"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The following sequence diagram shows how the chaining works after command is entered:"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "e0425705"
        },
        "content": "![Chain_Command](diagrams/ChainCommand.png)"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 17. Sequence diagram of chaining feature*"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The following is a diagram on the classes that are allowed to be chained."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "e0425705"
        },
        "content": "![Object_Diagram_Of_PrepareCommand](diagrams/chainCommand_PrepareCommand.png)"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 18. Object diagram of allowed PrepareCommand subclass*"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The following is a diagram on the classes that are allowed to be chained."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "e0425705"
        },
        "content": "![Object_Diagram_Of_Command](diagrams/chainCommand_Command.png)"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 19. Object diagram of allowed Command subclass*"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### 4.7.2 Design considerations"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Aspect: Which features to chain"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eAlternative 1 (current choice): Allow only certain features to be chained."
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Pros: Able to better track input of users."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Cons: User must know which commands can be chained."
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eAlternative 2: Allow all features to be chained."
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Pros: Easy to implement. Attribute canBeChained marked as true for all features."
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Cons: May give abnormal behaviour. As some features have dependencies on other features."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 4.8 Move feature"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "chewyang"
        },
        "content": "This feature allows the user to manually move an activity from one position to another."
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "The following sequence diagram shows how the `move` command is executed, where index1 is the position to be moved from and index 2 is the position to be moved below. "
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "chewyang"
        },
        "content": "![Move_command](diagrams/moveCommand.png)"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 20. Sequence diagram of move feature*"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "chewyang"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Pros: The tags `from/` and `below` was used to make this command more intuitive for the user."
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Cons: For the user to move an activity from a position to the 1st position, the index tied to the `below/` tag would have to be 0 which may not be as clear to the user. "
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        For example, `move from/ 2 below/ 0`"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 4.9 Graph feature"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "The graph implementation shows the progress of the daily net "
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "calories over the period of 7 days. The GraphProperty class extracts the available days from the "
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "stored data in the application."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "The days are sorted accordingly and the latest 7 days are chosen from the sorted list. "
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "The GraphProperty class extracts these data and calculates the attributes needed to build the graph. The GraphDrawing class makes use of these properties"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "to draw the graph."
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e Examples of graph properties include:"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e 1. Maximum/minimum calories"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e 1. Calorie interval"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e 1. 2-Dimensional array representation of the graph"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "e0425705"
        },
        "content": "![Graph_Sequence_Diagram](diagrams/GraphSequeunceDiagram.png)"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "*Figure 21. Sequence diagram of move feature*"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "As shown above, when the execute command of GraphCommand is called, the GraphProperty object "
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "is created, the properties of the graph are then stored and calculated in setProperty function."
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Next, the graphDrawing object is created and uses the properties calculated earlier to print out the graph."
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e In the case where there are less than 7  days stored, all the days will be displayed."
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 4.10 Delete feature"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "The `delete` feature consists of `delete by index` and `delete all` commands. `Delete by index` deletes the activities one at a time while"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "the `delete all` deletes all the activities for the current day."
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "![Delete_Sequence_Diagram](diagrams/DeleteSequeunceDiagram.png)"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "*Figure 22. Sequence diagram of delete by index feature*"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "As shown above, when the `DeleteByIndexCommand` is executed, the deleteActivity method is called from the DayMap class where the "
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "ActivityList containing the intended activities to be deleted is selected and calls removeActivity method to remove the specific activity from the ActivityList."
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "The sequence diagram for the `Delete all` is very similar to this diagram where the whole ActivityList is cleared instead of one Activity. The resulting list will be empty."
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "jlifah"
        },
        "content": "## 5.0 Appendix: Requirements"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 5.1 Product scope"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### 5.1.1 Target user profile"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the target user profile}"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Tech savvy university students that have knowledge on the exercise and calories or know where to get the information before inputting it in the application."
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    - Fast typist"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    - Prefers desktop applications"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    - Prefers typing to mouse interactions"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    - Conscious about daily calorie intake"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    - Conscious about weight"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    - Is reasonably comfortable using CLI applications"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### 5.1.2 Value proposition"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the value proposition: what problem does it solve?}"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* Functionality"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    - Provides greater flexibility of use."
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    - Can be used to do things that are difficult or impossible to do with a GUI."
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* Speed"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    - GUI required additional system resource to load the graphical part, thus slower than CLI"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    - Less memory usage"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* Scripting \u0026 automation"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    - Have greater control over system functions"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    - Commands can be given via a line command and then code does the work whereas in GUI, more than one action have to be repeated to perform a command"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 5.2 User Stories"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|v1.0|user|add food consumed/exercise done|keep track of my daily activities|"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|v1.0|user|list out the activities done for the day|track it and amend it if any errors occur|"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|v1.0|user|delete entries entered|remove erroneous entries|"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|v1.0|forgetful user|find activities via keyword|pull out the entries that I want|"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|v1.0|beginner in working out|track the calories intake|feel assured that my workout is on the right track|"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|v1.0|student who is a health enthusiast|keep track of my daily intake of calories|better manage my health|"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|v2.0|gym user|upload the amount of calories consumed or lost|track the surplus or deficit of calories|"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|v2.0|overweight student|calculate the estimated amount of calories lost|facilitate my weight loss regime|"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|v2.0|underweight student|calculate the estimated amount of calories gained|facilitate my weight gain regime|"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|v2.0|weight conscious person|track the amount of calories gained or lost|maintain my weight|"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|v2.0|careless student|go back and edit entries entered earlier|correct the errors I have made|"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|v2.0|frequent user|have pre-set repetitive actions entered by me|save time when inputting data|"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|v2.0|lazy user|be able to chain input|save time when inputting data|"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 5.3 Non-Functional Requirements"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "{Give non-functional requirements}"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1. Should work on any mainstream OS as long as it has Java 11 or above installed."
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 5.4 Glossary"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* *GUI* - Graphics User Interface"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* *CLI* - Command Line Interface"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* *OS* - Operating System"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* *mainstream OS* - Windows, Linus, MacOS, OS-X, Unix"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* *API* - Application Programming Interface"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* *MSS* - Main Success Scenario"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 5.5 Instructions for manual testing"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Starting up application"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1. Ensure that you have Java 11 or above installed, if not, it can be found [here](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html)"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2. Down the latest version of `traKCAL` from [here](https://github.com/AY2021S1-CS2113T-T09-4/tp/releases)"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "e0425705"
        },
        "content": "3. Create an empty folder in a convenient location eg. Desktop and copy jar file over to it."
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "e0425705"
        },
        "content": "4. Open command window/terminal in that window and navigate into the file directory,"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "e0425705"
        },
        "content": "5. Run the command `java -jar {filename}.jar` e.g., `java -jar traKCAL.jar`."
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "e0425705"
        },
        "content": "6. Upon successful run, you will get the following greeting message."
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| Hello from                                                                       |"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  _                  _  __   ___     _     _                                      |"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| | |_   _ _   __ _  | |/ /  / __|   /_\\   | |                                     |"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| |  _| | \u0027_| / _` | | \u0027 \u003c  | (__   / _ \\  | |__                                   |"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  \\__| |_|   \\__,_| |_|\\_\\  \\___| /_/ \\_\\ |____|                                  |"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|                                                                                  |"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| Hello! I\u0027m traKCAL.                                                              |"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| Please do input \u0027help\u0027 for the commands and their respective input format.       |"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "e0425705"
        },
        "content": "7. Enter `help` to view help list containing the features, and their respective input format."
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "e0425705"
        },
        "content": "8. For a detailed list on the available features, please refer to [user guide](UserGuide.md)"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Exiting the application"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1. To terminate **traKCAL**, enter `bye`. A successful terminating of application would look like this:"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| Thank you for using traKCAL. See you again!                                                       |"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Editing user profile"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003eEditing user name and gender"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `user e/ n/ Sam , g/ female`"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: User name will be changed to `Sam` and user gender will be changed to `female`."
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "jlifah"
        },
        "content": " "
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003eEditing user activity level"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `user e/ al/ 3`"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: User activity level will be changed to `3`."
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "jlifah"
        },
        "content": " "
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003eIncorrect inputs to try:"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `user e/ n/        `: empty description for name"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `user e/ g/ meIsMale`: invalid gender type"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `user e/ g/ gender + n/ tom`: wrong separator used. gender will be read as `gender + n/ tom` instead. `+` should be changed to `.`"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `user e/ g/ female , w/ 1000000`: weight is not within 30 to 650 kg range"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `user e/ g/ female , w/ test`: weight is not of valid type to parse to an integer"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `user e/ g/ male , h/ -10`: height is not within 90 to 300 cm range"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `user e/ g/ female , h/ one hundred`: height is not of valid type to parse to an integer"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `user e/ g/ female , age/ 200`: age is not within 10 to 120 years old range"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `user e/ g/ male , age/ twenty`: age is not of valid type to parse to an integer"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `user e/ g/ female , al/ 8`: age is not within 1 to 5"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `user e/ g/ male , age/ twenty`: activity level is not of valid type to parse to an integer"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Editing the user profile text file `tp.txt` will corrupt the next run and user will be directed to create a new user profile"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `user e/ goal/ meWantLoseWeight`: invalid goal type"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `user e/ jkdsfhdskjfhdksfkjsdf/ karen`: invalid tag"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Message with error will be shown."
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Creating a shortcut"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003eCreating a shortcut with 2 food entries"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `createSet dinner f/ chicken c/ 100 + f/ beef c/ 100`"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: A text file named `dinner.txt` will be created in ... with first line as `f/ chicken c/ 100` and second line as `f/ beef c/ 100`."
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003eCreating a shortcut with 1 exercise entry"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `createSet morning exercise e/ run c/ 100`"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: A text file named `morning exercise.txt` will be created in ... with first line as `e/ run c/ 100`."
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003eCreating a shortcut with 1 food entry and 1 exercise entry"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `createSet morning routine f/ oatmeal c/ 300 + e/ jumping jacks c/ 50`"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: A text file named `morning routine.txt` will be created in ... with first line as `f/ oatmeal c/ 300` and second line as `e/ jumping jacks c/ 50`."
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "jlifah"
        },
        "content": " "
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003eIncorrect inputs to try:"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `createSet f/ chicken c/ 100 + f/ beef c/ 100`: missing shortcut name"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `createSet meat f/ chicken f/ fish`: each `f/` or `e/` must be followed be a `c/`"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `createSet fishy lunch f/ fish c/      `: empty description for calories"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `createSet fishy lunch f/        c/ 100`: empty description for food"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `createSet healthy lunch`: missing activity and calorie tag"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `createSet dinner f/ beans c/ 100000`: invalid calorie range, only 0 to 3000 kcal accepted"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `createSet dinner f/ beans c/ test`: calorie not of valid type to parse to an integer"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `createSet dinner f/ beans c/ 1000000000000000`: calorie too large to be an integer"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Message with error will be shown."
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "jlifah"
        },
        "content": " "
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Adding a shortcut into list"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003eAdding a shortcut"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `addSet dinner`"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Contents within `dinner.txt` will be added into today\u0027s list."
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003eIncorrect inputs to try:"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `addSet test1`: if test1 is not yet created as shortcut"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `addSet `: a shortcut name not specified"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `addSet test2`: if test2 has been edited to the wrong format by user"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Message with error will be shown."
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "jlifah"
        },
        "content": " "
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "jlifah"
        },
        "content": " "
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Adding an entry into list"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eAdding a food entry with date"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `add f/ cheesy chicken c/ 180 d/ 2020-11-09`"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: An entry with food description `cheesy chicken` and calories of `100` would be added into 2020-11-09\u0027s list."
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eAdding a food entry without date"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `add f/ milk tea with pearls c/ 125`"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: An entry with food description `milk tea with pearls` and calories of `150` would be added into today\u0027s list."
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eAdding an exercise entry with date"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `add e/ walking c/ 10 d/ 2020-11-05`"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: An entry with exercise description `walking` and calories of `10` would be added into 2020-11-05\u0027s list."
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eAdding an exercise entry without date"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `add e/ 50 sit-ups c/ 75`"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: An entry with food description `50 sit-ups` and calories of `75` would be added into today\u0027s list."
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eIncorrect inputs to try:"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `add f/ jelly 90 `: has missing calorie tag"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `add f/ jelly c/ 90 d/ 2020-10-13`: date is before application launch date, 2020-10-14 or after today\u0027s date"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `add f/ jelly c/ -30`: calories is less than or equals to 0 or more than 3000"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `add e/ jumping up and down in a merry round in Singapore c/ 80`: description is longer than 40 characters"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `add e/ c/ `: empty input parameters"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Message with error will be shown."
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Editing an entry in list"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "e0425705"
        },
        "content": "This feature allows editing of list entry from:"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1. food to food"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2. food to exercise"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "e0425705"
        },
        "content": "3. exercise to food"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "e0425705"
        },
        "content": "4. exercise to exercise"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Prerequisite: The index that the user want to edit on has to exist in the list."
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eEditing an entry in today\u0027s list from food to food"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `edit 1 f/ ice kacang c/ 90`"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Entry at index `1` of today\u0027s list(which is a food entry) would be edited to food description of `ice kacang` and calories of `90`."
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eEditing an entry in today\u0027s list from food to exercise"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `edit 2 e/ running c/ 50`"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Entry at index `2` of today\u0027s list(which is a food entry) would be edited to exercise description of `running` and calories of `50`."
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "e0425705"
        },
        "content": "       "
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eEditing an entry in another day\u0027s list from exercise to exercise"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `list 2020-11-07` then `edit 3 e/ 50 jumping jacks c/ 25`"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Entry at index `3` of 2020-11-07\u0027s list(which is an exercise entry) would be edited to exercise description of `50 jumping jacks` and calories of `25`."
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eEditing an entry in another day\u0027s list from exercise to food"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `list 2020-11-01` then `edit 2 f/ corn chips c/ 75`"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Entry at index `3` of 2020-11-01\u0027s list(which is an exercise entry) would be edited to food description of `corn chips` and calories of `75`."
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eIncorrect inputs to try:"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `edit 1 f/ jelly c/ -30`: calories is less than or equals to 0 or more than 3000"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `edit 2 e/ jumping up and down in a merry round in Singapore c/ 80`: description is longer than 40 characters"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `edit 3 e/ c/ `: empty input parameters"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Message with error will be shown."
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Chaining of features"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "e0425705"
        },
        "content": "This feature allows only 4 features to be chained, add, list, edit and graph."
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*There is no fixed format as there are many combinations available!*"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*Input commands MUST be separated by `\u0026\u0026`*"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eExample 1"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `add f/ ice cream c/ 90 \u0026\u0026 add e/ running c/ 50 \u0026\u0026 list`"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: An entry with food description `ice cream` and calories of `90` would be added into today\u0027s list, an entry with exercise description `running` and calories of `50` would be added into today\u0027s list and today\u0027s list would be printed out."
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eExample 2"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `list \u0026\u0026 graph`"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Prints today\u0027s `list` and `graph`"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eExample 3"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `list \u0026\u0026 list 2020-11-06 \u0026\u0026 list 2020-11-08`"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Prints today\u0027s list, prints 2020-11-06\u0027s list and prints 2020-11-08\u0027s list"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eExample 4"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `add f/ ice cream c/ 90 d/ 2020-11-07 \u0026\u0026 list \u0026\u0026 edit 7 e/ walking c/ 15`"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: An entry with food description `ice cream` and calories of `90` would be added into today\u0027s list, prints today\u0027s list and entry at index `7` of today\u0027s list would be edited to exercise description of `walking` and calories of `15`."
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eIncorrect inputs to try:"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e* Test case: The incorrect input from [add](#adding-an-entry-into-list), list, [edit](#editing-an-entry-in-list), graph [graph](#graph-features)"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Message with error will be shown."
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "#### Find feature"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003eFinding an entry using find d/"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `find d/ apple`"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: All entries with food description `apple` would be displayed."
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003eFinding an entry using find c/"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `find c/ 500`"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: All entries with calories count `100` would be displayed."
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003eFinding an entry using find a/"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `find a/ run / garden / evening`"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: All entries with descriptions containing `run`, `garden` **and** `evening` would be displayed."
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003eFinding an entry using find e/"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: `find e/ walk / jump / kick`"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: All entries with descriptions containing at least one of of the keyword \"`walk`, `jump` **or** `kick`\" would be displayed."
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003eIncorrect inputs to try:"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: Not specifying keywords to be searched for. Example: `find d/`"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Message with error will be shown."
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: Consecutive slashes in input for `a/` or `e/`. Example:`find a// apple / pie`"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Message with error will be shown."
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "#### Deleting Activities"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "This feature has two further sub features, delete by index and delete all."
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "*Both delete features require at least one activity to be in the list*"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "*Deletion of entry can further by checked by `list` command.* "
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003eDeleting 2nd entry from a list with 2 items"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e* Test case: `delete 2`"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e* Expected: `Activity removed!` will be displayed. Only 1 entry will be displayed. "
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003eDeleting all entries from the list with some activities in list."
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e* Test case: `delete all/`"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e* Expected: A confirmation message will be shown. If confirmed, `All activities have been deleted` will be displayed."
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e*           If not confirmed, `Delete command aborted` will be displayed."
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003eIncorrect Input:"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003eDeleting on an empty list or invalid index:"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e* Test case: `delete 1000`"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e* Test case: `delete -1`"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e* Test case: `delete all/`"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e* Expected: `Invalid Index!` will be displayed."
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003eDeleting with invalid description:"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e* Test case: `delete abc`"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e* Expected: `Index is not a number!` will be displayed."
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "#### Graph features"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003eShows upto 7 days of net calories."
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e* Test case: `graph`"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e* Expected: A graph will be showm."
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e There is no data at all."
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e* Test case: `graph`"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e* Expected: `List is empty` will be shown."
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: Not specifying keywords to be searched for. Example: `find d/`"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Message with error will be shown."
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Test case: Consecutive slashes in input for `a/` or `e/`. Example:`find a// apple / pie`"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Expected: Message with error will be shown."
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "chewyang"
        },
        "content": "#### List Feature"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003eListing the activities for today"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Test case: `list`"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Expected: The list of activities for today would be displayed unless the list is empty."
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "chewyang"
        },
        "content": " "
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003eListing the activities for a specific day"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Test case: `list 2020-11-31`"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Expected: The list of activities would be displayed unless the list is empty."
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003eIncorrect inputs to try:"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Test case: `list 2020/11/31`"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Expected: The list for 2020-11-31 will not be displayed and a error message will be shown."
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "chewyang"
        },
        "content": "#### Move feature"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003eMoving an activity from the 1st position to the 4th position"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Test case: `move from/ 1 below/ 3`"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Expected: The activity at position 1 will be move to position 4 in the list."
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003eMoving an activity from the 4th position to the 1st position"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Test case: `move from/4 below/0`"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Expected: The activity at position 4 will be moved to the 1st position in the list."
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003eOther incorrect commands to try"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Test case: `move from/2 below/2`"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Expected: There would be no change. An error message will be shown."
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Test case: `move from/0 below/2`"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Expected: 0 is a invalid index. An error message will be shown."
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Test case: `move from/2 below/1`"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Expected: There would be no change. An error message will be shown."
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jlifah": 147,
      "chewyang": 141,
      "e0425705": 404,
      "-": 25,
      "1-Karthigeyan-1": 163,
      "poonchuanan": 46
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "# trakCAL"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "**traKCAL** is a desktop application for managing calories\u0027 intake, optimized for use via Command Line Interface (CLI) whilst retaining the benefits of a Graphical User Interface (GUI). "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "If you type fast, **traKCAL** can manage your activities faster than traditional GUI applications, and is perfect for you!"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "So what are you waiting for? Download [**traKCAL**](https://github.com/AY2021S1-CS2113T-T09-4/tp/releases) now!"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "e0425705": 5,
      "-": 7
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "# User Guide for traKCAL"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The purpose of this user guide is to guide the users on the commands available in this application, their respective uses and the expected inputs."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "By: CS2113-T09-4  \u003cbr\u003e   Since: October 2020  \u003cbr\u003e  Licence: MIT"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "# Introduction"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "**Welcome to traKCAL**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "**traKCAL** is a desktop application for managing and visualizing your calorie intake, optimized for use via Command Line Interface (CLI) whilst retaining the benefits of a Graphical User Interface (GUI). "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "If you are a fast typist, **traKCAL** is perfect for you!"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* Table of Contents"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "{:toc}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "# Quick Start"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "This section gives the steps you need to get started quickly."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "1. Ensure that you have Java 11 or above installed, if not, it can be found [here](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2. Down the latest version of `traKCAL` from [here](https://github.com/AY2021S1-CS2113T-T09-4/tp/releases)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "3. Create an empty folder in a convenient location eg. Desktop and copy jar file over to it."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "4. Open command window/terminal in that window and navigate into the file directory,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "5. Run the command `java -jar {filename}.jar` e.g., `java -jar traKCAL.jar`."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "6. Upon successful run, you will get the following greeting message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| Hello from                                                                       |"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  _                  _  __   ___     _     _                                      |"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| | |_   _ _   __ _  | |/ /  / __|   /_\\   | |                                     |"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| |  _| | \u0027_| / _` | | \u0027 \u003c  | (__   / _ \\  | |__                                   |"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  \\__| |_|   \\__,_| |_|\\_\\  \\___| /_/ \\_\\ |____|                                  |"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|                                                                                  |"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| Hello! I\u0027m traKCAL.                                                              |"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": "| Please do input \u0027help\u0027 for the commands and their respective input format.       |"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jlifah"
        },
        "content": "   * Tip: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     Increase your windows length if the greeting message appears congested like this:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     ![Congested opening message](diagrams/openingMessageError.png)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jlifah"
        },
        "content": "6. Type a command in the command box and press Enter to execute it. e.g. typing `help` and pressing Enter will open the help window"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chewyang"
        },
        "content": "   Some example commands you can try:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    * `list`: Lists all entries for today"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    * `add f/ apple c/ 30`: Adds a food entry named `apple` and of calories `30` to today\u0027s list **trakCAL**."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    * `delete 3`: Deletes the 3rd contact shown in the current list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    * `bye`: Exits the application."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chewyang"
        },
        "content": "7. Refer to the [Features](#features) below for details of each command"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "# Features "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "This section gives you a detailed description of each feature available in **traKCAL**."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eThings to take note of:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Inputs that look like `**THIS**` are compulsory parameters for you to fill in."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* Inputs that look like `\u003cTHIS\u003e` are optional parameters that you do not need to fill in to achieve the desired outcome.  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e* Input format should adhere to the one in the help list or in this user guide."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* All features such as `add`, `edit`, `list`, etc. are not case-sensitive, but it is recommended for you to follow the format stated in help list or this user guide."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eIMPORTANT:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* If you want to edit or delete on a list, PLEASE ensure that you have pulled out the list you want."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## 1.0 Viewing help - Puah Siew Wen"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Do you need help? Do you need a reminder of what the features available, and their respective input format? Well this section solves it for you!"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `help`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": "This section displays the commands available and their respective input format."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e Words in CAPS are parameters to be filled in by you!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e Variables in \u003chere\u003e are optional!"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Viewing help:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "help                   - Prints out commands available and their input format"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0425705"
        },
        "content": "User Profiling"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0425705"
        },
        "content": "user l/                - Prints out current user profile"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": "user c/                - Creates new user profile"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "user e/ \u003cn/ NAME\u003e, \u003cg/ GENDER\u003e, \u003cw/ WEIGHT\u003e, \u003ch/ HEIGHT\u003e, \u003cage/ AGE\u003e, \u003cal/ ACTIVITY_FACTOR\u003e,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                         \u003cgoal/ GOAL\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                       - Edits user profile to name, NAME, gender(male/female), GENDER,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                         height(in cm), HEIGHT, age, AGE, activity factor(1-5), ACTIVITY_FACTOR,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                         goal(lose/maintain/gain), GOAL"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Creating shortcut:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*[This command is extensive, there are a lot of variations. The following is one such example]*"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0425705"
        },
        "content": "createSet SHORTCUT_NAME f/ FOOD_DESCRIPTION c/ CALORIE_COUNT +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0425705"
        },
        "content": "e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT + f/ FOOD_DESCRIPTION c/ CALORIE_COUNT"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*[Another possible example is:]*"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0425705"
        },
        "content": "createSet SHORTCUT_NAME f/ FOOD_DESCRIPTION c/ CALORIE_COUNT + f/ FOOD_DESCRIPTION c/ CALORIE_COUNT"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                       - Creates shortcut, SHORTCUT_NAME for adding food(s) and/or exercise(s)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                         depending on the format entered"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0425705"
        },
        "content": "addSet SHORTCUT_NAME   - Adds SHORTCUT_NAME that was created in createSet into today\u0027s list"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Adding:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0425705"
        },
        "content": "add f/ FOOD_DESCRIPTION c/ CALORIE_COUNT"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                       - Adds food consumed, FOOD_DESCRIPTION and calories gained, CALORIE_COUNT"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                         to today\u0027s date"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0425705"
        },
        "content": "add f/ FOOD_DESCRIPTION c/ CALORIE_COUNT d/ DATE"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                       - Adds food consumed, FOOD_DESCRIPTION, calories gained, CALORIE_COUNT"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                         and date(YYYY-MM-DD), DATE"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0425705"
        },
        "content": "add e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                       - Adds exercise done, EXERCISE_DESCRIPTION and calories lost, CALORIE_COUNT"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                         to today\u0027s date"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0425705"
        },
        "content": "add e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT d/ DATE"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                       - Adds exercise done, EXERCISE_DESCRIPTION, calories lost, CALORIE_COUNT"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                         and date(YYYY-MM-DD), DATE"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Listing:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0425705"
        },
        "content": "list                   - Prints out the list of entries."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0425705"
        },
        "content": "list DATE              - Prints out the list of entries for the date(YYYY-MM-DD), DATE"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Editing:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0425705"
        },
        "content": "edit LIST_INDEX f/ FOOD_DESCRIPTION c/ CALORIE_COUNT"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                       - Edits entry at index LIST_INDEX of latest list printed out"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                         to food consumed, FOOD_DESCRIPTION, calories gained, CALORIE_COUNT"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0425705"
        },
        "content": "edit LIST_INDEX e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                       - Edits entry at index LIST_INDEX of latest list printed out"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                         to exercise done, EXERCISE_DESCRIPTION, calories lost, CALORIE_COUNT"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Finding:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0425705"
        },
        "content": "find d/ DESCRIPTION    - Searches for all entries description with the DESCRIPTION keyword"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0425705"
        },
        "content": "find c/ CALORIE_COUNT  - Searches for all entries with calories of CALORIE_COUNT"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0425705"
        },
        "content": "find a/ DESCRIPTION1 / DESCRIPTION2 ... / DESCRIPTION"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                        - Searches for all entries with ALL matching keywords from"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                          DESCRIPTION1 to DESCRIPTION"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0425705"
        },
        "content": "find e/ DESCRIPTION1 / DESCRIPTION2 ... / DESCRIPTION"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                        - Searches for all entries with AT LEAST one matching keyword from"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                          DESCRIPTION1 to DESCRIPTION"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Moving:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0425705"
        },
        "content": "move from/ INDEX1 below/ INDEX2"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                       - Moves the entry at index INDEX1 to the index below INDEX2"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Deleting:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0425705"
        },
        "content": "delete LIST_INDEX      - Deletes entry located at index LIST_INDEX of latest list printed out"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0425705"
        },
        "content": "delete all/            - Deletes all entries in current date list"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Graphing:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0425705"
        },
        "content": "graph                  - Generates a graph of target calorie and net calorie obtained up to"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                         last 7 days"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Chaining:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*[This command is extensive, there are a lot of variations,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                          but is only available to add, list and edit.]*"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*[One possible example is:]*"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0425705"
        },
        "content": "add f/ FOOD_DESCRIPTION c/ CALORIE_COUNT d/ DATE \u0026\u0026 list \u0026\u0026 edit LIST_INDEX f/ FOOD_DESCRIPTION"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0425705"
        },
        "content": "add f/ FOOD_DESCRIPTION c/ CALORIE_COUNT d/ DATE \u0026\u0026 list \u0026\u0026 edit LIST_INDEX f/ FOOD_DESCRIPTION"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                         c/ CALORIE_COUNT"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*[Another possible example is:]*"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0425705"
        },
        "content": "add f/ FOOD_DESCRIPTION c/ CALORIE_COUNT d/ DATE \u0026\u0026 add e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Exiting:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0425705"
        },
        "content": "bye                    - Terminates the application"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jlifah"
        },
        "content": "## 2.0 User Profile - Jenny Lin"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 2.1 Creating a new user profile"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jlifah"
        },
        "content": "If this is your first time using **traKCAL**, you will be automatically prompted to create a user profile and there is no need for you to input any command. **traKCAL** will then use these details from your user profile to calculate the following: "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* BMI"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* Recommended daily calorie"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* Calorie goal to reach weight goal"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `user c/`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `user c/`"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e For this section only, words that look like `*this*` is user input"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Hey there! We do not have a record of your profile. Please create one now! :)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jlifah"
        },
        "content": "What is your name?"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*Sam*"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jlifah"
        },
        "content": "What is your gender (male/female)?"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*female*"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jlifah"
        },
        "content": "What is your weight in kg?"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*50*"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jlifah"
        },
        "content": "What is your height in cm?"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*100*"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jlifah"
        },
        "content": "What is your age?"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jlifah"
        },
        "content": "*11*"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jlifah"
        },
        "content": "How active are you on a scale of 1-5? With 1 being least active and 5 being most active."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*4*"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Do you wish to lose/maintain/gain weight?"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*gain*"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Your BMI is 50.0"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Your recommend daily calories intake is 1576.65 calories."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jlifah"
        },
        "content": "To gain weight, you should consume 2076.65 calories instead."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 2.1.1 Possible errors when creating a new user profile"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "chewyang"
        },
        "content": "An error will occur if any of the conditions below are met. \u003cbr\u003e"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "chewyang"
        },
        "content": "The respective error message will also be shown to you."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `Any text in this format is an example of a command that will produce the respective error.`"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Any text in this format is the error message that you will be shown."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Empty descriptions"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Empty input to any questions."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Please do not enter an empty input"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Invalid parameters"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Gender entered is not specified as female or male."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `tree`"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Sorry this is an invalid gender format! "
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Please input gender as female or male only!"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Weight is not between 30 and 650 kg. "
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `1000`"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Please enter a weight range from 30kg to 650kg"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Weight is not of a convertible type."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `thirty-three`"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Please enter a valid weight format!"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Height is not between 90 and 300 cm."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `350`"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Please enter a height range from 90cm to 300cm"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Height is not of a convertible type."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `one-hundred-meters`"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Please enter a valid height format!"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* Age is not between 10 and 120 years old."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `200`"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Please enter an age range from 10 to 120 years old"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* If age is not of a convertible type."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `two-hundred-years-old`"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Please enter a valid age format!"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    "
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Activity level is not between 1 and 5."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `8`"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Please enter an activity level from 1 to 5 only"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Weight goals is not specified as lose or maintain or gain only."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `cut`"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Please input lose/maintain/gain as weight goal only!"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Corrupted user profile"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* If the text file containing the user profile is of an unreadable format, the following error message will be shown in the subsequent run, and the user will be directed to create a new user profile automatically"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Corrupted user profile!"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Please do not edit the text file unnecessarily."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "jlifah"
        },
        "content": "You are being directed to create a new user profile."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "jlifah"
        },
        "content": "This is to ensure that all features can be used properly."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "jlifah"
        },
        "content": "``` "
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 2.2 Editing user profile"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "jlifah"
        },
        "content": "This feature allows you to edit an existing user profile easily."
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `user e/ \u003cn/ **NAME**\u003e,\u003cg/ **GENDER**\u003e,\u003cw/ **WEIGHT**\u003e,\u003ch/ **HEIGHT**\u003e,\u003cage/ **AGE**\u003e\u003cal/ **ACTIVITY_FACTOR**\u003e,\u003cgoal/ **WEIGHT_GOALS**\u003e`"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Parameters: "
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**NAME**`: Name of user."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**GENDER**`: Gender of user."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**WEIGHT_KG**`: Weight of user in kg."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**HEIGHT_CM**`: Height of user in cm."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**AGE**`: Age of user."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**ACTIVITY_FACTOR**`: How active user is, with 1 being most active and 5 being least active."
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**WEIGHT_GOALS**`: Whether user wants to lose/maintain/gain weight."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `user e/ n/ Tom, w/ 90`"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Your name has been updated to Tom."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Your weight has been updated to 90kg."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 2.2.1 Possible errors when editing a user profile"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Invalid parameters"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* The [error messages](#211-possible-errors-when-creating-a-new-user-profile) for edit user profile feature are the same as those found when creating a new user profile. "
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 2.3 View current user profile"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Want to see your current user profile? This feature will be just right for you!"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `user l/`"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* `user l/`"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Here is your user profile:"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Name : Sam"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Gender : female"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Weight : 50"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Height : 100 "
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Age : 10"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Activity Level : 4"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Weight Goal : gain"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "jlifah"
        },
        "content": "## 3.0 Shortcut - Jenny Lin"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 3.1 Creating a shortcut for a set of entries "
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "jlifah"
        },
        "content": "This command helps you create a shortcut for a set of commonly used exercise and/or food entries, reducing the amount of time needed for you to add multiple common entries. "
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Format: `createSet **SHORTCUT_NAME** ...`"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Examples of formats accepted:"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e`createSet **SHORTCUT_NAME** f/ **FOOD_DESCRIPTION** c/ **CALORIE_COUNT** + f/ **FOOD_DESCRIPTION** c/ **CALORIE_COUNT**`"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e`createSet **SHORTCUT_NAME** e/ **EXERCISE_DESCRIPTION** c/ **CALORIE_COUNT**`"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e`createSet **SHORTCUT_NAME** e/ **EXERCISE_DESCRIPTION** c/ **CALORIE_COUNT** + e/ **EXERCISE_DESCRIPTION** c/ **CALORIE_COUNT** + f/ **FOOD_DESCRIPTION** c/ **CALORIE_COUNT**`"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**FOOD_DESCRIPTION**`: Description of food consumed."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**CALORIE_COUNT**`: Amount of calories lost/gained."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**EXERCISE_DESCRIPTION**`: Description of exercise done."
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**SHORTCUT_NAME**`: Name of shortcut."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "jlifah"
        },
        "content": "*  `createSet bfast f/ ice cream c/ 78 + e/ jumping jacks c/ 100`"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "jlifah"
        },
        "content": "You have created a shortcut containing:"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "jlifah"
        },
        "content": "1. Food: ice cream, Calories: 78"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "jlifah"
        },
        "content": "2. Exercise: jumping jacks, Calories: 100"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 3.1.1 Possible errors when creating shortcut"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "chewyang"
        },
        "content": "An error will occur if any of the conditions below are met. \u003cbr\u003e"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "chewyang"
        },
        "content": "The respective error message will also be shown to you."
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `Any text in this format is an example of a command that will produce the respective error.`"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Any text in this format is the error message that you will be shown."
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Missing keywords"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Name of shortcut not specified."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `createSet f/ fish c/ 100`"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "jlifah"
        },
        "content": "You did not specify a short cut name in your createSet command."
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "jlifah"
        },
        "content": "As such, no shortcut was created. Please try again!"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Empty description for activity description or calories."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `createSet fishy lunch f/ fish c/`"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "jlifah"
        },
        "content": "This shortcut has an empty description or calorie tag or both."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "jlifah"
        },
        "content": "This shortcut was not been successfully created as there was an error in your input."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Please try again!"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "chewyang"
        },
        "content": "*There are no calorie and/or activity tag."
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `createSet healthy lunch` or `createSet healthy f/ oatmeal`"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "jlifah"
        },
        "content": "You are missing an activity tag or calorie tag or both"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "jlifah"
        },
        "content": "This shortcut was not been successfully created as there was an error in your input."
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Please try again!"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Invalid parameters"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Shortcut name given already exist within the database. For example if a set named `morning routine` already exists, the following command would produce the error:"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `createSet morning routine f/ beans c/ 100000`"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "jlifah"
        },
        "content": "There is a shortcut with this name already. Please choose another name"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Calorie entered is not between 0 and 3000 kcal."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `createSet dinner f/ beans c/ 100000`"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Please enter a valid calorie range."
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "jlifah"
        },
        "content": "This shortcut was not successfully created as there was an error in your input."
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Please try again!"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Calorie entered is not of integer type or exceeds the threshold of integer conversion."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `createSet dinner f/ beans c/ 1000000000000000` or \u003cbr\u003e"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `createSet dinner f/ beans c/ test`"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Please enter calorie as integer."
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "jlifah"
        },
        "content": "This shortcut was not successfully created as there was an error in your input."
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Please try again!"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 3.2 Adding a shortcut of repeated task to today\u0027s list"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Want to add in a set of entries all at once? This feature teaches you how to do so!"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `addSet **SHORTCUT_NAME**`"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**SHORTCUT_NAME**`: Name of shortcut created beforehand in [createSet](#31-creating-a-shortcut-for-a-set-of-entries)."
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `addSet bfast`"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "jlifah"
        },
        "content": "We are attempting to add activities listed in this shortcut."
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Noted! The following has been added into list:"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "e0425705"
        },
        "content": "[F] | ice cream | 78"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The current activity list has been saved."
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "e0425705"
        },
        "content": "[E] | jumping jacks | 100"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The current activity list has been saved."
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 3.2.1 Possible errors when adding shortcut"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "jlifah"
        },
        "content": "An error will occur if any of the conditions below are met. \u003cbr\u003e"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "jlifah"
        },
        "content": "The respective error message will also be shown to you."
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e Any text in this format is an example of a command that will produce the respective error."
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Any text in this format is the error message that you will be shown."
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Wrong keywords"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Using a shortcut that has not been created yet. For example, if a set named \u0027dinner\u0027 has not yet been created, the following command will produce an error:"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `addset dinner`"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "jlifah"
        },
        "content": "This shortcut does not exists!"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Please create a shortcut before adding it!"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Missing keywords "
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Name of the shortcut not specified."
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `addSet `"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Index 1 out of bounds for length 1"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Invalid command!"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Please input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Corrupted text file for shortcut"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* If a user edits the text file containing the shortcut to an unreadable format and calls the shortcut in a subsequent run, the following error message will be shown:"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "jlifah"
        },
        "content": "  "
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Your shortcut text file is corrupted!"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "jlifah"
        },
        "content": "As such, it will now be deleted. Please avoid editing the text file to the wrong format in the future."
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Items in the shortcut may have been added partially only."
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## 4.0 Add - Puah Siew Wen"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 4.1 Adding a food entry"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Want to add a food entry? This feature solves it for you by adding a food entry with its respective calories to the list!"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `add f/ **FOOD_DESCRIPTION** c/ **CALORIE_COUNT** \u003cd/ **DATE**\u003e`"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**FOOD_DESCRIPTION**`: Description of food consumed."
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**CALORIE_COUNT**`: Amount of calories gained."
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `\u003c**DATE**\u003e`: Date in the format YYYY-MM-DD, where YYYY \u003d year, MM \u003d month, DD \u003d day."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e REMINDER: "
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `d/ **DATE**` is optional, if you enter add command without it, it will add to the current date list. "
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Examples of usage: "
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Adding a food entry without date specified:"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list` before adding"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  2020-11-07  |  Net Calorie: 30 kcal  |"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "e0425705"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1          Food           apple_____________________________________________________30"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `add f/ mushroom soup c/ 77`"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Noted! The following has been added into list:"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "e0425705"
        },
        "content": "[F] | mushroom soup | 77"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The current activity list has been saved."
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list` after adding"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "e0425705"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  2020-11-07  |  Net Calorie: 107 kcal  |"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "e0425705"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "e0425705"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1          Food           apple_____________________________________________________30"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2          Food           mushroom soup_____________________________________________77"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Adding a food entry with date specified:"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list 2020-11-05` before adding"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  2020-11-05  |  Net Calorie: 77 kcal  |"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "e0425705"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1          Food           jelly_____________________________________________________77"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `add f/ banana cake c/ 70 d/ 2020-11-05`"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Noted! The following has been added into list:"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "e0425705"
        },
        "content": "[F] | banana cake | 70"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The current activity list has been saved."
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list 2020-11-05` after adding"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "e0425705"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  2020-11-05  |  Net Calorie: 147 kcal  |"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "e0425705"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "e0425705"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1          Food           jelly_____________________________________________________77"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2          Food           banana cake_______________________________________________70"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 4.2 Adding an exercise entry"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Want to add an exercise entry? This feature solves it for you by adding an exercise entry with its respective calories to the list."
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `add e/ **EXERCISE_DESCRIPTION** c/ **CALORIE_COUNT** \u003cd/ **DATE**\u003e`"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**EXERCISE_DESCRIPTION**`: Description of exercise done."
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**CALORIE_COUNT**`: Amount of calories lost."
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `\u003c**DATE**\u003e`: Date in the format YYYY-MM-DD, where YYYY \u003d year, MM \u003d month, DD \u003d day."
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e REMINDER: "
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `d/ **DATE**` is optional, if you enter add command without it, it will add to the current date list. "
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Examples of usage: "
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Adding an exercise entry without date specified:"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list` before adding"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "e0425705"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  2020-11-07  |  Net Calorie: 177 kcal  |"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "e0425705"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "e0425705"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1          Food           apple_____________________________________________________30"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2          Food           mushroom soup_____________________________________________77"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "e0425705"
        },
        "content": "3          Food           banana cake_______________________________________________70"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `add e/ jumping c/ 65`"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Noted! The following has been added into list:"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "e0425705"
        },
        "content": "[E] | jumping | 65"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The current activity list has been saved."
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list` after adding"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "e0425705"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  2020-11-07  |  Net Calorie: 112 kcal  |"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "e0425705"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "e0425705"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1          Food           apple_____________________________________________________30"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2          Food           mushroom soup_____________________________________________77"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "e0425705"
        },
        "content": "3          Food           banana cake_______________________________________________70"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "e0425705"
        },
        "content": "4        Exercise         jumping___________________________________________________65"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Adding an exercise entry with date specified:"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list 2020-11-05` before adding"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "e0425705"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  2020-11-05  |  Net Calorie: 147 kcal  |"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "e0425705"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "e0425705"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1          Food           jelly_____________________________________________________77"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2          Food           banana cake_______________________________________________70"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `add e/ jumping c/ 65`"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Noted! The following has been added into list:"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "e0425705"
        },
        "content": "[E] | jumping | 65"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The current activity list has been saved."
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list 2020-11-05` after adding"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  2020-11-05  |  Net Calorie: 82 kcal  |"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "e0425705"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1          Food           jelly_____________________________________________________77"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2          Food           banana cake_______________________________________________70"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "e0425705"
        },
        "content": "3        Exercise         jumping___________________________________________________65"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 4.3 Possible errors when adding an entry into activity list"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "e0425705"
        },
        "content": "An error will occur if any of the conditions below are met. \u003cbr\u003e "
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The respective error message will also be shown to you."
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e Any text in this format is an example of a command that will produce the respective error."
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Any text in this format is the error message that you will be shown."
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Missing tags"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* When you input command with missing calorie tag."
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e `add f/ jelly 90 `"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Calorie count tag[c/] is missing in your input!"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Activity date is before application launch date or after today\u0027s date"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* When you input command that is before 2020-10-14 or after today\u0027s date."
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e `add f/ jelly c/ 90 d/ 2020-10-13`"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "e0425705"
        },
        "content": "You have exceeded the accepted date range!"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Date input has to be from 2020-10-14 to current date!"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Calorie count exceeds acceptable range"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* When you input calorie count that is \u003c\u003d 0 or \u003e 3000."
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e `add e/ jump c/ -30`"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Calorie count should be \u003e 0 and \u003c\u003d 3000!"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Please input a valid calorie count that is within the range!"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Description length exceeds acceptable range"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* When you input description with more than 40 characters."
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e `add e/ jumping up and down in a merry round in Singapore c/ 80`"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Maximum description length is 40 characters only!"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Empty inputs will not be accepted"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* When you have empty input parameters."
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e `add e/ c/ `"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Current description is empty!"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Please input a valid description that is not empty!"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "chewyang"
        },
        "content": "## 5.0 List - Owen Chew Yang"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "chewyang"
        },
        "content": "### 5.1 Listing entries"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "chewyang"
        },
        "content": "You can view your entries for a specific day by using this `list` command."
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `list \u003c**DATE**\u003e`"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `\u003c**DATE**\u003e`: Date in the format YYYY-MM-DD, where YYYY \u003d year, MM \u003d month, DD \u003d day."
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eREMINDER: "
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e* The `**DATE**` parameter is optional, if were to you enter list command without it, it will print out the list of entries for today\u0027s date."
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Examples of usage: "
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Listing without date specified:"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list`"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "e0425705"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  2020-11-03  |  Net Calorie: 165 kcal  |"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "e0425705"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "e0425705"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1          Food           rice______________________________________________________150"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2        Exercise         running___________________________________________________75"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "e0425705"
        },
        "content": "3          Food           ice cream_________________________________________________90"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Listing with date specified:"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* `list 2020-10-11`"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "chewyang"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "chewyang"
        },
        "content": "|  2020-10-11  |  Net Calorie: 270 kcal  |"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "chewyang"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "chewyang"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "chewyang"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "chewyang"
        },
        "content": "1        Exercise         morning run_______________________________________________100"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "chewyang"
        },
        "content": "2          Food           rice with veg_____________________________________________200"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "chewyang"
        },
        "content": "3          Food           dinner____________________________________________________150"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "chewyang"
        },
        "content": "4        Exercise         Gym_______________________________________________________200"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "chewyang"
        },
        "content": "5          Food           Supper____________________________________________________200"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "chewyang"
        },
        "content": "6          Food           Biscuit___________________________________________________20"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 5.1.1 Possible errors when listing"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "e0425705"
        },
        "content": "An error will occur if any of the conditions below are met. "
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "chewyang"
        },
        "content": "The respective error message will also be shown to you."
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e Any text in this format is an example of a command that will produce the respective error."
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Any text in this format is the error message that you will be shown."
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "chewyang"
        },
        "content": "#### Accessing a list with no entries"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* If there are no entries for 2020-10-31, the following command will produce an error: "
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `list 2020-10-31`"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "chewyang"
        },
        "content": "List is empty!"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Using an invalid date format"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* **DATE** format you entered is not of YYYY-MM-DD format."
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e `list 2020/31/10`"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Wrong format of date entered!"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "chewyang"
        },
        "content": "The accepted format is YYYY-MM-DD!"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Also, ensure that the date input actually exists!"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Please do input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## 6.0 Edit - Puah Siew Wen"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 6.1 Editing an entry in list"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "e0425705"
        },
        "content": "A typo when entering input? Do you want to edit attributes of a particular entry in the list? This feature solves it for you!"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `edit **LIST_INDEX** f/ **FOOD_DESCRIPTION** c/ **CALORIE_COUNT**` OR `edit **LIST_INDEX** e/ **EXERCISE_DESCRIPTION** c/ **CALORIE_COUNT**`"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Examples of formats accepted:"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1. Editing an entry in list from food to food: `edit **LIST_INDEX** f/ **FOOD_DESCRIPTION** c/ **CALORIE_COUNT**`"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2. Editing an entry in list from food to exercise: `edit **LIST_INDEX** e/ **EXERCISE_DESCRIPTION** c/ **CALORIE_COUNT**`"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "e0425705"
        },
        "content": "3. Editing an entry in list from exercise to exercise: `edit **LIST_INDEX** e/ **EXERCISE_DESCRIPTION** c/ **CALORIE_COUNT**`"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "e0425705"
        },
        "content": "4. Editing an entry in list from exercise to food: `edit **LIST_INDEX** f/ **FOOD_DESCRIPTION** c/ **CALORIE_COUNT**`"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**LIST_INDEX**`: Index of entry to be edited in the latest pull out list."
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**FOOD_DESCRIPTION**`: New description of food consumed."
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**EXERCISE_DESCRIPTION**`: New description of exercise done."
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**CALORIE_COUNT**`: New amount of calories gained/lost."
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eThings you should take note of:"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* This feature allows the changing of a food activity to exercise activity in the list. Vice versa."
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* The list in which you want to edit to have to be pulled out first before being able to edit on it."
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* This command edits the latest list pulled out. For example, if `list 2020-10-21` is the latest list to be pulled out, then `edit` will edit index stated in date 2020-10-21\u0027s list."
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eIMPORTANT:"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* If you want to edit or delete on a list, PLEASE ensure that you have pulled out the list you want."
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eIMPORTANT:"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* This feature cannot be exercised on find feature!"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Editing from activity type food to food:"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list` before editing"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  2020-11-07  |  Net Calorie: 92 kcal  |"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "e0425705"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1          Food           apple_____________________________________________________30"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2          Food           mushroom soup_____________________________________________77"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "e0425705"
        },
        "content": "3          Food           banana cake_______________________________________________70"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "e0425705"
        },
        "content": "4        Exercise         jumping___________________________________________________65"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "e0425705"
        },
        "content": "5        Exercise         brisk walking_____________________________________________20"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `edit 1 f/ orange c/ 35`"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Noted! The following has been edited:"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "e0425705"
        },
        "content": "[F] | orange | 35"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The current activity list has been saved."
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list` after editing"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  2020-11-07  |  Net Calorie: 97 kcal  |"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "e0425705"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1          Food           orange____________________________________________________35"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2          Food           mushroom soup_____________________________________________77"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "e0425705"
        },
        "content": "3          Food           banana cake_______________________________________________70"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "e0425705"
        },
        "content": "4        Exercise         jumping___________________________________________________65"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "e0425705"
        },
        "content": "5        Exercise         brisk walking_____________________________________________20"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Editing from activity type food to exercise: "
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list 2020-11-05` before editing"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  2020-11-05  |  Net Calorie: 97 kcal  |"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "e0425705"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1          Food           orange____________________________________________________35"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2          Food           mushroom soup_____________________________________________77"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "e0425705"
        },
        "content": "3          Food           banana cake_______________________________________________70"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "e0425705"
        },
        "content": "4        Exercise         jumping___________________________________________________65"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "e0425705"
        },
        "content": "5        Exercise         brisk walking_____________________________________________20"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `edit 3 e/ 50 sit ups c/ 75`"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Noted! The following has been edited:"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "e0425705"
        },
        "content": "[E] | 50 sit ups | 75"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The current activity list has been saved."
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list 2020-11-05` after editing"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "e0425705"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  2020-11-05  |  Net Calorie: -48 kcal  |"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "e0425705"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "e0425705"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1          Food           orange____________________________________________________35"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2          Food           mushroom soup_____________________________________________77"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "e0425705"
        },
        "content": "3        Exercise         50 sit ups________________________________________________75"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "e0425705"
        },
        "content": "4        Exercise         jumping___________________________________________________65"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "e0425705"
        },
        "content": "5        Exercise         brisk walking_____________________________________________20"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 6.1.1 Possible errors when editing"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "An error will occur if any of the conditions below are met. "
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The respective error message will also be shown to you."
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e Any text in this format is an example of a command that will produce the respective error."
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Any text in this format is the error message that you will be shown."
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Calorie count exceeds acceptable range"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* When you input calorie count that is \u003c\u003d 0 or \u003e 3000."
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e `edit 1 f/ jelly c/ -30`"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Calorie count should be \u003e 0 and \u003c\u003d 3000!"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Please input a valid calorie count that is within the range!"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Description length exceeds acceptable range"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* When you input description with more than 40 characters."
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e `edit 2 e/ jumping up and down in a merry round in Singapore c/ 80`"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Maximum description length is 40 characters only!"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Empty inputs will not be accepted"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* When you have empty input parameters."
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e `edit 3 e/ c/ `"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Current description is empty!"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Please input a valid description that is not empty!"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## 7.0 Find - Poon Chuan An"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 7.1.1 Finding entries via description"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Finds entry/entries based on your keywords entered and list them out. Allows user to search by activity description."
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `find d/ **DESCRIPTION**`"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* `**DESCRIPTION**`: Keyword to look for from the list."
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* `find d/ rice with veg`"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "chewyang"
        },
        "content": "No.        Date                Type                                Description                        Calories gain or lost"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "chewyang"
        },
        "content": "---------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "chewyang"
        },
        "content": "1        2020-10-11            Food              rice with veg________________________________________________200"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "chewyang"
        },
        "content": "2        2020-10-09            Food              rice with veg________________________________________________200"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 7.1.2 Finding entries via calories"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Finds entry/entries based on your keywords entered and list them out. Allows user to search by calories."
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `find c/ **CALORIES**`"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* `**CALORIES**`: Keyword to look for from the list."
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* `find c/ 100` "
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "chewyang"
        },
        "content": "No.        Date                Type                                Description                        Calories gain or lost"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "chewyang"
        },
        "content": "---------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "chewyang"
        },
        "content": "1        2020-10-11          Exercise              morning run__________________________________________________100"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 7.2 Possible errors when finding entries via description or calories"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "An error will occur if any of the conditions below are met. \u003cbr\u003e"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "The respective error message will also be shown to you."
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003e Any text in this format is an example of a command that will produce the respective error."
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Any text in this format is the error message that you will be shown."
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "#### Wrong find command tag/format"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Command tag you entered is not `d/` or `c/` or the format is not correct."
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e `find p/ something`"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "I do not understand what you mean!"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "The input format for finding food or exercise activity"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\tvia keyword is \u0027find d/ DESCRIPTION\u0027 - where keyword is DESCRIPTION"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The input format for finding calorie count via keyword is \u0027find c/ CALORIE_COUNT\u0027"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t- where calories count is CALORIE_COUNT"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The input format for finding (all) is \u0027find a/ KEYWORD1 / KEYWORD2...\u0027"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t- where KEYWORDS are all the words that matches the search result"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The input format for finding (either) is \u0027find e/ KEYWORD1 / KEYWORD2...\u0027"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t- where just one KEYWORD has to match the search result"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Please input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "#### Empty keyword input"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Searching with empty keyword(s)."
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003e `find d/`"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Current keyword is empty!"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Please input a valid keyword that is not empty!"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 7.3.1 Finding entries via keywords - all"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "For users who want to perform more complex find operations, you can make use of this advanced find command to achieve your needs."
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "This command will search of entries matching ALL description keywords you have typed. "
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "jlifah"
        },
        "content": "You can make use of this feature to "
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Format for find by all descriptions: `find a/ **DESCRIPTION1** / **DESCRIPTION2** / **DESCRIPTION3** ...`"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003e There is no limit to the number of descriptions allowed."
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* `**DESCRIPTION1**`: Keyword to look for from the list."
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* `**DESCRIPTION2**`: Keyword to look for from the list."
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* so on..."
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * `find a/ running / 10km / 5pm`"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " "
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "chewyang"
        },
        "content": "No.        Date                Type                                Description                        Calories gain or lost"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "chewyang"
        },
        "content": "---------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "chewyang"
        },
        "content": "1        2020-10-11          Exercise              running at stadium for 10km at 5pm evening_________________100"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 7.3.2 Finding entries via keywords - either"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Want to show even more search results? As long as just one of your description keyword matches a description in the entry, the entry will be listed. "
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Format for find by just one matching description: `find e/ **DESCRIPTION1** / **DESCRIPTION2** / **DESCRIPTION3** ...`"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003eThere is no limit to the number of descriptions allowed."
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* `**DESCRIPTION1**`: Keyword to look for from the list."
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* `**DESCRIPTION2**`: Keyword to look for from the list."
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* so on..."
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* `find e/ sleeping / 5pm` "
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "chewyang"
        },
        "content": "No.        Date                Type                                Description                        Calories gain or lost"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "chewyang"
        },
        "content": "---------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "chewyang"
        },
        "content": "1        2020-10-11          Exercise              running at stadium for 10km at 5pm evening_________________100"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 7.4 Possible error messages when finding entries - all and either"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "#### Wrong find command tag/format"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Command tag you input is not `a/` or `e/` or the format is not correct."
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003e `find p/ KEYWORD`"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "I do not understand what you mean!"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "The input format for finding food or exercise activity"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\tvia keyword is \u0027find d/ DESCRIPTION\u0027 - where keyword is DESCRIPTION"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The input format for finding calorie count via keyword is \u0027find c/ CALORIE_COUNT\u0027"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t- where calories count is CALORIE_COUNT"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The input format for finding (all) is \u0027find a/ KEYWORD1 / KEYWORD2...\u0027"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t- where KEYWORDS are all the words that matches the search result"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The input format for finding (either) is \u0027find e/ KEYWORD1 / KEYWORD2...\u0027"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t- where just one KEYWORD has to match the search result"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Please input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "#### Empty keyword input"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Searching with empty keyword(s)."
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003e `find d/`"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Current keyword is empty!"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Please input a valid keyword that is not empty!"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "#### Consecutive slashes present"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Slashes are used as delimiters for this function. If there are 2 or more \u0027/\u0027 in your input, an error would occur."
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003e `find a//`"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "There are consecutive slashes in your input!"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "chewyang"
        },
        "content": "## 8.0 Move - Owen Chew Yang"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 8.1 Moving an entry to another position"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Want to see list out your calories in an interesting order? You can use the `move` command to move an entry to another position in the last shown list to create your desired list!"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `move from/ **INDEX_1** below/ **INDEX_2**`"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**INDEX_1**`: Index of the entry to be moved from."
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**INDEX_2**`: Index of the entry to be inserted below."
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Examples of usage:"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* After a `list 2020-10-11` command,"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "chewyang"
        },
        "content": " `move from/ 3 below/ 1` moves the 3rd entry in the list to a position below the 1st entry as shown below."
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*`list 2020-10-11` before moving"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "chewyang"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "chewyang"
        },
        "content": "|  2020-10-11  |  Net Calorie: 450 kcal  |"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "chewyang"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "chewyang"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "chewyang"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "chewyang"
        },
        "content": "1          Food           breakfast_______________________________________________100"
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "chewyang"
        },
        "content": "2          Food           second breakfast________________________________________200"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "chewyang"
        },
        "content": "3          Food           tea break_______________________________________________150"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `move from/ 3 below/ 1`"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Activity has been successfully moved!"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*`list 2020-10-11` after `move from/ 3 below/ 1` "
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "chewyang"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "chewyang"
        },
        "content": "|  2020-10-11  |  Net Calorie: 450 kcal  |"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "chewyang"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "chewyang"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "chewyang"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "chewyang"
        },
        "content": "1          Food           breakfast_______________________________________________100"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "chewyang"
        },
        "content": "2          Food           tea break_______________________________________________150"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "chewyang"
        },
        "content": "3          Food           second breakfast________________________________________200"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 8.2 Possible errors when moving"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "chewyang"
        },
        "content": "An error will occur if any of the conditions below are met. \u003cbr\u003e"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "chewyang"
        },
        "content": "The respective error message will also be shown to you."
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e Any text in this format is an example of a command that will produce the respective error."
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Any text in this format is the error message that you will be shown."
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "chewyang"
        },
        "content": "#### Missing keywords"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* The appropriate keywords `from/` and `below/` are missing from your command."
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `move 1 2`"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u0027from/\u0027 and \u0027below/\u0027 keyword is missing!"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Please do input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Only the `from/` keyword is missing."
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `move 1 below/ 2`"
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u0027from/\u0027 keyword is missing!"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Please do input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Only the `below/` keyword is missing."
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `move from/ 1 below 2`"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u0027below/\u0027 keyword is missing!"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Please do input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "chewyang"
        },
        "content": "#### Index of invalid range used"
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Any of the `**INDEX_1**` or `**INDEX_2**` parameters you entered for the respective keywords are not of valid range."
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* For example, a list with only 3 entries will result in an error if a command similar to the one below is entered:"
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `move from/ 5 below/ 2`"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "chewyang"
        },
        "content": "The index entered is not within the range!"
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Please do input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "chewyang"
        },
        "content": "#### Invalid index used"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Any of the `**INDEX_1` or `**INDEX_2**` entered for the respective keywords are invalid."
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* For example if the user enters a character instead of a number similar to the example command below "
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `move from/ a below/ ~`"
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Index is not a number!"
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Please input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "chewyang"
        },
        "content": "#### Moving which results in no change"
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Any of the `**INDEX_1` or `**INDEX_2**` entered for the respective keyword will not result in any changes to the list."
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `move from/ 1 below/ 0` OR \u003cbr\u003e"
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `move from/ 2 below/ 2`"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "chewyang"
        },
        "content": "The indexes entered for this move command does not result in any change!"
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "chewyang"
        },
        "content": " "
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## 9.0 Delete - Rani Karthigeyan Rajendrakumar"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 9.1 Deleting an entry in list"
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "chewyang"
        },
        "content": "You can delete an entry in the list using the `delete` command."
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eIMPORTANT:"
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* If you want to edit or delete on a list, PLEASE ensure that you have pulled out the list you want."
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `delete **INDEX**`"
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**INDEX**`: Index of entry to be deleted in the last shown list."
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list` before deleting"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "chewyang"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "chewyang"
        },
        "content": "|  2020-10-11  |  Net Calorie: 650 kcal  |"
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "chewyang"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "chewyang"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "chewyang"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "chewyang"
        },
        "content": "1          Food           apple___________________________________________________100"
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "chewyang"
        },
        "content": "2          Food           melon___________________________________________________200"
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "chewyang"
        },
        "content": "3          Food           banana__________________________________________________150"
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "chewyang"
        },
        "content": "4          Food           orange__________________________________________________200"
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* `delete 2`"
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Activity removed!"
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "The current activity list has been saved."
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list` after deleting"
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "chewyang"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "chewyang"
        },
        "content": "|  2020-10-11  |  Net Calorie: 450 kcal  |"
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "chewyang"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "chewyang"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "chewyang"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "chewyang"
        },
        "content": "1          Food           apple___________________________________________________100"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "chewyang"
        },
        "content": "2          Food           banana__________________________________________________150"
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "chewyang"
        },
        "content": "3          Food           orange__________________________________________________200"
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 9.1.1 Possible errors when deleting an entry in list"
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "chewyang"
        },
        "content": "An error will occur if any of the conditions below are met. \u003cbr\u003e"
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "chewyang"
        },
        "content": "The respective error message will also be shown to you."
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e Any text in this format is an example of a command that will produce the respective error."
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Any text in this format is the error message that you will be shown."
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "chewyang"
        },
        "content": "```"
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "#### Delete command has missing description"
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Entering `delete` without its **INDEX** parameter."
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `delete`"
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "This command has missing description!"
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### Delete command has invalid description"
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Delete command is followed by any other combinations of letters/symbols other than \"all/\"."
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `delete abc`"
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Index is not a number!"
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Please input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "#### Deleting when index is not in range"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "chewyang"
        },
        "content": "The following scenarios will result in the same error message as shown below:"
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Index is negative number or 0."
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `delete -1`"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Index is bigger than the number of items in the list. For example, if a list contains only 5 entries, the following command will produce an error:"
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `delete 10`"
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Attempting to delete an item on an empty list."
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003e `delete 2`"
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Invalid Index!"
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 9.2.1 Deleting all entries in list"
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "jlifah"
        },
        "content": "You can delete all your entries at once with this feature!"
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format : `delete all/`"
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list` before deleting"
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "chewyang"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "chewyang"
        },
        "content": "|  2020-10-11  |  Net Calorie: 450 kcal  |"
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "chewyang"
        },
        "content": "------------------------------------------"
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "chewyang"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "chewyang"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "chewyang"
        },
        "content": "1          Food           apple___________________________________________________100"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "chewyang"
        },
        "content": "2          Food           banana__________________________________________________150"
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "chewyang"
        },
        "content": "3          Food           orange__________________________________________________200"
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* `delete all/`"
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Are you sure you want to delete all activities in today\u0027s list? [yes/no]"
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `yes`"
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "All activities have been deleted"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list` after deleting"
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "e0425705"
        },
        "content": "List is empty!"
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### 9.2.2 Possible errors when deleting all entries from list"
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "chewyang"
        },
        "content": "#### Deleting all on an empty list"
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Performing `delete all/` on a list that does not have any entries. "
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "There is no index to remove!"
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Please input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## 10.0 Graph - Rani Karthigeyan Rajendrakumar"
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 10.1 Showing past net calories"
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Want to see you calorie story all at once? You can view a graphical representation of your recent net calories relative to your target calories for up to 7 days using this feature."
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `graph`"
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* `graph`"
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "2100|      |-|                           "
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    |      | |                           "
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    |      | |                           "
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "1886|******|*|***************************"
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    |      | |         |-|               "
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    ||-|   | |         | |               "
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    || |   | |   |-|   | |               "
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    || |   | |   | |   | |               "
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    || |   | |   | |   | |               "
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    || |   | |   | |   | |   |-|         "
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "1210|| |   | |   | |   | |   | |   |-|   "
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    |-+-----+-----+-----+-----+-----+--"
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    21/10 22/10 23/10 24/10 25/10 26/10 "
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e Things to take note of:"
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `***` shows the target calories."
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* If less than 7 days are stored in storage file, all the days will be displayed"
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 10.1.1 Possible errors when graphing"
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "#### Adding extra inputs after graph command"
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* graph 123"
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "This command has no description!"
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## 11.0 Chaining - Puah Siew Wen"
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 11.1 Chaining of features"
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Do you wish to save time individually typing in the features? Or do you want to type out all the commands you want at one go?"
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Chaining is the right feature for your needs! "
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eIMPORTANT"
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Chaining is only available to 4 features:"
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* [list](#50-list---owen-chew-yang), [add](#40-add---puah-siew-wen), [edit](#60-edit---puah-siew-wen) and [graph](#100-graph---rani-karthigeyan-rajendrakumar)."
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* The respective formats to adhere to for each feature still applies."
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: *not extensive, there is a lot of combinations available*"
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        *your commands just need to be separated by `\u0026\u0026`*"
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        "
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Examples of formats accepted:"
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `add f/**FOOD_DESCRIPTION** c/**CALORIE_COUNT** \u003cd/**DATE**\u003e \u0026\u0026 add e/**EXERCISE_DESCRIPTION** c/**CALORIE_COUNT** \u003cd/**DATE**\u003e`"
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `add f/**FOOD_DESCRIPTION** c/**CALORIE_COUNT** \u003cd/**DATE**\u003e \u0026\u0026 list \u003c**DATE**\u003e`"
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `edit INDEX e/**EXERCISE_DESCRIPTION** c/**CALORIE_COUNT** \u003cd/**DATE**\u003e \u0026\u0026 add e/**EXERCISE_DESCRIPTION** c/**CALORIE_COUNT** \u003cd/**DATE**\u003e \u0026\u0026 list \u003c**DATE**\u003e`"
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `list \u003c**DATE**\u003e \u0026\u0026 list \u003c**DATE**\u003e \u0026\u0026 list \u003c**DATE**\u003e`"
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `list \u003c**DATE**\u003e \u0026\u0026 graph`"
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Examples of usage: "
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1st example:"
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `add f/ ice cream c/ 90 \u0026\u0026 add e/ running c/ 50 \u0026\u0026 list`"
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Noted! The following has been added into list:"
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "e0425705"
        },
        "content": "[F] | ice cream | 90"
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The current activity list has been saved."
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Noted! The following has been added into list:"
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "e0425705"
        },
        "content": "[E] | running | 50"
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The current activity list has been saved."
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  2020-11-07  |  Net Calorie: -8 kcal  |"
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "e0425705"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1          Food           orange____________________________________________________35"
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2          Food           mushroom soup_____________________________________________77"
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "e0425705"
        },
        "content": "3        Exercise         50 sit ups________________________________________________75"
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "e0425705"
        },
        "content": "4        Exercise         jumping___________________________________________________65"
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "e0425705"
        },
        "content": "5        Exercise         brisk walking_____________________________________________20"
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "e0425705"
        },
        "content": "6          Food           ice cream_________________________________________________90"
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "e0425705"
        },
        "content": "7        Exercise         running___________________________________________________50"
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2nd example:"
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `add f/ ice cream c/ 90 d/ 2020-11-07 \u0026\u0026 list \u0026\u0026 edit 7 e/ walking c/ 15`"
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Noted! The following has been added into list:"
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "e0425705"
        },
        "content": "[F] | ice cream | 90"
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The current activity list has been saved."
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  2020-11-07  |  Net Calorie: 82 kcal  |"
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "e0425705"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1762,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1          Food           orange____________________________________________________35"
      },
      {
        "lineNumber": 1763,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1764,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2          Food           mushroom soup_____________________________________________77"
      },
      {
        "lineNumber": 1765,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1766,
        "author": {
          "gitId": "e0425705"
        },
        "content": "3        Exercise         50 sit ups________________________________________________75"
      },
      {
        "lineNumber": 1767,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1768,
        "author": {
          "gitId": "e0425705"
        },
        "content": "4        Exercise         jumping___________________________________________________65"
      },
      {
        "lineNumber": 1769,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1770,
        "author": {
          "gitId": "e0425705"
        },
        "content": "5        Exercise         brisk walking_____________________________________________20"
      },
      {
        "lineNumber": 1771,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1772,
        "author": {
          "gitId": "e0425705"
        },
        "content": "6          Food           ice cream_________________________________________________90"
      },
      {
        "lineNumber": 1773,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1774,
        "author": {
          "gitId": "e0425705"
        },
        "content": "7        Exercise         running___________________________________________________50"
      },
      {
        "lineNumber": 1775,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1776,
        "author": {
          "gitId": "e0425705"
        },
        "content": "8          Food           ice cream_________________________________________________90"
      },
      {
        "lineNumber": 1777,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1778,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1779,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Noted! The following has been edited:"
      },
      {
        "lineNumber": 1780,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1781,
        "author": {
          "gitId": "e0425705"
        },
        "content": "[E] | walking | 15"
      },
      {
        "lineNumber": 1782,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1783,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The current activity list has been saved."
      },
      {
        "lineNumber": 1784,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1785,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1786,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1787,
        "author": {
          "gitId": "e0425705"
        },
        "content": "3rd example:"
      },
      {
        "lineNumber": 1788,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list \u0026\u0026 graph`"
      },
      {
        "lineNumber": 1789,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1790,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1791,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 1792,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  2020-11-08  |  Net Calorie: 15 kcal  |"
      },
      {
        "lineNumber": 1793,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------"
      },
      {
        "lineNumber": 1794,
        "author": {
          "gitId": "e0425705"
        },
        "content": "No.        Type                        Description                        Calories gain or lost"
      },
      {
        "lineNumber": 1795,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1796,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1          Food           bun_______________________________________________________80"
      },
      {
        "lineNumber": 1797,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1798,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2        Exercise         jumping___________________________________________________65"
      },
      {
        "lineNumber": 1799,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1800,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2766|******************************************"
      },
      {
        "lineNumber": 1801,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    |                                          "
      },
      {
        "lineNumber": 1802,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    |                                          "
      },
      {
        "lineNumber": 1803,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    |                                          "
      },
      {
        "lineNumber": 1804,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    |                                          "
      },
      {
        "lineNumber": 1805,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    |                                          "
      },
      {
        "lineNumber": 1806,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    |                                          "
      },
      {
        "lineNumber": 1807,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    |                                          "
      },
      {
        "lineNumber": 1808,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    |                                          "
      },
      {
        "lineNumber": 1809,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    ||-|                                       "
      },
      {
        "lineNumber": 1810,
        "author": {
          "gitId": "e0425705"
        },
        "content": "15  || |   |-|   |-|   |-|   |-|   |-|   |-|   "
      },
      {
        "lineNumber": 1811,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    |-+-----+-----+-----+-----+-----+-----+--"
      },
      {
        "lineNumber": 1812,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    02/11 03/11 04/11 05/11 06/11 07/11 08/11 "
      },
      {
        "lineNumber": 1813,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1814,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1815,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1816,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1817,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### 11.1.1 Possible errors when chaining"
      },
      {
        "lineNumber": 1818,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1819,
        "author": {
          "gitId": "e0425705"
        },
        "content": "An error will occur if any of the conditions below are met. \u003cbr\u003e "
      },
      {
        "lineNumber": 1820,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The respective error message will also be shown to you."
      },
      {
        "lineNumber": 1821,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e Any text in this format is an example of a command that will produce the respective error."
      },
      {
        "lineNumber": 1822,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1823,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1824,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Any text in this format is the error message that you will be shown."
      },
      {
        "lineNumber": 1825,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1826,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1827,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Chaining a feature that is not accepted"
      },
      {
        "lineNumber": 1828,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* When your input contains features that are not accepted such as"
      },
      {
        "lineNumber": 1829,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e `bye \u0026\u0026 graph`"
      },
      {
        "lineNumber": 1830,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1831,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1832,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1833,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u0027bye\u0027 cannot be chained!"
      },
      {
        "lineNumber": 1834,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1835,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1836,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1837,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Other errors"
      },
      {
        "lineNumber": 1838,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*The possible errors follows the errors for adding, listing, editing and graphing*"
      },
      {
        "lineNumber": 1839,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Possible errors for adding: [errors for add](#43-possible-errors-when-adding-an-entry-into-activity-list)"
      },
      {
        "lineNumber": 1840,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Possible errors for listing: [errors for list](#511-possible-errors-when-listing)"
      },
      {
        "lineNumber": 1841,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Possible errors for editing: [errors for edit](#611-possible-errors-when-editing)"
      },
      {
        "lineNumber": 1842,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Possible errors for graphing: [errors for graph](#1011-possible-errors-when-graphing)"
      },
      {
        "lineNumber": 1843,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1844,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1845,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1846,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 1847,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## 12.0 Exiting the program"
      },
      {
        "lineNumber": 1848,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1849,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Finish using the application? Do you want to exit application?"
      },
      {
        "lineNumber": 1850,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1851,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 1852,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1853,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 1854,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `bye`"
      },
      {
        "lineNumber": 1855,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1856,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1857,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1858,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| Thank you for using traKCAL. See you again!                                                       |"
      },
      {
        "lineNumber": 1859,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1860,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 1861,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1862,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1863,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1864,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 1865,
        "author": {
          "gitId": "e0425705"
        },
        "content": "# Frequently asked questions"
      },
      {
        "lineNumber": 1866,
        "author": {
          "gitId": "e0425705"
        },
        "content": "This section contains frequently asked questions."
      },
      {
        "lineNumber": 1867,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1868,
        "author": {
          "gitId": "e0425705"
        },
        "content": "**Q1**: How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 1869,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1870,
        "author": {
          "gitId": "e0425705"
        },
        "content": "**A1**: Install the application in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous **traKCAL** folder."
      },
      {
        "lineNumber": 1871,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1872,
        "author": {
          "gitId": "e0425705"
        },
        "content": "**Q2**: How do I know if the data you have input is saved?"
      },
      {
        "lineNumber": 1873,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1874,
        "author": {
          "gitId": "e0425705"
        },
        "content": "**A2**: **traKCAL** autosaves data. Unless an error message is printed out, the data entered is saved."
      },
      {
        "lineNumber": 1875,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1876,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "**Q3**: I keep getting errors with the storage files when using **traKCAL**, how do I solve them?"
      },
      {
        "lineNumber": 1877,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1878,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "**A3**: Do take a look at the error sections above of the User Guide for solutions. When all else fails, you can delete the tpdata file to reset your data. "
      },
      {
        "lineNumber": 1879,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Alternatively, make sure your csv file is not open when **traKCAL** is running to prevent write conflicts."
      },
      {
        "lineNumber": 1880,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 1881,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "**Q4**: Is **traKCAL** optimized for all operating systems?"
      },
      {
        "lineNumber": 1882,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1883,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "**A4**: **traKCAL** is available for the download on all major Operating Systems(OS) such as Windows, Mac and Linux."
      },
      {
        "lineNumber": 1884,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1885,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "**Q5**: How do I contact us if I have doubts or have issues to raise?"
      },
      {
        "lineNumber": 1886,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1887,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "**A5**: You can reach us via email(e0425705@u.nus.edu) or by raising a github issue [here](https://github.com/AY2021S1-CS2113T-T09-4/tp/issues)."
      },
      {
        "lineNumber": 1888,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1889,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 1890,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1891,
        "author": {
          "gitId": "e0425705"
        },
        "content": "# Command Summary"
      },
      {
        "lineNumber": 1892,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1893,
        "author": {
          "gitId": "e0425705"
        },
        "content": "This section gives you a cheat sheet of commands available. "
      },
      {
        "lineNumber": 1894,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The following are only examples of what the input command can look like! "
      },
      {
        "lineNumber": 1895,
        "author": {
          "gitId": "e0425705"
        },
        "content": "For more information please go to the respective section for the feature details!"
      },
      {
        "lineNumber": 1896,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1897,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eThings you should take note of:"
      },
      {
        "lineNumber": 1898,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Words that look like THIS are parameters to be supplied by you."
      },
      {
        "lineNumber": 1899,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Words that look like \u003cthis\u003e are optional parameters"
      },
      {
        "lineNumber": 1900,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1901,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Action         | Format | Example"
      },
      {
        "lineNumber": 1902,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-------------- | ---------- | --------"
      },
      {
        "lineNumber": 1903,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Help | `help` | `help`"
      },
      {
        "lineNumber": 1904,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Create User Profile | `user c/` |  `user c/`"
      },
      {
        "lineNumber": 1905,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Edit User Profile | `user e/ \u003cn/ NAME\u003e, \u003cg/ GENDER\u003e, \u003cw/ WEIGHT\u003e, \u003ch/ HEIGHT\u003e, \u003cage/ AGE\u003e, \u003cal/ ACTIVITY_FACTOR\u003e, \u003cgoal/ WEIGHT_GOALS\u003e` | `user e/ n/ Sammy`"
      },
      {
        "lineNumber": 1906,
        "author": {
          "gitId": "jlifah"
        },
        "content": "List User Profile | `user l/` | `user l/`"
      },
      {
        "lineNumber": 1907,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Create Shortcut | `createSet SHORTCUT f/ FOOD_DESCRIPTION c/ CALORIE COUNT + e/ EXERCISE_DESCRIPTION c/ CALORIE COUNT` | `createSet morning routine f/ oatmeal c/ 200 + e/ yoga c/ 200`"
      },
      {
        "lineNumber": 1908,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Add Shortcut | `addSet SHORTCUT` | `addSet morning routine`"
      },
      {
        "lineNumber": 1909,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Add Food | `add e/ FOOD_DESCRIPTION c/ CALORIE_COUNT \u003cd/ DATE\u003e` | `add e/ ice cream c/ 78 d/ 2020-10-19`"
      },
      {
        "lineNumber": 1910,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Add Exercise | `add e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT \u003cd/ DATE\u003e` | `add e/ jumping c/ 65`"
      },
      {
        "lineNumber": 1911,
        "author": {
          "gitId": "e0425705"
        },
        "content": "List | `list \u003cDATE\u003e` | `list 2020-10-24` "
      },
      {
        "lineNumber": 1912,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Edit Activity to Food | `edit LIST_INDEX f/ FOOD_DESCRIPTION c/ CALORIE_COUNT` | `edit 1 f/ ice kacang c/ 150`"
      },
      {
        "lineNumber": 1913,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Edit Activity to Exercise | `edit LIST_INDEX e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT` | `edit 1 e/ running c/ 100`"
      },
      {
        "lineNumber": 1914,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Find Description | `find d/ DESCRIPTION` | `find d/ apple`"
      },
      {
        "lineNumber": 1915,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Find Calorie | `find c/ CALORIE` | `find c/ 55`"
      },
      {
        "lineNumber": 1916,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Find Either | `find e/ DESCRIPTION1 / DESCRIPTION2 / DESCRIPTION3` | `find e/ apple / orange / grape`"
      },
      {
        "lineNumber": 1917,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Find All | `find a/ DESCRIPTION1 / DESCRIPTION2 / DESCRIPTION3` | `find a/ running / jumping / cake`"
      },
      {
        "lineNumber": 1918,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Move Activity | `move from/ INDEX1 below/ INDEX2` | `move from/ 5 below/ 2`"
      },
      {
        "lineNumber": 1919,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Delete Entry | `delete INDEX` | `delete 2`"
      },
      {
        "lineNumber": 1920,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Delete All for Today| `delete all/` | `delete all/`"
      },
      {
        "lineNumber": 1921,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Graph | `graph` | `graph` "
      },
      {
        "lineNumber": 1922,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Chain | `add e/ FOOD_DESCRIPTION c/ CALORIE_COUNT \u003cd/ DATE\u003e \u0026\u0026 list \u0026\u0026 graph` | `add e/ ice cream c/ 78 \u0026\u0026 list \u0026\u0026 graph`"
      },
      {
        "lineNumber": 1923,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Exit | `bye` | `bye`"
      }
    ],
    "authorContributionMap": {
      "jlifah": 293,
      "chewyang": 248,
      "e0425705": 1179,
      "-": 27,
      "1-Karthigeyan-1": 80,
      "poonchuanan": 96
    }
  },
  {
    "path": "docs/team/1-Karthigeyan-1.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "# Rani Karthigeyan Rajendrakumar - Project Portfolio Page for traKCAL"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "**traKCAL** is a desktop application for managing calorie intake, optimized for use via Command Line Interface (CLI) whilst retaining the benefits of a Graphical User Interface (GUI). **traKCAL** can manage your activities faster than traditional GUI applications."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "This section shows a brief overview of my contribution to traKCAL. It includes contributions like code writing, code documentation, UG/DG writing and other contributions for traKCAL. "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Code contributed"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "[contributions](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dRani%20Karth\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Enhancements implemented"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*A summary of the enhancements you implemented.*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* I added the commandParser enhancement which filters the userinput to their respective command classes."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* I added the delete features (delete by index and delete all). Delete by index allows users to delete an activity by referring "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "to the respective index in the list. Delete All is an enhancement on top of delete by index which allows users to delete all the activities in the list. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e Commands:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e delete **index**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e delete all/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* I added the graph command which displays the graph of upto 7 days worth of net calories. The graph also has a target calorie line, "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "so that users will be able to know if their goals are met."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e Commands:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e graph"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Contributions to documentation"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*Which sections did you contribute to the UG?*"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* I contributed to the Logic Component diagram , Delete feature diagram and graph feature diagram."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Contributions to the Developer Guide"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*Which sections did you contribute to the DG? Which UML diagrams did you add/updated?*"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* I contributed to the Logic Component diagram , Delete feature diagram and graph feature diagram and their respective descriptions."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* I also did the initial empty template for DG."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Contributions to team-based tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* Added 43 team issues/tasks which can be found [[here](https://github.com/AY2021S1-CS2113T-T09-4/tp/issues?q\u003dis%3Aissue+author%3A1-Karthigeyan-1+)]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* Reviewed 34 pull request which can be found [[here](https://github.com/AY2021S1-CS2113T-T09-4/tp/pulls?q\u003dis%3Apr+is%3Aclosed+reviewed-by%3A%40me)]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Review/mentoring contributions"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*Links to PRs reviewed, instances of helping team members in other ways*"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Contributions beyond the project team"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*Evidence of helping others e.g. responses you posted in our forum, bugs you reported in other team\u0027s products,*"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*Evidence of technical leadership e.g. sharing useful information in the forum*"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* I helped test and identify bugs for PE-D, the issues I raised can be found [[CS2113T-T12-3](https://github.com/1-Karthigeyan-1/ped/issues)]"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "* I helped test and identify bugs for other team, the issues I raised can be found [[Cs2113T-T09-2](https://github.com/AY2021S1-CS2113T-T09-2/tp/issues?q\u003dis%3Aissue+author%3A1-Karthigeyan-1)]"
      }
    ],
    "authorContributionMap": {
      "jlifah": 2,
      "e0425705": 29,
      "1-Karthigeyan-1": 27
    }
  },
  {
    "path": "docs/team/chewyang.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "# Owen Chew - Project Portfolio Page for traKCAL"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "**traKCAL** is a desktop application for managing calorie intake, optimized for use via Command Line Interface (CLI) whilst retaining the benefits of a Graphical User Interface (GUI). **traKCAL** can manage your activities faster than traditional GUI applications."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "I have implemented the following -"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* List command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Classes used to display the list (listDrawer and findDrawer)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Move command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Data structure of the DayMap"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Data encoding component of the dayMap to a CSV file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Logging class that provides the logging for traKCAL."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Code contributed"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Repo sense link:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "[Link to RepoSense](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dchewyang\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Enhancements implemented"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "1. List drawing classes (listDrawer and findDrawer)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\t* Implemented a responsive list when the users want to see a list of activities for a specific day. In the list, users can see their list of activities, respective calorie gain or lost, date of the list and their net calorie for that day in a more user-friendly environment."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    * Implemented a responsive list when the users use the ‘find’ command to see a list of activities containing the keyword/s corresponding to the type of ‘find’ command. In the list, users can see the activities containing the keyword/s, the respective date of each activity and the respective calorie gain or lost."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    * Implementing the drawer classes for the list command was difficult as there were many things to be taken into consideration when creating this list. For example,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        * When the numbering of the activities become very large, the formatting of the list may get distorted and the alignment will be off. Therefore, it was important for the start index of each column to be responsive to the index of the numbering."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        * When the description of each activities become too long, the formatting of the list will once again get distorted. It was important for there to be a fixed length per line for the description and let the trailing lines roll over to the next line, aligned to the start index of the description above so as to maximise the user experience of the user when looking  at the list of activities."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        * Making this list responsive allowed me to integrate the date column for the findDrawer class in between the numbering and the type of activity easily without affecting the other columns."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "2. Implementing the data structure"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    * Implemented the data structure of how the dates and the respective activities are stored in the system. Using a hashmap, with the key being the date and the value being the activityList for that day."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    * Implementing the correct data structure from the start of the project was essential so as to avoid unnecessary refactoring. Using a hashmap was the only logical way to store the data and improve the performance of our application."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": "#### Contributions to the User Guide"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": "I contributed to section 5.0 (List), section 8.0(Move), contributed to the overall formatting and proofreading of the User Guide. "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Contributions to the Developer Guide"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chewyang"
        },
        "content": "I contributed to the -"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Model section and its respective UML diagrams."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* List command section and displaying the list section and its respective UML diagrams."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Move command and its respective UML diagrams."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Contributions to team-based tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chewyang"
        },
        "content": "I contributed to the -"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chewyang"
        },
        "content": "* Updating user/developer docs that are not specific to a feature"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Review/mentoring contributions"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Link to PRs reviewed:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chewyang"
        },
        "content": "[Link to PR](https://github.com/AY2021S1-CS2113T-T09-4/tp/pulls?q\u003dis%3Apr+is%3Aclosed+reviewed-by%3A%40me)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Contributions beyond the project team"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chewyang"
        },
        "content": "Link to contributions:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chewyang"
        },
        "content": "[Link to contributions](https://github.com/chewyang/ped/issues)"
      }
    ],
    "authorContributionMap": {
      "jlifah": 2,
      "chewyang": 43,
      "e0425705": 22
    }
  },
  {
    "path": "docs/team/e0425705.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "# Puah Siew Wen - Project Portfolio Page for traKCAL"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* **traKCAL** is a desktop application for managing calorie intake, optimized for use via Command Line Interface (CLI) whilst retaining the benefits of a Graphical User Interface (GUI). **traKCAL** can manage your activities faster than traditional GUI applications."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "This section shows a brief overview of my contribution to traKCAL. It includes contributions like code writing, code documentation, UG/DG writing and other contributions for traKCAL. "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Code contributed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* My code contributions can be found [here](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003de0425705\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Enhancements implemented"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* I implemented the `add activity`, `edit activity`, `viewing help` and `chaining` enhancements. "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Here are some of their commands: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eWords that look like THIS are parameters to be input by user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eWords that look like \u003cthis\u003e are optional parameters"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `add f/ FOOD_DESCRIPTION c/ CALORIE_COUNT \u003cd/ DATE\u003e` to add a new food activity."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `add e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT \u003cd/ DATE\u003e` to add a new exercise activity."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `edit f/ FOOD_DESCRIPTION c/ CALORIE_COUNT` to edit activity in list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `edit f/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT` to edit activity in list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `help` to display the help list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "For chaining, examples of the usages are:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `add e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT \u003cd/ DATE\u003e \u0026\u0026 list \u0026\u0026 graph`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list \u0026\u0026 edit f/ FOOD_DESCRIPTION c/ CALORIE_COUNT \u0026\u0026 graph`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Contributions to the User Guide"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* I contributed to section 1 (viewing help), section 4 (adding), section 6 (editing), section 11 (chaining) and section 12 (exiting the program) in the user profile as well as command summary, overall formatting and proofreading of the User Guide. "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Contributions to the Developer Guide"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* I contributed to section 1 (introduction), section 3.2, 3.5, 3.7, section 4.3, 4.6, 4.7, section 5.1, 5.2, 5.3, 5.4, 5.5 (add, edit and chain)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Contributions to team-based tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Updating user/developer docs that are not specific to a feature"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Updating of JavaDoc in the code"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Review/mentoring contributions"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* I reviewed 42 PRs from the team."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The following are instances of the PRs I reviewed:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "[instance 1](https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/71)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "[instance 2](https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/106)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "[instance 3](https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/245)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Contributions beyond the project team"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*Evidence of helping others e.g. responses you posted in our forum, bugs you reported in other team\u0027s products,*"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "*Evidence of technical leadership e.g. sharing useful information in the forum*"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* I helped test and identify bugs for other teams, the issues I raised can be found [here](https://github.com/e0425705/ped/issues)."
      }
    ],
    "authorContributionMap": {
      "jlifah": 2,
      "e0425705": 55
    }
  },
  {
    "path": "docs/team/jlifah.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "# Jenny Lin - Project Portfolio Page for traKCAL"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* **traKCAL** is a desktop application for managing calorie intake, optimized for use via Command Line Interface (CLI) whilst retaining the benefits of a Graphical User Interface (GUI). **traKCAL** can manage your activities faster than traditional GUI applications."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "This section shows a brief overview of my contribution to traKCAL. It includes contributions like code writing, code documentation, UG/DG writing and other contributions for traKCAL. "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Code contributed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* My code contributions can be found [here](https://github.com/AY2021S1-CS2113T-T09-4/tp/commits/master)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Enhancements implemented"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* I implemented the `user profile` and `shortcut` enhancements. For `user profile`, **traKCAL** automatically asks for a new user profile if it does not detect one and deletes the user profile if is is unreadable. "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Here are some of their commands for `user profile` and `shortcut`: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* `user c/` to create a new user profile. At the same time, it also "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "   * calculates bmi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "   * calculates recommended calories"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "   * calculates calories based on weight goal"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* `user e/` to edit 1 or more sections of the user profile. "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* `user l/` to list out the current user profile."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* `createSet` to create a shortcut with 1 or more activity."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* `addSet` to add all the entries within the shortcut to the current day\u0027s list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "**Justifications**: `user profile` feature gives the user a clear idea of their calorie journey. It also links to other features like graphs in traKCAL. `shortcut` feature reduces user fatigue by offering a quick way to add in entries often repeated into the activity list.  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "#### Contributions to User Guide "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* I contributed to section 2 (user profile), section 3 (shortcut) in the user profile as well as overall formatting of the User Guide. "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Contributions to the Developer Guide"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* I contributed to the `user profile` and `shortcut` sections in Section 3, Section 4 and Manually Testing, including the UML diagrams. Additionally, I formatted the DG and added in missing components flagged out in feedbacks from past DG submissions. "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Contributions to team-based tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* I took part in brain storming user stories."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Review/mentoring contributions"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* I reviewed 25 PR from the team."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "#### Contributions beyond the project team"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* I helped test and identify bugs for other teams, some of my comments can be found [here](https://github.com/jlifah/ped/issues)."
      }
    ],
    "authorContributionMap": {
      "jlifah": 26,
      "e0425705": 22
    }
  },
  {
    "path": "docs/team/poonchuanan.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "# Poon Chuan An - Project Portfolio Page for traKCAL"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "**traKCAL** is a desktop application for managing calorie intake, optimized for use via Command Line Interface (CLI) whilst retaining the benefits of a Graphical User Interface (GUI). **traKCAL** can manage your activities faster than traditional GUI applications."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "This section shows a brief overview of my contribution to traKCAL. It includes contributions to the code and other deliverables such as the User Guide and Developer Guide."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "#### Code contributed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "My code contributions can be found [here](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003djlifah\u0026tabRepo\u003dAY2021S1-CS2113T-T09-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "#### Enhancements implemented"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* I implemented the `find` functions. Besides the basic features of the find function, I implemented more advanced search functions as well for more complex search requirements."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* I also helped out with the `storage` and a one part of `logging` enhancements. "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Here are some of the commands: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "\u003eWords that look like THIS are parameters to be input by user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* `find d/ KEYWORD` to find all entries with description containing the KEYWORD."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* `find c/ KEYWORD` to find all entries with calories matching the KEYWORD."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* `find a/ KEYWORD1 / KEYWORD2 / KEYWORD3..` to find entries with all matching KEYWORDs."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* `find e/ KEYWORD1 / KEYWORD2 / KEYWORD3..` to find entries with at least one matching KEYWORDs."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "#### Contributions to documentation"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* I contributed to the find section of the UG."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* I have also took part in proof-reading the UG for formatting and grammar mistakes."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "#### Contributions to the Developer Guide"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* I contributed to the find section and storage component of the DG."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* I checked through the DG for any errors as well."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "#### Contributions to team-based tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* Help check through the team\u0027s documentation for mistakes. "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* Set up Zoom meetings for the team meeting."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "#### Review/mentoring contributions"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* I have reviewed and approved PRs from the team. "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "For example, [link1](https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/172) and [link2.](https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/255)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "#### Contributions beyond the project team"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "* I have reviewed other team\u0027s project and gave feedback to them for improvements."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "For example, [link3.](https://github.com/poonchuanan/ped/issues)"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 48
    }
  },
  {
    "path": "src/main/java/seedu/duke/Trakcal.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.parser.ChainingParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.parser.CommandParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.DayMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.storage.Logging;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.userprofile.UserProfile;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.userprofile.InitialiseUserProfile;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.userprofile.CheckNewUser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.logic.parser.CommandParser.SPACE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.Ui.displayNotSavedMessage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.Ui.displayWelcomeMessage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Entry point of the traKCAL application."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Initialises the application and starts the interaction with the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class Trakcal {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static DayMap calList \u003d new DayMap();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static InitialiseUserProfile profile;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static String jarFilePath \u003d getJarFilePath();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static Storage storage \u003d new Storage(jarFilePath + \"/tpdata/tpcsv.csv\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //public static Storage loggingStorage \u003d new Storage(getJarFilePath() + \"/tpdata/tpLogging.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static Logging logging \u003d new Logging(jarFilePath + \"/tpdata/tpLogging.log\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Main function."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param args args"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        displayWelcomeMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        logging.setUpLogger();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        storage.loadData(calList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        calList.setLastSeenList(calList.getActivityList(LocalDate.now().atStartOfDay()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (CheckNewUser.isNewUser()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            profile \u003d UserProfile.createNewProfile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            Ui.displayReturningUserMessage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            profile \u003d UserProfile.loadProfile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Trakcal.run();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Main running loop."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void run()  {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        while (in.hasNextLine()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            String userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            CommandParser parser \u003d new CommandParser(userInput);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                Command command;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                if (userInput.contains(ChainingParser.CHAIN_SEPARATOR)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    new ChainingParser(userInput).parseArgument();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    command \u003d parser.parseArgument();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    executeCmd(command);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    storage.updateFile(calList);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                // Exception is already taken care of"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                displayNotSavedMessage();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Sets the data for each command and executes the command."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param command command to execute"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @throws NullPointerException if invalid command"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static void executeCmd(Command command) throws NullPointerException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        command.setData(calList);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        command.execute();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Gets the file path of the jar file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return string of the file path"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static String getJarFilePath() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return new File(Trakcal.class.getProtectionDomain().getCodeSource().getLocation().getPath())"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                .getParent().replace(\"%20\", SPACE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 10,
      "chewyang": 52,
      "e0425705": 15,
      "-": 6,
      "1-Karthigeyan-1": 21,
      "poonchuanan": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddExerciseCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Exercise;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.Ui.displaySavedMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "//@@author e0425705"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Add exercise."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class AddExerciseCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected Exercise exercise;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Adds exercise and it\u0027s respective calories."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description exercise description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param calories calories lost"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param isFromFile if data is from csv file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public AddExerciseCommand(String description, int calories, boolean isFromFile) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.exercise \u003d new Exercise(description, calories, LocalDate.now(), isFromFile);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.date \u003d LocalDateTime.now().toLocalDate();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.canBeChained \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Adds exercise, it\u0027s respective calories and date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description exercise description"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param calories calories lost"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param isFromFile if data is from csv file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param date date of activity"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public AddExerciseCommand(String description, int calories, boolean isFromFile, LocalDate date) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.exercise \u003d new Exercise(description, calories, date, isFromFile);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.canBeChained \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        dayMap.addActivity(date.atStartOfDay(), exercise);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        displaySavedMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 8,
      "e0425705": 42
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddFoodCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.Ui.displaySavedMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "//@@author e0425705"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Add activity food."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class AddFoodCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected Food food;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Adds food and it\u0027s respective calories."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description food description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param calories calories gained"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param isFromFile if data is from csv file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public AddFoodCommand(String description, int calories, boolean isFromFile) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.food \u003d new Food(description, calories, LocalDate.now(),isFromFile);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.date \u003d LocalDateTime.now().toLocalDate();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.canBeChained \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Adds food, it\u0027s respective calories and date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description food description"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param calories calories gained"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param isFromFile if data is from csv file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param date date of activity"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public AddFoodCommand(String description, int calories, boolean isFromFile, LocalDate date) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.food \u003d new Food(description, calories, date, isFromFile);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.canBeChained \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        dayMap.addActivity(date.atStartOfDay(), food);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        displaySavedMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 8,
      "e0425705": 42
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddSetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.CalorieCountException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.EmptyTextFileException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.parser.CommandParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.ui.ExceptionMessages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.Trakcal.calList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.Trakcal.executeCmd;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.Trakcal.in;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.Trakcal.jarFilePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.Trakcal.storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayCorruptedSetMessage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//@@author jlifah"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": " * Add Set Command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class AddSetCommand extends Command {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected static final int MAXIMUM_CALORIE_COUNT \u003d 3000;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected static final int MINIMUM_CALORIE_COUNT \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected static final String DATE_FORMAT \u003d \"yyyy-MM-dd\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected static final String CALORIE_TAG \u003d \"c/\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected static final String FOOD_TAG \u003d \"f/\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected static final String EXERCISE_TAG \u003d \"e/\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected static final String DATE_TAG \u003d \"d/\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String WHITE_SPACE \u003d \" \";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public AddSetCommand(String description) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Date date \u003d new Date();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(DATE_FORMAT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String strDate \u003d formatter.format(date);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String filePath \u003d jarFilePath + \"/tpdata\" + \"/\" + description + \".txt\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            if (file.exists()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                checkEmptyFile(filePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                boolean index \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                while (line !\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    checkTags(line);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    String description \u003d line.substring(2, line.indexOf(CALORIE_TAG) - 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    String calories \u003d line.substring(line.indexOf(CALORIE_TAG) + 2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    calories \u003d removeWhiteSpaces(calories);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    description \u003d removeWhiteSpaces(description);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    checkEmptyDescription(description);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    checkEmptyDescription(calories);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    checkInteger(calories);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    checkCalorieRange(calories);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    if (index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                        Ui.displayAddSetConfirmationMessage();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                        index \u003d false;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    CommandParser parser \u003d new CommandParser(\"add \" + line + \" \" + DATE_TAG + \" \" + strDate);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    Command cmd \u003d parser.parseArgument();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    executeCmd(cmd);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    storage.updateFile(calList);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    line \u003d reader.readLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                throw new FileNotFoundException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ExceptionMessages.displayShortcutDoesNotExistMessage();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ExceptionMessages.displayIoExceptionMessage();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IllegalArgumentException | EmptyDescriptionException"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                | CalorieCountException | EmptyTextFileException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayCorruptedSetMessage();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            deleteInvalidSetFile(filePath);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Checks that the needed tags are in user input."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private void checkTags(String input) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (!input.contains(CALORIE_TAG) || !(input.contains(FOOD_TAG) || input.contains(EXERCISE_TAG))) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Checks that user has input something following tags."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private void checkEmptyDescription(String input) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (input.isBlank() || input.isEmpty()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Checks that user input for \"c/\" can be converted to an integer."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private void checkInteger(String input) throws NumberFormatException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Integer.parseInt(input);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Checks that user input a calorie between 0 and 3000."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private void checkCalorieRange(String input) throws CalorieCountException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (Integer.parseInt(input) \u003c MINIMUM_CALORIE_COUNT || Integer.parseInt(input) \u003e MAXIMUM_CALORIE_COUNT) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            throw new CalorieCountException();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Deletes any invalid/corrupted text file."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void deleteInvalidSetFile(String filePath) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        file.delete();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Checks text file is not empty."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void checkEmptyFile(String filePath) throws EmptyTextFileException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (file.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            throw new EmptyTextFileException();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Removes all white spaces at front and back of input."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return input of edited param without white spaces"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static String removeWhiteSpaces(String input) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        while (input.startsWith(WHITE_SPACE)) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            input \u003d input.substring(1);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        while (input.endsWith(WHITE_SPACE)) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            input \u003d input.substring(0, input.length() - 1);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//@@author jlifah"
      }
    ],
    "authorContributionMap": {
      "jlifah": 153,
      "chewyang": 1,
      "1-Karthigeyan-1": 20
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ByeCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.Ui.displayByeMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Bye command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"Executing bye command.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        displayByeMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 1,
      "e0425705": 3,
      "1-Karthigeyan-1": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.DayMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//@@author chewyang"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * Execute command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected DayMap dayMap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected boolean canBeChained \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * This method is to be override by the specific commands."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Sets data."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param dayMap date"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void setData(DayMap dayMap) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.dayMap \u003d dayMap;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Checks if command can be chained."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return true or false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public boolean getCanBeChained() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return canBeChained;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 38,
      "1-Karthigeyan-1": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/CreateNewSetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.storage.UserSetStorage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Creates new shortcut command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class CreateNewSetCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected String trimmedInput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Creates new repeated set."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param trimmedUserInput user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public CreateNewSetCommand(String trimmedUserInput) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.canBeChained \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.trimmedInput \u003d trimmedUserInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        UserSetStorage.prepareNewSet(trimmedInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 15,
      "e0425705": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/CreateNewUserCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.userprofile.UserProfile;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Creates new user profile."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class CreateNewUserCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public CreateNewUserCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        UserProfile.createNewProfile();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 2,
      "chewyang": 11,
      "e0425705": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteAllCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.Ui.displayMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "//@@author 1-Karthigeyan-1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Delete All Command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class DeleteAllCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected LocalDateTime date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Initializes delete all command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public DeleteAllCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.date \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"Executing Delete All command.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dayMap.getActivityList(this.date).clearList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dayMap.getHashMap().remove(this.date.toLocalDate());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        displayMessage(\"All activities have been deleted\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteByIndexCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.model.DayMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.Ui.displayMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.Ui.displaySavedMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "//@@author 1-Karthigeyan-1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Delete by index command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class DeleteByIndexCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected LocalDateTime date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected DayMap dayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Initializes delete by index command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param index index of activity to be removed in list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public DeleteByIndexCommand(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.date \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"Executing delete by index command.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (index \u003e\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                dayMap.deleteActivity(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                logging.writeToLogInfo(\"Activity deleted successfully.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                displaySavedMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            } catch (IndexOutOfBoundsException | NullPointerException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                logging.writeToLogInfo(\"Invalid Index from DeleteByIndexCommand.execute\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                displayMessage(\"Invalid Index\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/EditExerciseCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Exercise;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayEditIndexOutOfBoundsExceptionMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static seedu.duke.ui.Ui.displayEditMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.Ui.displaySavedMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "//@@author e0425705"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Edits exercise and its attributes at the indicated index."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class EditExerciseCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected Exercise exercise;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected int calories;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Edits exercise and it\u0027s respective calories."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description exercise description"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param calories calories lost"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public EditExerciseCommand(int index, String description, int calories) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.calories \u003d calories;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.canBeChained \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            LocalDate dateOfActivityToBeEdited \u003d dayMap.getDateFromLastSeenListAtIndex(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayEditMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            this.exercise \u003d new Exercise(description, calories,dateOfActivityToBeEdited, false);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            dayMap.insertActivity(index, exercise);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displaySavedMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayEditIndexOutOfBoundsExceptionMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            logging.writeToLogWarning(\"Accessing an index that is out of bound!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 2,
      "e0425705": 47
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/EditFoodCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayEditIndexOutOfBoundsExceptionMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static seedu.duke.ui.Ui.displayEditMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.Ui.displaySavedMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "//@@author e0425705"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Edits food and its attributes at the indicated index."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class EditFoodCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected Food food;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected int calories;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Edits food and it\u0027s respective calories."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description food description"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param calories calories gained"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public EditFoodCommand(int index, String description, int calories) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.calories \u003d calories;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.canBeChained \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            LocalDate dateOfActivityToBeEdited \u003d dayMap.getDateFromLastSeenListAtIndex(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayEditMessage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            this.food \u003d new Food(description, calories, dateOfActivityToBeEdited, false);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            dayMap.insertActivity(index, food);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displaySavedMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayEditIndexOutOfBoundsExceptionMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            logging.writeToLogWarning(\"Accessing an index that is out of bound!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 2,
      "e0425705": 48
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/EditUserProfileCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.userprofile.UserProfile;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayFileError;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class EditUserProfileCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public EditUserProfileCommand(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            UserProfile.edit(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            displayFileError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 4,
      "1-Karthigeyan-1": 20
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindAllCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.exception.EmptyKeywordException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.exception.FindSlashException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.exception.KeywordNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayEmptyKeywordMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayFindSlashExceptionMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayKeywordNotFoundMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "//@@author poonchuanan"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Initialises Command to find all description tags."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class FindAllCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Find matching results based on input tags."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param userInput keywords to be matched"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public FindAllCommand(String userInput) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.date \u003d LocalDateTime.now().toLocalDate();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            dayMap.listActivitiesContainingAll(userInput);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            dayMap.drawListAfterFindCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (KeywordNotFoundException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            displayKeywordNotFoundMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            logging.writeToLogWarning(\"No results found after find (all)\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (EmptyKeywordException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            displayEmptyKeywordMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            logging.writeToLogWarning(\"Empty keyword for (all)\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (FindSlashException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            displayFindSlashExceptionMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            logging.writeToLogWarning(\"Consecutive slashes present in find input (all)\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 49
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindCalorieCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.exception.EmptyKeywordException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.exception.KeywordNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayEmptyDescriptionMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayEmptyKeywordMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayKeywordNotFoundMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "//@@author poonchuanan"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Initialises Command to find calorie count."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class  FindCalorieCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected String calorie;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Find matching results based on calorie input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param calorie calories to search"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public FindCalorieCommand(String calorie) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.date \u003d LocalDateTime.now().toLocalDate();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.calorie \u003d calorie;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            dayMap.listActivitiesContainingCalorie(calorie);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            dayMap.drawListAfterFindCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (KeywordNotFoundException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            displayKeywordNotFoundMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            logging.writeToLogWarning(\"No results found after find (calorie)\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (EmptyKeywordException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            displayEmptyKeywordMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            logging.writeToLogWarning(\"Empty keyword for input (calorie)\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 48
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindDescriptionCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.exception.EmptyKeywordException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.exception.KeywordNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayEmptyDescriptionMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayEmptyKeywordMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayKeywordNotFoundMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "//@@author poonchuanan"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Initialises Command to find activity description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class FindDescriptionCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Find matching results based on description input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param description description to search"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public FindDescriptionCommand(String description) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.date \u003d LocalDateTime.now().toLocalDate();;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            dayMap.listActivitiesContainingDescription(description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            dayMap.drawListAfterFindCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (KeywordNotFoundException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            displayKeywordNotFoundMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            logging.writeToLogWarning(\"No results found after find (description)\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (EmptyKeywordException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            displayEmptyKeywordMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            logging.writeToLogWarning(\"Empty keyword for input (description)\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 2,
      "poonchuanan": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindEitherCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.exception.EmptyKeywordException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.exception.FindSlashException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.exception.KeywordNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayEmptyKeywordMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayKeywordNotFoundMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayFindSlashExceptionMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "//@@author poonchuanan"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Initialises Command to find all description tags."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class FindEitherCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Find matching results based on input tags."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param userInput keywords to be matched"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public FindEitherCommand(String userInput) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.date \u003d LocalDateTime.now().toLocalDate();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            dayMap.listActivitiesContainingEither(userInput);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            dayMap.drawListAfterFindCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (KeywordNotFoundException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            displayKeywordNotFoundMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            logging.writeToLogWarning(\"No results found after find (either)\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (EmptyKeywordException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            displayEmptyKeywordMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            logging.writeToLogWarning(\"Empty keyword for input (either)\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (FindSlashException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            displayFindSlashExceptionMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            logging.writeToLogWarning(\"Consecutive slashes present in find input (either)\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 49
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/GraphCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.DayMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.Trakcal;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.GraphDrawing;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.GraphProperty;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "//@@author 1-Karthigeyan-1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Displays the graph of illustrating the net calorie gain/loss throughout the period."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class GraphCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final int MAXIMUM_DAYS \u003d 7;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public GraphCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.canBeChained \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    boolean isMapValid(DayMap dayMap) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return dayMap !\u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"Executing graph command.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        GraphProperty graphProperties \u003d new GraphProperty(dayMap, (int) Trakcal.profile.getCalories());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        graphProperties.setProperties();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        System.out.println(new GraphDrawing(graphProperties).drawGraph());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 4,
      "1-Karthigeyan-1": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.Ui.displayHelpMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "//@@author e0425705"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Help command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        displayHelpMessage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 1,
      "e0425705": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/InvalidCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.print;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "//@@author 1-Karthigeyan-1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents an invalid command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    String invalidCommandMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public InvalidCommand(String invalidCommandMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.invalidCommandMessage \u003d invalidCommandMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"Executing invalid command.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        print(invalidCommandMessage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 1,
      "1-Karthigeyan-1": 23
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.ActivityList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayEmptyListError;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//@@author chewyang"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * Prints the list of activities for the given day."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * If no date attribute was given by the user, prints the list of activities for today."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * Prints error message if there is no activities for the given day."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private static final String NO_DATA_MESSAGE \u003d \"No data found for this list command\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public ListCommand(LocalDate date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.canBeChained \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.date \u003d LocalDateTime.now().toLocalDate();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.canBeChained \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            ActivityList activityList \u003d dayMap.getActivityList(date.atStartOfDay());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            dayMap.setLastSeenList(activityList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            dayMap.drawListAfterListCommand(date);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            displayEmptyListError();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            logging.writeToLogWarning(NO_DATA_MESSAGE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 50
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListUserProfileCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.Trakcal.jarFilePath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayFileError;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//@@author jlifah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": " * Lists the user profile details."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class ListUserProfileCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            String filePath \u003d jarFilePath + \"/tpdata/tp.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(\"Here is your user profile:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(\"Name : \" + line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(\"Gender : \" + line);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(\"Weight : \" + line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(\"Height : \" + line);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(\"Age : \" + line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(\"Activity Level : \" + line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(\"Weight Goal : \" + line + \"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayFileError();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//@@author jlifah"
      }
    ],
    "authorContributionMap": {
      "jlifah": 37,
      "chewyang": 1,
      "1-Karthigeyan-1": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/MoveActivityCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.exception.ListNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.exception.SameIndexForMoveCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayListNotFoundExceptionMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayStringIndexOutOfBoundsExceptionMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.print;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.sameIndexForMoveCommandExceptionMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//@@author chewyang"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * This command moves an activity from one index to another."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class MoveActivityCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private int indexToBeMovedFrom;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private int indexToBeInsertedBelow;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private static final String MOVE_COMMAND_SUCCESS_MESSAGE \u003d \"Activity has been successfully moved!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private static final String OUT_OF_BOUNDS_MESSAGE \u003d \"Accessing an index that is out of bounds, move unsuccessful\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private static final String EMPTY_LIST_MESSAGE \u003d \"Accessing a list that does not exist, move unsuccessful\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private static final String SAME_INDEXES_MESSAGE \u003d \"Moving activities which results in no changes\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public MoveActivityCommand(int indexToBeChanged, int indexToBeInsertedBelow) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.indexToBeMovedFrom \u003d indexToBeChanged;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.indexToBeInsertedBelow \u003d indexToBeInsertedBelow;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            dayMap.move(indexToBeMovedFrom, indexToBeInsertedBelow);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            print(MOVE_COMMAND_SUCCESS_MESSAGE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            logging.writeToLogInfo(MOVE_COMMAND_SUCCESS_MESSAGE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            displayStringIndexOutOfBoundsExceptionMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            logging.writeToLogWarning(OUT_OF_BOUNDS_MESSAGE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } catch (ListNotFoundException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            displayListNotFoundExceptionMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            logging.writeToLogWarning(EMPTY_LIST_MESSAGE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } catch (SameIndexForMoveCommandException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            sameIndexForMoveCommandExceptionMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            logging.writeToLogInfo(SAME_INDEXES_MESSAGE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chewyang": 54
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/CalorieCountException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Exception when calorie count exceeds accepted range."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class CalorieCountException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/CalorieTagNotFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Exception when calorie tag cannot be found in user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class CalorieTagNotFoundException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DateLimitException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Exception when date entered by user exceeds the accepted range."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class DateLimitException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DescriptionLengthExceedException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Exception when description entered by user exceeds accepted range."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class DescriptionLengthExceedException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/EmptyDescriptionException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Exception when description entered by user is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class EmptyDescriptionException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/EmptyKeywordException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Exception when find keyword entered by user is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class EmptyKeywordException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/EmptyTextFileException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": " * Exception when text file is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class EmptyTextFileException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/FileAlreadyExistException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": " * Exception when text file of same name already exist."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class FileAlreadyExistException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/FindSlashException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Exception when there are 2 more more consecutive slashes (/)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class FindSlashException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/InvalidCalorieException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Exception when calorie count input by user is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class InvalidCalorieException extends NumberFormatException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/InvalidCreateSetCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": " * Exception when createSet command given by user is missing info."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": " * Either shortcut name, missing food/exercise/calorie tag etc."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class InvalidCreateSetCommandException extends Exception{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/InvalidEditedUserProfileException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": " * Exception when user edits text file of user profile externally"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": " * to the wrong format."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class InvalidEditedUserProfileException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/InvalidNumberOfArgumentsException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class InvalidNumberOfArgumentsException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/KeywordNotFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * Exception when a keyword is not found during a find command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class KeywordNotFoundException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/ListNotFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//@@author chewyang"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * Exception to be thrown when a list is not found."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class ListNotFoundException extends Throwable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//@@author chewyang"
      }
    ],
    "authorContributionMap": {
      "chewyang": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/NoFileNameException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": " * Exception to be thrown if createSet command is missing file name."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class NoFileNameException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/SameIndexForMoveCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * This is the exception to be thrown when the result of a move command has no change to the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class SameIndexForMoveCommandException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/parser/ChainingParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.Trakcal.calList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.Trakcal.executeCmd;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.Trakcal.storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.print;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "//@@author e0425705"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Process chained input by user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class ChainingParser extends Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final String CHAIN_SEPARATOR \u003d \"\u0026\u0026\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int CHAIN_SEPARATOR_LENGTH \u003d 2;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public ChainingParser(String userInput) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prepares chained input by user into their respective commands to be read."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Command parseArgument() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        while (userInput.contains(CHAIN_SEPARATOR)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (!(userInput.endsWith(CHAIN_SEPARATOR))) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                userInput \u003d userInput + CommandParser.SPACE + CHAIN_SEPARATOR;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            int chainIndex \u003d userInput.indexOf(CHAIN_SEPARATOR);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String firstString \u003d userInput.substring(0, chainIndex).trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            CommandParser parser \u003d new CommandParser(firstString);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            Command command \u003d parser.parseArgument();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (command.getCanBeChained()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                executeCmd(command);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                print(\"\u0027\" + firstString + \"\u0027 cannot be chained!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            storage.updateFile(calList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            userInput \u003d super.userInput.substring(chainIndex + CHAIN_SEPARATOR_LENGTH).trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 43,
      "1-Karthigeyan-1": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/parser/CommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import seedu.duke.command.CreateNewSetCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.ListNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.preparecommand.PrepareAddCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.preparecommand.PrepareAddSetCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.preparecommand.PrepareByeCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.preparecommand.PrepareCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.preparecommand.PrepareDeleteCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.preparecommand.PrepareEditCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.preparecommand.PrepareFindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.preparecommand.PrepareGraphCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.preparecommand.PrepareHelpCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.preparecommand.PrepareListCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.preparecommand.PrepareMoveIndexCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.preparecommand.PrepareNewSetCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.preparecommand.PrepareUserCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidInputErrorMessage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayListNotFoundExceptionMessage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayStringIndexOutOfBoundsExceptionMessage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "//@@author 1-Karthigeyan-1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Initialises parser class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class CommandParser extends Parser {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final int SPLIT_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String USER_COMMAND \u003d \"user\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String CREATESET_COMMAND \u003d \"createset\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String ADD_COMMAND \u003d \"add\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String ADDSET_COMMAND \u003d \"addset\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String FIND_COMMAND \u003d \"find\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String EDIT_COMMAND \u003d \"edit\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String HELP_COMMAND \u003d \"help\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String MOVE_COMMAND \u003d \"move\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String GRAPH_COMMAND \u003d \"graph\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Store details in the class."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param userInput user from the user"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public CommandParser(String userInput) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Parses commands input by user."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return Command type"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Command parseArgument() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.userInput \u003d checkExtraSpaces();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"UserInput about to be parsed.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String[] arguments \u003d userInput.split(SPACE, SPLIT_LIMIT);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        PrepareCommand prepareCorrectCommand;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Command command  \u003d null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            switch (arguments[0].toLowerCase()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            case USER_COMMAND:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                prepareCorrectCommand \u003d new PrepareUserCommand(arguments);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            case CREATESET_COMMAND:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                prepareCorrectCommand \u003d new PrepareNewSetCommand(arguments);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            case ADD_COMMAND:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                prepareCorrectCommand \u003d new PrepareAddCommand(arguments);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            case ADDSET_COMMAND:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                prepareCorrectCommand \u003d new PrepareAddSetCommand(arguments);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            case FIND_COMMAND:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                prepareCorrectCommand \u003d new PrepareFindCommand(arguments);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            case EDIT_COMMAND:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                prepareCorrectCommand \u003d new PrepareEditCommand(arguments);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            case DELETE_COMMAND:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                prepareCorrectCommand \u003d new PrepareDeleteCommand(arguments);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            case LIST_COMMAND:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                prepareCorrectCommand \u003d new PrepareListCommand(arguments);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            case HELP_COMMAND:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                prepareCorrectCommand \u003d new PrepareHelpCommand(arguments);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            case MOVE_COMMAND:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                prepareCorrectCommand \u003d new PrepareMoveIndexCommand(arguments);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            case BYE_COMMAND:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                prepareCorrectCommand \u003d new PrepareByeCommand(arguments);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            case GRAPH_COMMAND:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                prepareCorrectCommand \u003d new PrepareGraphCommand(arguments);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                return new InvalidCommand(displayInvalidInputErrorMessage());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            command \u003d prepareCorrectCommand.prepareCommand();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            displayStringIndexOutOfBoundsExceptionMessage();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            System.out.println(e.getLocalizedMessage());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (ListNotFoundException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            displayListNotFoundExceptionMessage();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 1,
      "1-Karthigeyan-1": 120
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "//@@author 1-Karthigeyan-1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the abstract class for parsing commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public abstract class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String userInput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Initialises Parser class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param description user input to be parsed"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Parser(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.userInput \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Abstract command for parsing argument."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return Command class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public abstract Command parseArgument();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Checks for extra spaces in the userinput."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return trimmed input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String checkExtraSpaces() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return this.userInput.replaceAll(\" +\", CommandParser.SPACE).trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 1,
      "1-Karthigeyan-1": 36
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareAddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.AddExerciseCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.AddFoodCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.CalorieCountException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.CalorieTagNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.DateLimitException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.DescriptionLengthExceedException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.InvalidCalorieException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayAddActivityExceptionMessage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayAddCommandErrorMessage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayCalorieCountOutOfBoundMessage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayCalorieTagNotFoundExceptionMessage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayDateLimitExceptionMessage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayDateTimeExceptionMessage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayDescriptionLengthExceedExceptionMessage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayEmptyDescriptionMessage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayIncorrectDateTimeFormatEnteredMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidCalorieExceptionMessage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.Ui.displayAddMessage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "//@@author e0425705"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Prepares user input for add command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class PrepareAddCommand extends PrepareCommand {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected static final String CALORIE_TAG \u003d \"c/\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected static final String FOOD_TAG \u003d \"f/\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected static final String DATE_TAG \u003d \"d/\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected static final int ALPHABET_WITH_SLASH_LENGTH \u003d 2;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected static final int INDEX_NOT_FOUND \u003d -1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected static final String EXERCISE_TAG \u003d \"e/\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected static final boolean FALSE \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public PrepareAddCommand(String[] description) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prepares the add command by checking the userInput."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return AddFoodCommand or AddExerciseCommand"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Command prepareCommand() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (description[1].startsWith(FOOD_TAG)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                int calorieIndex \u003d description[1].indexOf(CALORIE_TAG);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                String foodDescription \u003d getAddActivityDescription(calorieIndex);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                boolean isDescriptionInputValid \u003d isDescriptionNotEmpty(foodDescription)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                        \u0026\u0026 isDescriptionLengthWithinRange(foodDescription);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                int dateIndex \u003d description[1].indexOf(DATE_TAG);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                String calorieInput \u003d getAddActivityCalorieCount(calorieIndex, dateIndex);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                int calories \u003d parseCalorie(calorieInput);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                boolean isCalorieValid \u003d isCaloriesWithinRange(calories);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                LocalDate date \u003d getAddActivityDate(isDescriptionInputValid, dateIndex, isCalorieValid);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                checkIfInputValuesForAddValid(isDescriptionInputValid, isCalorieValid);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                assert calories \u003e 0 : \"calories should be greater than 0\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                return new AddFoodCommand(foodDescription, calories, FALSE, date);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else if (description[1].startsWith(EXERCISE_TAG)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                int calorieIndex \u003d description[1].indexOf(CALORIE_TAG);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                String exerciseDescription \u003d getAddActivityDescription(calorieIndex);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                boolean isDescriptionInputValid \u003d isDescriptionNotEmpty(exerciseDescription)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                        \u0026\u0026 isDescriptionLengthWithinRange(exerciseDescription);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                int dateIndex \u003d description[1].indexOf(DATE_TAG);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                String calorieInput \u003d getAddActivityCalorieCount(calorieIndex, dateIndex);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                int calories \u003d parseCalorie(calorieInput);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                boolean isCalorieValid \u003d isCaloriesWithinRange(calories);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                LocalDate date \u003d getAddActivityDate(isDescriptionInputValid, dateIndex, isCalorieValid);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                checkIfInputValuesForAddValid(isDescriptionInputValid, isCalorieValid);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                assert calories \u003e 0 : \"calories should be greater than 0\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                return new AddExerciseCommand(exerciseDescription, calories, FALSE, date);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                displayAddActivityExceptionMessage();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayIncorrectDateTimeFormatEnteredMessage();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (CalorieCountException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayCalorieCountOutOfBoundMessage();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (CalorieTagNotFoundException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayCalorieTagNotFoundExceptionMessage();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (DescriptionLengthExceedException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayDescriptionLengthExceedExceptionMessage();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (InvalidCalorieException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayInvalidCalorieExceptionMessage();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (DateLimitException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayDateLimitExceptionMessage();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayDateTimeExceptionMessage();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayEmptyDescriptionMessage();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayAddActivityExceptionMessage();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (NullPointerException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayAddCommandErrorMessage();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayAddActivityExceptionMessage();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns activity date."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param isDescriptionInputValid boolean variable annotating if the description is valid"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param dateIndex index of date tag in user input"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param isCalorieValid boolean variable annotating if the calorie count is valid"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return activity date"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws DateLimitException if date entered is not valid"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected LocalDate getAddActivityDate(boolean isDescriptionInputValid, int dateIndex, boolean isCalorieValid)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throws DateLimitException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (isCalorieValid \u0026\u0026 isDescriptionInputValid \u0026\u0026 dateIndex \u003d\u003d INDEX_NOT_FOUND) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            date \u003d currentDate();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            date \u003d checkDateValidity(description[1], dateIndex);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Return calorie count input by user."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param calorieIndex index of calorie tag in user input"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param dateIndex index of date tag in user input"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return calorie count input by user"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected String getAddActivityCalorieCount(int calorieIndex, int dateIndex) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String calorieInput;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (dateIndex \u003d\u003d INDEX_NOT_FOUND) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            calorieInput \u003d description[1].substring(calorieIndex + ALPHABET_WITH_SLASH_LENGTH).trim();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            calorieInput \u003d description[1].substring(calorieIndex + ALPHABET_WITH_SLASH_LENGTH, dateIndex).trim();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return calorieInput;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Checks if the input parameters of the user is valid."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param isDescriptionInputValid boolean variable annotating if the description is valid"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param isCalorieValid boolean variable annotating if the calorie count is valid"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws Exception if either one of the boolean variable is false"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected void checkIfInputValuesForAddValid(boolean isDescriptionInputValid, boolean isCalorieValid)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throws Exception {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (isDescriptionInputValid \u0026\u0026 isCalorieValid) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayAddMessage();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throw new Exception();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns activity description."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param calorieIndex index of calorie tag in user input"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return activity description"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws CalorieTagNotFoundException if the calorie tag is not found in user input"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected String getAddActivityDescription(int calorieIndex) throws CalorieTagNotFoundException {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String foodDescription;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (calorieIndex \u003d\u003d INDEX_NOT_FOUND) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throw new CalorieTagNotFoundException();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            foodDescription \u003d description[1].substring(ALPHABET_WITH_SLASH_LENGTH, calorieIndex).trim();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return foodDescription;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 159,
      "1-Karthigeyan-1": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareAddSetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.AddSetCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import seedu.duke.exception.InvalidNumberOfArgumentsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayShortageOfArguments;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Prepares add set command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class PrepareAddSetCommand extends PrepareCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final int ARGUMENT_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public PrepareAddSetCommand(String[] description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Prepares file to be read from and added into the current list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return AddSet Command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Command prepareCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            isNumberOfArgumentsValid(ARGUMENT_LIMIT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return new AddSetCommand(description[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (InvalidNumberOfArgumentsException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            displayShortageOfArguments();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 4,
      "e0425705": 5,
      "1-Karthigeyan-1": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareByeCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import seedu.duke.exception.InvalidNumberOfArgumentsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayExcessNumberOfArguments;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Prepares bye command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class PrepareByeCommand extends PrepareCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final int ARGUMENT_LIMIT \u003d 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public PrepareByeCommand(String[] description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Checks validity of bye command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return byecommand"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Command prepareCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            isNumberOfArgumentsValid(ARGUMENT_LIMIT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (InvalidNumberOfArgumentsException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            displayExcessNumberOfArguments();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 5,
      "1-Karthigeyan-1": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.CalorieCountException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.DateLimitException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.DescriptionLengthExceedException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.InvalidCalorieException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import seedu.duke.exception.InvalidNumberOfArgumentsException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.ListNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "//@@author 1-Karthigeyan-1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Prepare commands."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Contains methods that are shared between commands."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public abstract class PrepareCommand {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String[] description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public LocalDateTime date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final int MAXIMUM_DESCRIPTION_LENGTH \u003d 40;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final int MAXIMUM_CALORIE_COUNT \u003d 3000;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final int MINIMUM_CALORIE_COUNT \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final int MINIMUM_INDEX \u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final String APPLICATION_LAUNCH_DATE \u003d \"2020-10-14\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final String NOTHING \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final int ALPHABET_WITH_SLASH_LENGTH \u003d 2;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public PrepareCommand(String[] description) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        setDate();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Gets current date."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private void setDate() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.date \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public abstract Command prepareCommand() throws Exception, ListNotFoundException;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Checks for index of the delete command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param index index of the delete command"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws IndexOutOfBoundsException if index is below 0"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected void checkIndex(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (index \u003c MINIMUM_INDEX) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Process date input by user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param dateInput date input by user"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return date"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws DateTimeParseException if the string is in the incorrect format"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected LocalDate processDate(String dateInput) throws DateTimeParseException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return LocalDate.parse(dateInput);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns current date."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return current date"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected LocalDate currentDate() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        LocalDate date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Checks if the date is valid."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param dateInput is date input by user"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param dateIndex index date is at"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return true if date is valid"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws DateLimitException if date exceeds limit"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected LocalDate checkDateValidity(String dateInput, int dateIndex) throws DateLimitException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        LocalDate date \u003d processDate(dateInput.substring(dateIndex + ALPHABET_WITH_SLASH_LENGTH).trim());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        LocalDate current \u003d LocalDate.now();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        LocalDate past \u003d processDate(APPLICATION_LAUNCH_DATE);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (date.isAfter(current)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throw new DateLimitException();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else if (date.isBefore(past)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throw new DateLimitException();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Checks if calorie input by user is empty."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param calorieInput calorie input by user"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return calorie count if it is not empty"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws InvalidCalorieException if the calorie count is empty"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected int parseCalorie(String calorieInput) throws InvalidCalorieException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (!calorieInput.equals(NOTHING)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return Integer.parseInt(calorieInput);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throw new InvalidCalorieException();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Checks if the description is filled."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description description input by user"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return true if no error in description input"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws EmptyDescriptionException if description input has error"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected boolean isDescriptionNotEmpty(String description) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (description.equals(SPACE) || description.equals(NOTHING)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Checks if the calorie input is within accepted range."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param calorie calories input by user"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return true is calorie is within range"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws CalorieCountException if calorie not within range"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected boolean isCaloriesWithinRange(int calorie) throws CalorieCountException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (calorie \u003c\u003d MINIMUM_CALORIE_COUNT || calorie \u003e MAXIMUM_CALORIE_COUNT) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throw new CalorieCountException();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Checks if the description character counts is within accepted range."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description description input by user"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return true if description length is within range"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws DescriptionLengthExceedException if description exceeds range"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected boolean isDescriptionLengthWithinRange(String description) throws DescriptionLengthExceedException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (description.length() \u003e MAXIMUM_DESCRIPTION_LENGTH) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throw new DescriptionLengthExceedException();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Checks if the number of argument is within limit."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param limit limit of description length"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return true if description length is within limit"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws InvalidNumberOfArgumentsException if description exceeds limit"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected boolean isNumberOfArgumentsValid(int limit) throws InvalidNumberOfArgumentsException {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (description.length !\u003d limit) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throw new InvalidNumberOfArgumentsException();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 139,
      "1-Karthigeyan-1": 46
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareCreateNewUserCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.CreateNewUserCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import seedu.duke.exception.InvalidNumberOfArgumentsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayExcessNumberOfArguments;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Prepares create new user command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class PrepareCreateNewUserCommand extends PrepareCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final int ARGUMENT_LIMIT \u003d 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Initializes PrepareCreateNewUserCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param description A list of description from parser"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public PrepareCreateNewUserCommand(String[] description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Checks for the validity of description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return CreateNewUserCommand"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Command prepareCommand() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            isNumberOfArgumentsValid(ARGUMENT_LIMIT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return new CreateNewUserCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (InvalidNumberOfArgumentsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            displayExcessNumberOfArguments();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 2,
      "1-Karthigeyan-1": 37
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareDeleteAll.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.Trakcal;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.DeleteAllCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.ListNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.model.DayMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.print;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "//@@author 1-Karthigeyan-1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Prepares Delete All Command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class PrepareDeleteAll extends PrepareDeleteCommand {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    DayMap dayMap;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Initializes PrepareDeleteAll command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param description list of descripition parsed from parser."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public PrepareDeleteAll(String[] description) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.dayMap \u003d Trakcal.calList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Checks for validity of deleteAll description."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return DeleteAllCommand"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Command prepareCommand() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            checkList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            if (isDeleteConfirmed()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                return new DeleteAllCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (ListNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            logging.writeToLogInfo(\"Exception! Empty List.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            print(\"List is empty\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            logging.writeToLogInfo(\"Exception! Input interrupted\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            print(\"Invalid input....aborting delete command.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Gets input from the user to confirm the delete command."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return true if the user says yes"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @throws NoSuchElementException if user inputs ctrl-c."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public boolean isDeleteConfirmed() throws NoSuchElementException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        System.out.println(\"Are you sure you want to delete all activities in today\u0027s list? [yes/no]\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"Prompt to delete all asked.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String userInput \u003d Trakcal.in.nextLine().trim().toLowerCase();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (userInput.equals(\"yes\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            logging.writeToLogInfo(\"User input yes\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } else if (userInput.equals(\"no\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            logging.writeToLogInfo(\"User Input no.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            print(\"Delete command aborted.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            print(\"Invalid input....aborting delete command.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Checks if the list if empty."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @throws ListNotFoundException List is empty or not found."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private void checkList() throws ListNotFoundException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (dayMap.getActivityList(LocalDate.now().atStartOfDay()).getNumberOfActivities() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new ListNotFoundException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 89
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareDeleteByIndexCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.DeleteByIndexCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayIndexNotNumberExceptionMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "//@@author 1-Karthigeyan-1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Prepares delete by index command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class PrepareDeleteByIndexCommand extends PrepareCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Initializes PrepareDeleteByIndexCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param description list of description parsed from parser."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public PrepareDeleteByIndexCommand(String[] description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Checks validity of delete by index command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return delete by index command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Command prepareCommand() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            int index \u003d Integer.parseInt(description[1]) - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            checkIndex(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return new DeleteByIndexCommand(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            displayIndexNotNumberExceptionMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 1,
      "1-Karthigeyan-1": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareDeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.Trakcal;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import seedu.duke.exception.InvalidNumberOfArgumentsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.model.DayMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayDeleteCommandNullPointerExceptionMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayDeleteCommandStringOutOfBoundExceptionMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayShortageOfArguments;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "//@@author 1-Karthigeyan-1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Prepares user input for delete command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class PrepareDeleteCommand extends PrepareCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final int ARGUMENT_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final String DELETE_ALL_KEYWORD \u003d \"all/\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected DayMap dayMap;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Initializes PrepareDeleteCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param description list of description from parser."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public PrepareDeleteCommand(String[] description) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dayMap \u003d Trakcal.calList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Prepares the delete command by checking the userInput."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return DeleteCommand"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Command prepareCommand() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            isNumberOfArgumentsValid(ARGUMENT_LIMIT);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            if (description[1].toLowerCase().equals(DELETE_ALL_KEYWORD)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                return new PrepareDeleteAll(description).prepareCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                return new PrepareDeleteByIndexCommand(description).prepareCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            displayDeleteCommandNullPointerExceptionMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            displayDeleteCommandStringOutOfBoundExceptionMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (InvalidNumberOfArgumentsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            displayShortageOfArguments();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 1,
      "1-Karthigeyan-1": 53
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareEditCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.EditExerciseCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.EditFoodCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.CalorieCountException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.CalorieTagNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.DescriptionLengthExceedException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.InvalidCalorieException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayCalorieCountOutOfBoundMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayCalorieTagNotFoundExceptionMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayDescriptionLengthExceedExceptionMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayEditActivityExceptionMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayEmptyDescriptionMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidCalorieExceptionMessage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "//@@author e0425705"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Prepares user input for edit command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class PrepareEditCommand extends PrepareCommand {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected static final String CALORIE_TAG \u003d \"c/\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected static final String FOOD_TAG \u003d \"f/\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected static final int ALPHABET_WITH_SLASH_LENGTH \u003d 2;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected static final int INDEX_NOT_FOUND \u003d -1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected static final String EXERCISE_TAG \u003d \"e/\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public PrepareEditCommand(String[] description) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prepares the edit command by checking the userInput."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return EditFoodCommand or EditExerciseCommand"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Command prepareCommand() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String[] arguments \u003d description[1].split(SPACE, 2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            int index \u003d Integer.parseInt(arguments[0]) - 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String userInput \u003d arguments[1];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (userInput.startsWith(FOOD_TAG)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                int calorieIndex \u003d userInput.indexOf(CALORIE_TAG);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                String foodDescription \u003d getEditActivityDescription(userInput, calorieIndex);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                boolean isDescriptionInputValid \u003d isDescriptionNotEmpty(foodDescription)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                        \u0026\u0026 isDescriptionLengthWithinRange(foodDescription);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                String calorieInput \u003d userInput.substring(calorieIndex + ALPHABET_WITH_SLASH_LENGTH).trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                int calories \u003d parseCalorie(calorieInput);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                boolean isCalorieValid \u003d isCaloriesWithinRange(calories);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                checkIfInputValuesForEditValid(isDescriptionInputValid, isCalorieValid);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                assert calories \u003e 0 : \"calories should be \u003e 0\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                return new EditFoodCommand(index, foodDescription, calories);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else if (userInput.startsWith(EXERCISE_TAG)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                int calorieIndex \u003d userInput.indexOf(CALORIE_TAG);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                String exerciseDescription \u003d getEditActivityDescription(userInput, calorieIndex);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                boolean isDescriptionInputValid \u003d isDescriptionNotEmpty(exerciseDescription)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                        \u0026\u0026 isDescriptionLengthWithinRange(exerciseDescription);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                String calorieInput \u003d userInput.substring(calorieIndex + ALPHABET_WITH_SLASH_LENGTH).trim();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                int calories \u003d parseCalorie(calorieInput);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                boolean isCalorieValid \u003d isCaloriesWithinRange(calories);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                checkIfInputValuesForEditValid(isDescriptionInputValid, isCalorieValid);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                assert calories \u003e 0 : \"calories should be \u003e 0\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                return new EditExerciseCommand(index, exerciseDescription, calories);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                displayEditActivityExceptionMessage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (CalorieCountException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayCalorieCountOutOfBoundMessage();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (CalorieTagNotFoundException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayCalorieTagNotFoundExceptionMessage();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (DescriptionLengthExceedException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayDescriptionLengthExceedExceptionMessage();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (InvalidCalorieException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayInvalidCalorieExceptionMessage();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayEmptyDescriptionMessage();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (NullPointerException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayEditActivityExceptionMessage();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayEditActivityExceptionMessage();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayEditActivityExceptionMessage();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Checks if the input parameters of the user is valid."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param isDescriptionInputValid boolean variable annotating if the description is valid"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param isCalorieValid boolean variable annotating if the calorie count is valid"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws Exception if either one of the boolean variable is false"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected void checkIfInputValuesForEditValid(boolean isDescriptionInputValid, boolean isCalorieValid)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throws Exception {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (!(isCalorieValid \u0026\u0026 isDescriptionInputValid)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throw new Exception();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns new activity description."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param userInput user input"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param calorieIndex index of calorie tag in user input"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return new activity description"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws CalorieTagNotFoundException if the calorie tag is not found in user input"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected String getEditActivityDescription(String userInput, int calorieIndex) throws CalorieTagNotFoundException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String foodDescription;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (calorieIndex \u003d\u003d INDEX_NOT_FOUND) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throw new CalorieTagNotFoundException();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            foodDescription \u003d userInput.substring(ALPHABET_WITH_SLASH_LENGTH, calorieIndex).trim();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return foodDescription;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 112,
      "1-Karthigeyan-1": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareEditUserProfileCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.EditUserProfileCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import seedu.duke.exception.InvalidNumberOfArgumentsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayShortageOfArguments;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Prepares editing of user profile."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class PrepareEditUserProfileCommand extends PrepareCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public PrepareEditUserProfileCommand(String[] description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Prepares to edit user profile."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return EditUserProfileCommand"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @throws IOException when there is an error"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Command prepareCommand() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            isNumberOfArgumentsValid(2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return new EditUserProfileCommand(description[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (InvalidNumberOfArgumentsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            displayShortageOfArguments();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 7,
      "1-Karthigeyan-1": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareFindCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.FindAllCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.FindCalorieCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.FindDescriptionCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.FindEitherCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import seedu.duke.exception.InvalidNumberOfArgumentsException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayFindErrorMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayShortageOfArguments;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "//@@author poonchuanan"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Prepares find command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class PrepareFindCommand extends PrepareCommand {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected static final String DESCRIPTION_TAG \u003d \"d/\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected static final String CALORIE_TAG \u003d \"c/\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected static final String ALL_TAG \u003d \"a/\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected static final String EITHER_TAG \u003d \"e/\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public PrepareFindCommand(String[] description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Prepares the find command by checking the userInput."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * If the keyword contains activity description, returns FindDescriptionCommand."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Else if the keyword contains calories count, returns FindCalorieCommand."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return FindCalorieCommand"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public Command prepareCommand() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            isNumberOfArgumentsValid(2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            if (description[1].startsWith(DESCRIPTION_TAG)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                String descriptionString \u003d description[1].substring(2).trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                return new FindDescriptionCommand(descriptionString);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            } else if (description[1].startsWith(CALORIE_TAG)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                String calorie \u003d description[1].substring(2).trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                return new FindCalorieCommand(calorie);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            } else if (description[1].startsWith(ALL_TAG)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                return new FindAllCommand(description[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            } else if (description[1].startsWith(EITHER_TAG)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                return new FindEitherCommand(description[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                displayFindErrorMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (NullPointerException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            displayFindErrorMessage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            logging.writeToLogWarning(\"Wrong index for find\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (InvalidNumberOfArgumentsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            displayShortageOfArguments();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            logging.writeToLogWarning(\"Wrong number of arguments for find\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 1,
      "1-Karthigeyan-1": 11,
      "poonchuanan": 50
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareGraphCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.Trakcal;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.GraphCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import seedu.duke.exception.InvalidNumberOfArgumentsException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.ListNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayEmptyListError;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayExcessNumberOfArguments;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "//@@author 1-Karthigeyan-1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Prepares graph command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class PrepareGraphCommand extends PrepareCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final int ARGUMENT_LIMIT \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public PrepareGraphCommand(String[] description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Prepares the arguments needed for the graph command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return graphCommand"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @throws Exception if no records are found"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Command prepareCommand() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            isNumberOfArgumentsValid(ARGUMENT_LIMIT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            isListEmpty();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return new GraphCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (InvalidNumberOfArgumentsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            logging.writeToLogInfo(\"Too many arguments!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            displayExcessNumberOfArguments();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (ListNotFoundException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            displayEmptyListError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            logging.writeToLogInfo(\"List is empty.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Checks if the list is empty."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return false if list is not empty"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @throws ListNotFoundException if list is empty or not found."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public boolean isListEmpty() throws ListNotFoundException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (Trakcal.calList.getHashMap().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new ListNotFoundException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 1,
      "1-Karthigeyan-1": 57
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareHelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.HelpCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import seedu.duke.exception.InvalidNumberOfArgumentsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayExcessNumberOfArguments;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "//@@author e0425705"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Prepares help command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class PrepareHelpCommand extends PrepareCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected static final int ARGUMENT_LIMIT \u003d 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public PrepareHelpCommand(String[] description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Checks for validity of help command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return help command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Command prepareCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            isNumberOfArgumentsValid(ARGUMENT_LIMIT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (InvalidNumberOfArgumentsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayExcessNumberOfArguments();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 28,
      "1-Karthigeyan-1": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.ListCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayIncorrectDateTimeFormatEnteredMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//@@author chewyang"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * Prepares list command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class PrepareListCommand extends PrepareCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public PrepareListCommand(String[] description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Prepares the list command by checking the userInput."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return ListCommand"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public Command prepareCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (description.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            String dateString \u003d description[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                LocalDate date \u003d processDate(dateString);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                return new ListCommand(date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                displayIncorrectDateTimeFormatEnteredMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                logging.writeToLogWarning(\"Date entered is of incorrect format\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 37,
      "1-Karthigeyan-1": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareMoveIndexCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.MoveActivityCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayIndexNotNumberExceptionMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static seedu.duke.ui.Ui.PROMPT_USER_OF_HELP_MESSAGE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//@@author chewyang"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * Prepares move command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class PrepareMoveIndexCommand extends PrepareCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static final String FROM_TAG \u003d \"from/\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static final String BELOW_TAG \u003d \"below/\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static final String BOTH_TAGS_MISSING_ERROR_MESSAGE \u003d \"\u0027from/\u0027 and \u0027below/\u0027 keyword is missing!\\n \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            + PROMPT_USER_OF_HELP_MESSAGE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static final String FROM_TAG_MISSING_ERROR_MESSAGE \u003d \"\u0027from/\u0027 keyword is missing!\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            + PROMPT_USER_OF_HELP_MESSAGE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static final String BELOW_TAG_MISSING_ERROR_MESSAGE \u003d \"\u0027below/\u0027 keyword is missing!\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            + PROMPT_USER_OF_HELP_MESSAGE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private static final String INDEX_NOT_A_NUMBER_MESSAGE \u003d \"Accessing a list with a index that is not a number, \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            + \"move unsuccessful\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public PrepareMoveIndexCommand(String[] description) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Prepares the arguments needed for moving an activity from one index to another."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return the moveCommand"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @throws IndexOutOfBoundsException if the index is not valid"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public Command prepareCommand() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        //Removing additional spaces in the user\u0027s input"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String after \u003d description[1].trim().replaceAll(\" +\", SPACE).toLowerCase();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int firstIndex \u003d after.indexOf(FROM_TAG) + FROM_TAG.length(); //index after first keyword"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int secondIndex \u003d after.indexOf(BELOW_TAG) + BELOW_TAG.length(); //index after second keyword"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (!after.contains(FROM_TAG) \u0026\u0026 !after.contains(BELOW_TAG)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return new InvalidCommand(BOTH_TAGS_MISSING_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else if (!after.contains(FROM_TAG)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return new InvalidCommand(FROM_TAG_MISSING_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else if (!after.contains(BELOW_TAG)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return new InvalidCommand(BELOW_TAG_MISSING_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String firstIndexString \u003d after.substring(firstIndex).trim().split(SPACE)[0];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String secondIndexString \u003d after.substring(secondIndex).trim().split(SPACE)[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int indexToBeChanged;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int indexToBeInsertedBelow;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            indexToBeChanged \u003d Integer.parseInt(firstIndexString);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            assert indexToBeChanged \u003e 0 : \"Index should be more than 0\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            indexToBeInsertedBelow \u003d Integer.parseInt(secondIndexString);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            assert indexToBeInsertedBelow \u003e\u003d 0 : \"Index should be more than 0\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return new MoveActivityCommand(indexToBeChanged, indexToBeInsertedBelow);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            displayIndexNotNumberExceptionMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            logging.writeToLogWarning(INDEX_NOT_A_NUMBER_MESSAGE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 70,
      "e0425705": 1,
      "1-Karthigeyan-1": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareNewSetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.CreateNewSetCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.exception.ListNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class PrepareNewSetCommand extends PrepareCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public PrepareNewSetCommand(String[] description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Command prepareCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return new CreateNewSetCommand(description[1]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 1,
      "1-Karthigeyan-1": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareUserCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import seedu.duke.exception.InvalidNumberOfArgumentsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidEditUserProfileMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayShortageOfArguments;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Prepares user command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class PrepareUserCommand extends PrepareCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final int ARGUMENT_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public PrepareUserCommand(String[] description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Check validity for user commands."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return command depending on the description."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Command prepareCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            isNumberOfArgumentsValid(ARGUMENT_LIMIT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (InvalidNumberOfArgumentsException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            displayShortageOfArguments();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String[] input \u003d description[1].split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        switch (input[0].trim()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case \"l/\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return new PrepareUserListCommand(input).prepareCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case \"c/\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return new PrepareCreateNewUserCommand(input).prepareCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case \"e/\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return new PrepareEditUserProfileCommand(input).prepareCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidEditUserProfileMessage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 2,
      "e0425705": 3,
      "1-Karthigeyan-1": 42
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/preparecommand/PrepareUserListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.ListUserProfileCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import seedu.duke.exception.InvalidNumberOfArgumentsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayExcessNumberOfArguments;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class PrepareUserListCommand extends PrepareCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public PrepareUserListCommand(String[] description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Prepares user profile into a list and prints it out."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return ListUserProfileCommand"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Command prepareCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            isNumberOfArgumentsValid(1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return new ListUserProfileCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (InvalidNumberOfArgumentsException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            displayExcessNumberOfArguments();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 2,
      "1-Karthigeyan-1": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/Activity.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "//@@author e0425705"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Stores activities attributes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Activity {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected int calories;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected boolean isFromFile;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Constructor of class Activity."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description activity description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param calories activity calories count"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Activity(String description, int calories, LocalDate date, boolean isFromFile) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.calories \u003d calories;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.isFromFile \u003d isFromFile;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        // If the activity added is not from decoding the file, print confirmation message"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (!isFromFile) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            System.out.println(toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Gets activity description."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return activity description"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String getActivityDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Gets activity calories."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return activity calories"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public int getActivityCalories() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return this.calories;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Gets activity date."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return activity date"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public LocalDate getActivityDate() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns String to be printed out."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return String to be printed out."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return description + \" | \" + calories;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 3,
      "e0425705": 65
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/ActivityList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.Trakcal;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.exception.SameIndexForMoveCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.Ui.displayEmptyActivityCounterMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//@@author chewyang"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * List of activities for any day."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class ActivityList extends Trakcal {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private ArrayList\u003cActivity\u003e activities;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private int activityCounter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private int netCalorie;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Constructor of class ActivityList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public ActivityList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        activities \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        activityCounter \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        netCalorie \u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Returns the current number of activities in the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return current number of activities in the list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public int getNumberOfActivities() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return activities.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public ArrayList getArrayList() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return activities;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Adds new activity to the list and updates the netCalorie accordingly to the activity type added."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param activity new activity that will be added to the current activity"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws IndexOutOfBoundsException if the calories is not within the limits"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public void addActivity(Activity activity) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        activities.add(activity);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        activityCounter++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (activity instanceof Food) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            netCalorie +\u003d activity.calories;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else if (activity instanceof Exercise) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            netCalorie -\u003d activity.calories;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * This method replaces the current activity at index with a new activity."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * To change the description of the current activity."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param index    is the index of the current activity to be replaced"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param activity is the new activity that will be replacing the current activity"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public void insertActivity(int index, Activity activity) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (isValidIndex(index)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            // removes calories of previous in list index"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            Activity activityToReplace \u003d activities.get(index);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (activityToReplace instanceof Food) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                netCalorie -\u003d activityToReplace.calories;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else if (activityToReplace instanceof Exercise) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                netCalorie +\u003d activityToReplace.calories;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            activities.set(index, activity);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            // updates calories of edited list index"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (activity instanceof Food) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                netCalorie +\u003d activity.calories;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else if (activity instanceof Exercise) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                netCalorie -\u003d activity.calories;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //@@author chewyang"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * This method moves a activity from a given index and to a place below a given index."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param indexToBeMovedFrom     this is the index at which the activity will be moved from"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param indexToBeInsertedBelow this is the index at which the activity will be moved to below"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @throws IndexOutOfBoundsException if the index is not within the limits"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void moveActivity(int indexToBeMovedFrom, int indexToBeInsertedBelow) throws IndexOutOfBoundsException,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            SameIndexForMoveCommandException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (isValidIndexForMoveCommand(indexToBeMovedFrom) \u0026\u0026 isValidIndexForMoveCommand(indexToBeInsertedBelow)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            if (indexToBeInsertedBelow - indexToBeMovedFrom \u003d\u003d 1) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                throw new SameIndexForMoveCommandException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            } else if (indexToBeMovedFrom \u003e indexToBeInsertedBelow) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                Activity activity \u003d getActivity(indexToBeMovedFrom);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                activities.remove(indexToBeMovedFrom);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                activities.add(indexToBeInsertedBelow, activity);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            } else if (indexToBeMovedFrom \u003c indexToBeInsertedBelow) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                Activity activity \u003d getActivity(indexToBeMovedFrom);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                activities.remove(indexToBeMovedFrom);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                activities.add(indexToBeInsertedBelow - 1, activity);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                throw new SameIndexForMoveCommandException();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public int getNetCalorie() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return netCalorie;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public Activity getActivity(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (isValidIndex(index)) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return activities.get(index);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    //@@author 1-Karthigeyan-1"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Removes an activity from the list via index."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param index index of activity in list"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void removeActivity(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (isValidIndex(index)) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Activity activityToRemove \u003d activities.get(index);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            if (activityToRemove instanceof Food) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                netCalorie -\u003d activityToRemove.calories;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            } else if (activityToRemove instanceof Exercise) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                netCalorie +\u003d activityToRemove.calories;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            activities.remove(index);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            activityCounter--;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            System.out.println(\"Please make sure index is within range\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //@@author chewyang"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Prints the list of activities."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (activityCounter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            displayEmptyActivityCounterMessage();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            for (int i \u003d 0; i \u003c activityCounter; i++) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                System.out.println((i + 1) + \". \" + getActivity(i).toString());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Checks if the index is valid for a move command."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * This is added to fulfill edge cases."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param index is the index to be checked for validity"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public boolean isValidIndexForMoveCommand(int index) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if ((index \u003e\u003d 0) \u0026\u0026 (index \u003c\u003d activityCounter)) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Checks if the index is valid."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param index index of activity in list"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return true if index is within range, else false"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public boolean isValidIndex(int index) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if ((index \u003e\u003d 0) \u0026\u0026 (index \u003c activityCounter)) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    //@@author 1-Karthigeyan-1"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Clears the list of activities."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void clearList() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        activities.clear();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        activityCounter \u003d 0;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        netCalorie \u003d 0;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //@@author chewyang"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Sets the activities as a string."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * For e.g, [F] | apple | 50, [F] | banana | 100, [E] | push-up | 10, [E] | jogging | 60"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return activities as a string"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String activitiesString \u003d Arrays.toString(activities.toArray());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        activitiesString \u003d activitiesString.substring(1, activitiesString.length() - 1);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return (activitiesString);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 144,
      "e0425705": 51,
      "1-Karthigeyan-1": 34
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/DayMap.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.exception.EmptyKeywordException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.exception.FindSlashException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.exception.KeywordNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.exception.ListNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.exception.SameIndexForMoveCommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.Ui.displayEmptyActivityCounterMessage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.ui.Ui.displayMessage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//@@author chewyang"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * Use hashmap of to store all the data."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * The key of the hashmap would be the date and the value would be the activityList for that day."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class DayMap {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private HashMap\u003cLocalDate, ActivityList\u003e dayMap;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private ActivityList lastSeenList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private static final String findConsecutiveSlashRegex \u003d \"/{2,}\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private Pattern pattern \u003d Pattern.compile(findConsecutiveSlashRegex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public DayMap() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.dayMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.lastSeenList \u003d new ActivityList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Sets the last seen list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param activityList is the list to be passed into the lastSeenList"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void setLastSeenList(ActivityList activityList) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.lastSeenList \u003d activityList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Gets the date from the specified index of the lastSeenList."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param index index of the lastSeenList"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return localDate"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public LocalDate getDateFromLastSeenListAtIndex(int index) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return lastSeenList.getActivity(index).getActivityDate();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Returns the last seen list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return the lastSeenList"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public ActivityList getLastSeenList() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return this.lastSeenList;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Displays the list using the listDrawer class."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param date is the date of the list to be drawn."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void drawListAfterListCommand(LocalDate date) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        ListDrawer listDrawer \u003d new ListDrawer(date, lastSeenList);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        listDrawer.printList();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Displays the list using the findDrawer class."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void drawListAfterFindCommand() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        FindDrawer findDrawer \u003d new FindDrawer(lastSeenList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        findDrawer.printList();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Adds activity into activityList under the corresponding dateTime."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Creates a new activityList if there are none under the specified date."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param dateTime Specified date to extract activitylist from the dayMap."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param activity Description of the activity, the userinput"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void addActivity(LocalDateTime dateTime, Activity activity) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        ActivityList alist \u003d this.getActivityList(dateTime);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (alist \u003d\u003d null) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            dayMap.put(dateTime.toLocalDate(), new ActivityList());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            alist \u003d this.getActivityList(dateTime);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        alist.addActivity(activity);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * This function removes an activity and replaces it with a new one, to work with edit command."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param index the index of the activity to be deleted"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param activity the activity to replace the old one."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void insertActivity(int index, Activity activity) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        lastSeenList.insertActivity(index, activity);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Returns the activityList of the specified date."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param dateTime is the date specified to extract the list from"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return activityList"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public ActivityList getActivityList(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return dayMap.get(dateTime.toLocalDate());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Returns the size of the specified activity list."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param dateTime the date of which the activitylist should be extracted from"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return the size of the list"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public int getSizeOfActivityList(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        ActivityList alist \u003d this.getActivityList(dateTime);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (alist \u003d\u003d null) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return alist.getNumberOfActivities();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Returns the net calorie."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param date is the date of which to extract the activitylist from"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return the net calorie"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public int getNetCalorieOfDay(LocalDate date) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        ActivityList alist \u003d getActivityList(date.atStartOfDay());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return alist.getNetCalorie();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public HashMap\u003cLocalDate, ActivityList\u003e getHashMap() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return dayMap;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Prints the activities for the given date."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param date specified date to print the list"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void printActivityList(LocalDate date) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (!dayMap.containsKey(date)) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            displayEmptyActivityCounterMessage();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            getActivityList(date.atStartOfDay()).printList();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    //@@author poonchuanan"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Finds the activities containing a keyword."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param description is the keyword where the activity should contain"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws KeywordNotFoundException when the keyword is not found in any activity"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws EmptyKeywordException when search term is empty"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void listActivitiesContainingDescription(String description)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throws KeywordNotFoundException, EmptyKeywordException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        setLastSeenList(new ActivityList());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Iterator it \u003d dayMap.entrySet().iterator();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        int activityFindCounter \u003d 0;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        if (description.trim().equals(\"\")) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throw new EmptyKeywordException();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        while (it.hasNext()) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Map.Entry pair \u003d (Map.Entry) it.next();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String date \u003d pair.getKey().toString();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            ActivityList activities \u003d (ActivityList) pair.getValue();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            int activityCounter \u003d activities.getNumberOfActivities();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            if (activityCounter \u003e 0) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                for (int i \u003d 0; i \u003c activityCounter; i++) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    String currentLine \u003d activities.getActivity(i).toString();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    String descriptionToCheck \u003d currentLine.substring(currentLine.indexOf(\"|\") + 1);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    descriptionToCheck \u003d descriptionToCheck.substring(0, descriptionToCheck.indexOf(\"|\")).trim();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    if (descriptionToCheck.contains(description)) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        lastSeenList.addActivity(activities.getActivity(i));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        activityFindCounter++;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        if (activityFindCounter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throw new KeywordNotFoundException();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Finds the activities containing a keyword."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param calorie is the calorie to be matched"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws KeywordNotFoundException when the keyword is not found in any activity"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws EmptyKeywordException when search term is empty"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void listActivitiesContainingCalorie(String calorie)"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throws KeywordNotFoundException, EmptyKeywordException {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        setLastSeenList(new ActivityList());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Iterator it \u003d dayMap.entrySet().iterator();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        int activityFindCounter \u003d 0;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        if (calorie.trim().equals(\"\")) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throw new EmptyKeywordException();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        while (it.hasNext()) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Map.Entry pair \u003d (Map.Entry) it.next();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String date \u003d pair.getKey().toString();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            ActivityList activities \u003d (ActivityList) pair.getValue();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            int activityCounter \u003d activities.getNumberOfActivities();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            if (activityCounter \u003e 0) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                for (int i \u003d 0; i \u003c activityCounter; i++) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    String currentLine \u003d activities.getActivity(i).toString();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    int calorieStartIndex \u003d currentLine.lastIndexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    String calorieToCheck \u003d currentLine.substring(calorieStartIndex).trim();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    if (calorieToCheck.equals(calorie)) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        lastSeenList.addActivity(activities.getActivity(i));"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        activityFindCounter++;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        if (activityFindCounter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throw new KeywordNotFoundException();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Finds the activities containing all keywords."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param userInput is the unparsed activity description"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws KeywordNotFoundException when the keyword is not found in any activity"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws EmptyKeywordException when search term is empty"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws FindSlashException when there are 2 or more consecutive slashes in input"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void listActivitiesContainingAll(String userInput)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throws KeywordNotFoundException, EmptyKeywordException, FindSlashException {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        setLastSeenList(new ActivityList());"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Iterator it \u003d dayMap.entrySet().iterator();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        int activityFindCounter \u003d 0;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Matcher matcher \u003d pattern.matcher(userInput.replaceAll(\"\\\\s\",\"\"));"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        if (userInput.substring(2).trim().equals(\"\")) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throw new EmptyKeywordException();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } else if (matcher.find()) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throw new FindSlashException();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        while (it.hasNext()) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Map.Entry pair \u003d (Map.Entry) it.next();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String date \u003d pair.getKey().toString();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            ActivityList activities \u003d (ActivityList) pair.getValue();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            int activityCounter \u003d activities.getNumberOfActivities();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            if (activityCounter \u003e 0) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                for (int i \u003d 0; i \u003c activityCounter; i++) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    boolean hasAllWords;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    String currentLine \u003d activities.getActivity(i).toString();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    hasAllWords \u003d checkAllWords(currentLine, userInput);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    if (hasAllWords) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        lastSeenList.addActivity(activities.getActivity(i));"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        activityFindCounter++;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        if (activityFindCounter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throw new KeywordNotFoundException();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Finds the activities containing at least one of the keywords inputted."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param userInput is the unparsed activity description"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws KeywordNotFoundException when the keyword is not found in any activity"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws EmptyKeywordException when search term is empty"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws FindSlashException when there are 2 or more consecutive slashes in input"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void listActivitiesContainingEither(String userInput)"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throws KeywordNotFoundException, EmptyKeywordException, FindSlashException {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        setLastSeenList(new ActivityList());"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Iterator it \u003d dayMap.entrySet().iterator();"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        int activityFindCounter \u003d 0;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Matcher matcher \u003d pattern.matcher(userInput.replaceAll(\"\\\\s\",\"\"));"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        if (userInput.substring(2).trim().equals(\"\")) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throw new EmptyKeywordException();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } else if (matcher.find()) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throw new FindSlashException();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        while (it.hasNext()) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Map.Entry pair \u003d (Map.Entry) it.next();"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String date \u003d pair.getKey().toString();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            ActivityList activities \u003d (ActivityList) pair.getValue();"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            int activityCounter \u003d activities.getNumberOfActivities();"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            if (activityCounter \u003e 0) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                for (int i \u003d 0; i \u003c activityCounter; i++) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    boolean hasOneWord;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    String currentLine \u003d activities.getActivity(i).toString();"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    hasOneWord \u003d checkEitherWords(currentLine, userInput);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    if (hasOneWord) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        lastSeenList.addActivity(activities.getActivity(i));"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        activityFindCounter++;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        if (activityFindCounter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throw new KeywordNotFoundException();"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Checks if all keywords inputted by user is present in entry."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param currentLine current entry to be checked"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param userInput String user typed into CLI"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return true if all words are present, false otherwise"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private boolean checkAllWords(String currentLine, String userInput) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        ArrayList\u003cString\u003e wordsToCheck \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        wordsToCheck \u003d getAllTags(userInput);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        for (String word : wordsToCheck) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            if (!currentLine.contains(word)) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Checks if one of the keywords inputted by user is present in entry."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param currentLine current entry to be checked"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param userInput String user typed into CLI"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return  hasOneWord true if just one word is present, false otherwise"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private boolean checkEitherWords(String currentLine, String userInput) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        ArrayList\u003cString\u003e wordsToCheck \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        wordsToCheck \u003d getAllTags(userInput);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        for (String word : wordsToCheck) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            if (currentLine.contains(word)) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Parses all keywords inputted by user into an arraylist."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param userInput String user typed into CLI"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private ArrayList\u003cString\u003e getAllTags(String userInput) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        while (userInput.indexOf(\"/\") !\u003d userInput.lastIndexOf(\"/\")) {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            int firstIndex \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            int secondIndex \u003d userInput.indexOf(\"/\", userInput.indexOf(\"/\") + 1);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String firstWord \u003d userInput.substring(firstIndex + 1, secondIndex).trim();"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            userInput \u003d userInput.substring(secondIndex);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            tags.add(firstWord);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        userInput \u003d userInput.substring(userInput.indexOf(\"/\") + 1).trim();"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        tags.add(userInput);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    //@@author 1-Karthigeyan-1"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Deletes the activity with a given index."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param index is the index of the activity to be deleted"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @throws IndexOutOfBoundsException if the index provided is out of range"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void deleteActivity(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (lastSeenList.isValidIndex(index)) {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Activity activityToMatch \u003d lastSeenList.getActivity(index);"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //if previous command was the list command then this will straight away delete the activity"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            // from the list in the daymap"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            lastSeenList.removeActivity(index);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //if all the activities in a date is deleted, this is the key to be removed from the daymap"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            LocalDate keyToDelete \u003d null;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //iterating through the entire daymap to find the activity to delete"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Iterator it \u003d dayMap.entrySet().iterator();"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            while (it.hasNext()) {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                Map.Entry pair \u003d (Map.Entry) it.next();"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                ActivityList activities \u003d (ActivityList) pair.getValue();"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                int activityCounter \u003d activities.getNumberOfActivities();"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                keyToDelete \u003d getKeyToRemove(activityToMatch, keyToDelete, pair, activities, activityCounter);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            dayMap.remove(keyToDelete);"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            displayMessage(\"Activity removed!\");"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Get key to remove by matching."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param activityToMatch activity to match"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param keyToDelete the key to be deleted"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param pair DayMap entry pair"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param activities activity list"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param activityCounter the maximum activities in the list"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return key to delete"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private LocalDate getKeyToRemove(Activity activityToMatch, LocalDate keyToDelete, Map.Entry pair,"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                                     ActivityList activities, int activityCounter) {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (activityCounter \u003e 0) {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            keyToDelete \u003d checkActivitiesInList(activityToMatch, keyToDelete, pair, activities, activityCounter);"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //If encountered a activitylist with a count of 0,"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            // which will be resulted if deleted the last item of ActivityList from a list command"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            keyToDelete \u003d checkEmptyList(keyToDelete, pair, activityCounter);"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return keyToDelete;"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Iterate through the activities in the list."
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param activityToMatch activity to match"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param keyToDelete the key to be deleted"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param pair DayMap entry pair"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param activities activity list"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param activityCounter the maximum activites in the list"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return key to delete"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private LocalDate checkActivitiesInList(Activity activityToMatch, LocalDate keyToDelete,"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                                            Map.Entry pair, ActivityList activities, int activityCounter) {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        for (int i \u003d 0; i \u003c activityCounter; i++) {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            if (activityToMatch.equals(activities.getActivity(i))) {"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                activities.removeActivity(i);"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                //if deleted the last item in the ActivityList then obtain the key to be deleted from daymap"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                keyToDelete \u003d checkEmptyList(keyToDelete, pair, activities.getNumberOfActivities());"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return keyToDelete;"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Checks for empty list."
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param keyToDelete key for dayMap"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param pair DayMap entry pair"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param numberOfActivities number of activites in the current list"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return the key to delete"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private LocalDate checkEmptyList(LocalDate keyToDelete, Map.Entry pair, int numberOfActivities) {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (numberOfActivities \u003d\u003d 0) {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            keyToDelete \u003d (LocalDate) pair.getKey();"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return keyToDelete;"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //@@author chewyang"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Moves an activity from one index to another."
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param indexToBeMovedFrom the index to be moved from"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param indexToBeInsertedBelow the index to be moved to"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @throws IndexOutOfBoundsException when index is not within the bounds"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @throws ListNotFoundException when the list is not found"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void move(int indexToBeMovedFrom, int indexToBeInsertedBelow)"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            throws IndexOutOfBoundsException, ListNotFoundException, SameIndexForMoveCommandException {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (lastSeenList.getNumberOfActivities() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            throw new ListNotFoundException();"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            lastSeenList.moveActivity(indexToBeMovedFrom - 1, indexToBeInsertedBelow);"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Sets the activities at a given date as a string."
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * For e.g, 2020-10-11: [F] | apple | 50, [F] | banana | 100, [E] | pushup | 10, [E] | jogging | 60."
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param dateTime is the specified date"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return activities as a string for the given date"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        ActivityList alist \u003d this.getActivityList(dateTime);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return dateTime.toLocalDate().toString() + \", \" + alist.toString();"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints the primitive list of activities for the given date."
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param date is the date specified to extract the activitylist from"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public void printList(LocalDate date) {"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(date.toString());"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        getActivityList(date.atStartOfDay()).printList();"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 176,
      "e0425705": 21,
      "poonchuanan": 217,
      "1-Karthigeyan-1": 96
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/Exercise.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "//@@author e0425705"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Sub-class of Activity."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Exercise extends Activity {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Constructor of class Exercise."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description exercise description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param calories calories burnt"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Exercise(String description, int calories, LocalDate date, boolean isFromFile) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(description, calories, date, isFromFile);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Gets exercise string."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return exercise string"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String getString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"[E] | \" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 3,
      "e0425705": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/FindDrawer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//@@author chewyang"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * This class is used to create a responsive interface for the listing feature after a list command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class FindDrawer extends ListDrawer {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final int START_INDEX_FOR_DESCRIPTION \u003d 49;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final int START_INDEX_FOR_CALORIES \u003d 100;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final int MAX_STRING_FOR_DESCRIPTION \u003d 36 + DESCRIPTION.length();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final int START_INDEX_FOR_EXERCISE_TYPE \u003d 19;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final int START_INDEX_FOR_FOOD_TYPE \u003d 21;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private static final int START_INDEX_FOR_ACTIVITY_DATE \u003d 9;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Constructor for the findDrawer class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param lastSeenList list to be drawn"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public FindDrawer(ActivityList lastSeenList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        super(lastSeenList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Prints the list of activities."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        System.out.println(listHeaderString()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + NEWLINE"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + increaseStringLength(DIVIDER, listHeaderString().length())"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + NEWLINE"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + allActivityString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Generates the string for a single activity."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param index index of the activity"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return string of single activity"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected String singleActivityString(int index) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        ArrayList\u003cString\u003e descriptions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String restOfDescription \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String indexString \u003d Integer.toString(index + 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int lengthOfIndex \u003d indexString.length();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String descriptionString \u003d activityList.getActivity(index).getActivityDescription();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int lengthOfDescription \u003d descriptionString.length();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String dateString \u003d activityList.getActivity(index).getActivityDate().toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int lengthOfDateString \u003d dateString.length();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String typeString;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int lengthOfType;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int lengthLeftForWhiteSpaceDate \u003d START_INDEX_FOR_ACTIVITY_DATE - lengthOfIndex;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int lengthLeftForWhiteSpaceType;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int lengthLeftForWhiteSpace;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (activityList.getActivity(index) instanceof Food) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            typeString \u003d FOOD_TYPE;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            lengthOfType \u003d FOOD_TYPE.length();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            lengthLeftForWhiteSpaceType \u003d START_INDEX_FOR_FOOD_TYPE - lengthOfIndex - lengthLeftForWhiteSpaceDate;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            typeString \u003d EXERCISE_TYPE;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            lengthOfType \u003d EXERCISE_TYPE.length();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            lengthLeftForWhiteSpaceType \u003d START_INDEX_FOR_EXERCISE_TYPE - lengthOfIndex - lengthLeftForWhiteSpaceDate;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int lengthLeftForWhiteSpaceDescription \u003d START_INDEX_FOR_DESCRIPTION - lengthOfIndex"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                - lengthLeftForWhiteSpaceType - lengthOfType - lengthLeftForWhiteSpaceDate - lengthOfDateString;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (lengthOfDescription \u003e MAX_STRING_FOR_DESCRIPTION) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            lengthLeftForWhiteSpace \u003d START_INDEX_FOR_CALORIES - lengthOfIndex - lengthOfType"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    - lengthLeftForWhiteSpaceType - lengthLeftForWhiteSpaceDescription - lengthLeftForWhiteSpaceDate"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    - MAX_STRING_FOR_DESCRIPTION;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            lengthLeftForWhiteSpace \u003d START_INDEX_FOR_CALORIES - lengthOfIndex - lengthOfType"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    - lengthLeftForWhiteSpaceType  - lengthLeftForWhiteSpaceDescription - lengthLeftForWhiteSpaceDate"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    - lengthOfDescription;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        //Extract the rest of the string if the description length exceeds the maximum length"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        while (lengthOfDescription \u003e MAX_STRING_FOR_DESCRIPTION) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            String description \u003d descriptionString.substring(0, MAX_STRING_FOR_DESCRIPTION);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            descriptions.add(description);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            System.out.println(Arrays.toString(descriptions.toArray()));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            descriptionString \u003d descriptionString.substring(MAX_STRING_FOR_DESCRIPTION);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            lengthOfDescription \u003d descriptionString.length();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        descriptions.add(descriptionString);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (descriptions.size() \u003e 1) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            for (int i \u003d 1; i \u003c descriptions.size(); i++) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                restOfDescription \u003d restOfDescription"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                        + increaseStringLength(\" \", START_INDEX_FOR_DESCRIPTION)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                        + descriptions.get(i) + NEWLINE;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String calorieString \u003d Integer.toString(activityList.getActivity(index).getActivityCalories());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return indexString"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + increaseStringLength(\" \", lengthLeftForWhiteSpaceDate) + dateString"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + increaseStringLength(\" \", lengthLeftForWhiteSpaceType) + typeString"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + increaseStringLength(\" \", lengthLeftForWhiteSpaceDescription) + descriptions.get(0)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + increaseStringLength(\"_\", lengthLeftForWhiteSpace) + calorieString"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + NEWLINE"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + restOfDescription;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Generates the header for the list."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return string of header"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected String listHeaderString() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String header \u003d NUMBERS"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + INDENT + DATE"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + increaseStringLength(INDENT, 2) + ACTIVITY_TYPE"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + increaseStringLength(INDENT, 4) + DESCRIPTION"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + increaseStringLength(INDENT,3) + CALORIES_GAIN_OR_LOST;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return header;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 147
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/Food.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "//@@author e0425705"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Sub-class of Activity."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Food extends Activity {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Constructor of class Food."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description food description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param calories calories consumed"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Food(String description, int calories, LocalDate date, boolean isFromFile) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(description, calories, date, isFromFile);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Gets food string."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return food string"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String getString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"[F] | \" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 3,
      "e0425705": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/GraphDrawing.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "//@@author 1-Karthigeyan-1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Displays the graph of the net calorie gain/loss throughout the period."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class GraphDrawing {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public GraphProperty graphProperty;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String BLANK_WIDTH \u003d \"   \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String TARGET_WIDTH \u003d \"***\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String BAR_WIDTH \u003d \"| |\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String targetBarWidth \u003d \"|*|\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String TOP_BAR_WIDTH \u003d \"|-|\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String VERTICAL_LINE \u003d \"|\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private String targetCaloriesString;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private String maxCaloriesString;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private String minCaloriesString;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param graphProperty properties of graph"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public GraphDrawing(GraphProperty graphProperty) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.graphProperty \u003d graphProperty;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        setCalorieString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private void setCalorieString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.targetCaloriesString \u003d Integer.toString(graphProperty.targetCalories);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.maxCaloriesString \u003d Integer.toString(graphProperty.maxCalories);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.minCaloriesString \u003d Integer.toString(graphProperty.minCalories);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Repeats character back to back."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param character character"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param size number of times to repeat"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return concatenated string"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String repeatCharacter(String character, int size) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assert size \u003e\u003d 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String characterText \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            characterText +\u003d character;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return characterText;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Generates the x_axis."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return x_axis String"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String generate_x_axis(int maxCalorieSize, int column) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String horizontalLine \u003d \"|-+\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        for (int i \u003d 0; i \u003c column - 1; i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            horizontalLine +\u003d repeatCharacter(\"-\", 5) + \"+\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        horizontalLine \u003d repeatCharacter(SPACE, maxCalorieSize) + horizontalLine + \"--\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return horizontalLine;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Generates date labels for the x-axis."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param maxCalorieSize Character length of maxCalorieSize"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return date labels"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String generateDateLabels(int maxCalorieSize,  ArrayList\u003cLocalDate\u003e keys) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"Generating date labels for graph.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assert keys !\u003d null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assert maxCalorieSize \u003e\u003d 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return repeatCharacter(SPACE, maxCalorieSize - 1) + SPACE + graphProperty.parseDate(keys);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Generate vertical axis label."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param columnNumber column number"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param maxColumn maximum column"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param maxSize maximum size of labels in vertical axis"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return vertical axis label"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private String generateVerticalAxisLabel(int columnNumber, int maxColumn, int maxSize) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"Generating vertical axis for graph.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String label \u003d \"\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (columnNumber \u003d\u003d maxColumn - 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            label \u003d this.maxCaloriesString + repeatCharacter(SPACE, maxSize - this.maxCaloriesString.length());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } else if (columnNumber \u003d\u003d graphProperty.targetRow) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            label \u003d this.targetCaloriesString"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    + repeatCharacter(SPACE, maxSize - this.targetCaloriesString.length());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } else if (columnNumber \u003d\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            label \u003d this.minCaloriesString"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    + repeatCharacter(SPACE, maxSize - this.minCaloriesString.length());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            label \u003d repeatCharacter(SPACE, maxSize);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"Vertical axis generation complete.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return label;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Calculate difference in string size."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param firstString first string"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param secondString second string"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return string length differemnce"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int calculateMaxSize(String firstString, String secondString) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (firstString.length() \u003e secondString.length()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return firstString.length();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return secondString.length();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Adds width based on the row type."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param number row number"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return width"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String addWidth(int number) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String width \u003d \"\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (number \u003d\u003d graphProperty.targetRow) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            width +\u003d TARGET_WIDTH;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            width +\u003d BLANK_WIDTH;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return width;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Draws the graph."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return drawing"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String drawGraph() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        int[][] table \u003d graphProperty.table;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        ArrayList\u003cLocalDate\u003e keys \u003d graphProperty.keys;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assert table !\u003d null;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assert keys !\u003d null;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        int maxSize \u003d calculateMaxSize(maxCaloriesString, minCaloriesString);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String drawing \u003d \"\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        for (int i \u003d GraphProperty.COLUMN - 1; i \u003e\u003d 0; i--) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            drawing +\u003d generateVerticalAxisLabel(i, GraphProperty.COLUMN, maxSize) + VERTICAL_LINE;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            for (int j \u003d 0; j \u003c graphProperty.row; j++) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                drawing +\u003d generateHorizontalLine(table, i, j);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            drawing +\u003d \"\\n\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        drawing +\u003d generate_x_axis(maxSize, graphProperty.row);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        drawing +\u003d generateDateLabels(maxSize, keys);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"Graph drawn successfully\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return drawing;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Generates horizontal line."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param table table for graph"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param column current column number"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param row current rpw number"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return horizontl line"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private String generateHorizontalLine(int[][] table, int column, int row) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String drawing \u003d \"\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        switch (table[column][row]) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            drawing +\u003d BLANK_WIDTH;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            drawing +\u003d BAR_WIDTH;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            drawing +\u003d TARGET_WIDTH;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            drawing +\u003d targetBarWidth;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            drawing +\u003d TOP_BAR_WIDTH;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //does nothing"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        drawing +\u003d addWidth(column);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return drawing;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 1,
      "1-Karthigeyan-1": 204
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/GraphProperty.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.GraphCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "//@@author 1-Karthigeyan-1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Properties of graph."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class GraphProperty {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final int COLUMN \u003d 11;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static String DATE_FORMAT \u003d \"dd/MM\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static int TARGET_TYPE \u003d 2;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static int LIMIT_TYPE \u003d 4;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static int DIVISOR \u003d 10;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static int EMPTY \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int targetRow;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int row;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public final DayMap dayMap;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    ArrayList\u003cLocalDate\u003e keys;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int targetCalories;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int maxCalories;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int minCalories;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int[][] table;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Constructor for the graph."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param dayMap hashmap containing dates"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param targetCalories tagret calories from userprofile"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public GraphProperty(DayMap dayMap, int targetCalories) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assert dayMap !\u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.dayMap \u003d dayMap;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.targetCalories \u003d targetCalories;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Maximum days in graph is 7 or lower."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return number of days to be shown in graph"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private int checkSize() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        int size \u003d dayMap.getHashMap().size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assert size !\u003d 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"Checking number of days for graph.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (size \u003c GraphCommand.MAXIMUM_DAYS) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return size;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return GraphCommand.MAXIMUM_DAYS;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Set other properties by calculation."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void setProperties() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.row \u003d checkSize();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.keys \u003d sortKeys();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        ArrayList\u003cInteger\u003e calories \u003d getCalories();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.table \u003d initiateTable(calories);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"Properties has been set.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Initiates a 2 dimension table and fills the table with 0."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int[][] setEmptyTable(int[][] table) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        for (int[] row : table) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Arrays.fill(row, EMPTY);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"Empty table set!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return table;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Get and sort keys from hashmap."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return sorted keys in arraylist"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public ArrayList\u003cLocalDate\u003e sortKeys() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        ArrayList\u003cLocalDate\u003e keys \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        for (LocalDate key : dayMap.getHashMap().keySet()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            keys.add(key);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        //sort the keys by date"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        keys.sort(LocalDate::compareTo);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        ArrayList\u003cLocalDate\u003e newKeys \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        for (int i \u003d keys.size() - row; i \u003c keys.size(); i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            newKeys.add(keys.get(i));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"Keys sorted successfully.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return newKeys;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Get calories from the dates."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return array of calories"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public ArrayList\u003cInteger\u003e getCalories() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        int currentCalories;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        int minCalories \u003d targetCalories;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        int maxCalories \u003d targetCalories;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        ArrayList\u003cInteger\u003e calories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        for (LocalDate date : keys) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            currentCalories \u003d dayMap.getNetCalorieOfDay(date);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            calories.add(currentCalories);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            maxCalories \u003d findMaximum(maxCalories, currentCalories);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            minCalories \u003d findMinimum(minCalories, currentCalories);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        checkBoundaries(minCalories, maxCalories);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return calories;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void checkBoundaries(int minCalories, int maxCalories) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assert maxCalories !\u003d 0;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (maxCalories - minCalories \u003c DIVISOR) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            minCalories -\u003d DIVISOR / 2;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            maxCalories +\u003d DIVISOR / 2;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.minCalories \u003d minCalories;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.maxCalories \u003d maxCalories;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"Graph boundaries set!.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Compares and finds the minimum between 2 numbers."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param firstNumber first number to compare"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param secondNumber second number to compare"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return the lesser number"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int findMinimum(int firstNumber, int secondNumber) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (firstNumber \u003c secondNumber) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return firstNumber;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return secondNumber;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Compares and finds the maximum between 2 numbers."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param firstNumber first number to compare"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param secondNumber second number to compare"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return the greater number"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int findMaximum(int firstNumber, int secondNumber) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (firstNumber \u003c secondNumber) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return secondNumber;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return firstNumber;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Calculates interval of the graph."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return interval value"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int calculateInterval() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assert maxCalories - minCalories !\u003d 0;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return (maxCalories - minCalories) / DIVISOR;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Fills up the table with appropriate values."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * 0 -\u003e empty spaces."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * 1 -\u003e middle portion of the bar."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * 2 -\u003e target row."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * 3 -\u003e target row  + middle portion of the bar."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * 4 -\u003e top symbol of the bar."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param table representation of graph in 2d array."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param calories calories list"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void fillTable(int[][] table, ArrayList\u003cInteger\u003e calories) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assert table !\u003d null;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assert calories !\u003d null;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.targetRow \u003d calculateRowNumber(targetCalories);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        int limitNumber;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        for (int i \u003d 0; i \u003c\u003d COLUMN - 1; i++) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            for (int j \u003d 0; j \u003c row; j++) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                limitNumber \u003d calculateRowNumber(calories.get(j));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                setTable(table, limitNumber, i, j);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        logging.writeToLogInfo(\"2D Array table filled.\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * sets graph in table format."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param table table"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param limitNumber top limit for the calories"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param column current column number"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param row cuttent row number"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private void setTable(int[][] table, int limitNumber, int column, int row) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (limitNumber \u003d\u003d column) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            table[column][row] \u003d LIMIT_TYPE;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } else if (targetRow \u003d\u003d column) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            table[column][row] \u003d TARGET_TYPE;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (limitNumber \u003e column) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            table[column][row]++;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Parses the date into string."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return date in dd/MM format"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String parseDate(ArrayList\u003cLocalDate\u003e keys) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assert keys !\u003d null;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String formattedDate \u003d \"\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        for (LocalDate key : keys) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            formattedDate +\u003d key.format(DateTimeFormatter.ofPattern(DATE_FORMAT));"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            formattedDate +\u003d \" \";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return formattedDate;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Initiates a table."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return table"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int[][] initiateTable(ArrayList\u003cInteger\u003e calories) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assert calories !\u003d null;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        int [][]table \u003d new int[COLUMN][row];"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        setEmptyTable(table);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        fillTable(table, calories);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return table;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Find the row number corresponding to the calories."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int calculateRowNumber(int calories) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assert calories \u003e\u003d minCalories;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        int interval \u003d calculateInterval();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assert interval !\u003d 0;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return (calories - minCalories) / interval;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 1,
      "1-Karthigeyan-1": 256
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/ListDrawer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.ActivityList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Food;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//@@ chewyang"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * This class is used to create a responsive interface for the listing feature after a list command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class ListDrawer {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected ActivityList activityList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final String INDENT \u003d \"        \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final String DIVIDER \u003d \"-\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final String DELIMITER \u003d \",\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final String DESCRIPTION \u003d \"Description\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final String DATE \u003d \"Date\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final String NUMBERS \u003d \"No.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final String NEWLINE \u003d \"\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final String ACTIVITY_TYPE \u003d \"Type\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final String FOOD_TYPE \u003d \"Food\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final String EXERCISE_TYPE \u003d \"Exercise\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final String CALORIES_GAIN_OR_LOST \u003d \"Calories gain or lost\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final int START_INDEX_FOR_DESCRIPTION \u003d 14 + INDENT.length() + ACTIVITY_TYPE.length();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final int START_INDEX_FOR_CALORIES \u003d 72 + INDENT.length() + ACTIVITY_TYPE.length();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final int MAX_STRING_FOR_DESCRIPTION \u003d 36 + DESCRIPTION.length();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final int START_INDEX_FOR_EXERCISE_TYPE \u003d 9;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static final int START_INDEX_FOR_FOOD_TYPE \u003d 11;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Sets the date and activity list to be printed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param date date which activity list to be used"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param activityList is the list to be used when creating the list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public ListDrawer(LocalDate date, ActivityList activityList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.date \u003d date.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.activityList \u003d activityList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Constructor for the listDrawer class."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param lastSeenList list to be drawn."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public ListDrawer(ActivityList lastSeenList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.activityList \u003d lastSeenList;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Prints the list of activities."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        System.out.print(headerBox()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + listHeaderString()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + NEWLINE"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + increaseStringLength(DIVIDER, listHeaderString().length())"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + NEWLINE"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + allActivityString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Multiplies the length of a string by a given length."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param stringToIncrease string to multiply in length"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param length length to increase by"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return a string of the increased length"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected String increaseStringLength(String stringToIncrease, int length) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return String.join(\"\", Collections.nCopies(length, stringToIncrease));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Generates the header for the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return string of header"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected String listHeaderString() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String header \u003d NUMBERS"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + increaseStringLength(INDENT, 1) + ACTIVITY_TYPE"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + increaseStringLength(INDENT, 3) + DESCRIPTION"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + increaseStringLength(INDENT,3) + CALORIES_GAIN_OR_LOST;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return header;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Generates the header as a box with the net calorie and date information."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return string for the header box"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected String headerBox() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String headerString \u003d \"|  \" + date + \"  \" + netCalorieString();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String dividerString \u003d increaseStringLength(DIVIDER, headerString.length());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return dividerString + NEWLINE + headerString + NEWLINE + dividerString + NEWLINE;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected String netCalorieString() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return \"|  \" + \"Net Calorie: \" + activityList.getNetCalorie() + \" kcal  |\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Generates the string for a single activity."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param index index of the activity"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return string of single activity"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected String singleActivityString(int index) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        ArrayList\u003cString\u003e descriptions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String restOfDescription \u003d \"\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String indexString \u003d Integer.toString(index + 1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int lengthOfIndex \u003d indexString.length();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String descriptionString \u003d activityList.getActivity(index).getActivityDescription();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int lengthOfDescription \u003d descriptionString.length();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String typeString;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int lengthOfType;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int lengthLeftForWhiteSpaceType;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int lengthLeftForWhiteSpaceDescription;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int lengthLeftForWhiteSpace;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (activityList.getActivity(index) instanceof Food) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            typeString \u003d FOOD_TYPE;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            lengthOfType \u003d FOOD_TYPE.length();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            lengthLeftForWhiteSpaceType \u003d START_INDEX_FOR_FOOD_TYPE - lengthOfIndex;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            typeString \u003d EXERCISE_TYPE;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            lengthOfType \u003d EXERCISE_TYPE.length();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            lengthLeftForWhiteSpaceType \u003d START_INDEX_FOR_EXERCISE_TYPE - lengthOfIndex;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        lengthLeftForWhiteSpaceDescription \u003d START_INDEX_FOR_DESCRIPTION"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                - lengthOfIndex - lengthLeftForWhiteSpaceType - lengthOfType;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (lengthOfDescription \u003e MAX_STRING_FOR_DESCRIPTION) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            lengthLeftForWhiteSpace \u003d START_INDEX_FOR_CALORIES - lengthOfIndex - lengthOfType"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    - lengthLeftForWhiteSpaceType - lengthLeftForWhiteSpaceDescription - MAX_STRING_FOR_DESCRIPTION;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            lengthLeftForWhiteSpace \u003d START_INDEX_FOR_CALORIES - lengthOfIndex - lengthOfType"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    - lengthLeftForWhiteSpaceType  - lengthLeftForWhiteSpaceDescription - lengthOfDescription;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        //if the length of the description exceeds the maximum length, extract the rest of the description"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        while (lengthOfDescription \u003e MAX_STRING_FOR_DESCRIPTION) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            String description \u003d descriptionString.substring(0, MAX_STRING_FOR_DESCRIPTION);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            descriptions.add(description);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            descriptionString \u003d descriptionString.substring(MAX_STRING_FOR_DESCRIPTION);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            lengthOfDescription \u003d descriptionString.length();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        descriptions.add(descriptionString);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (descriptions.size() \u003e 1) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            for (int i \u003d 1; i \u003c descriptions.size(); i++) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                restOfDescription \u003d restOfDescription"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                        + increaseStringLength(\" \", START_INDEX_FOR_DESCRIPTION)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                        + descriptions.get(i)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                        + NEWLINE;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String calorieString \u003d Integer.toString(activityList.getActivity(index).getActivityCalories());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return indexString"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + increaseStringLength(\" \", lengthLeftForWhiteSpaceType) + typeString"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + increaseStringLength(\" \", lengthLeftForWhiteSpaceDescription) + descriptions.get(0)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + increaseStringLength(\"_\", lengthLeftForWhiteSpace) + calorieString"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + NEWLINE"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + restOfDescription;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Generates the content for the list."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @return string of the content"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected String allActivityString() {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String allActivityString \u003d \"\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        for (int i \u003d 0; i \u003c activityList.getNumberOfActivities(); i++) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            allActivityString \u003d allActivityString + singleActivityString(i) + NEWLINE;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return allActivityString;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 196,
      "e0425705": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Logging.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayIoExceptionMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displaySecurityExceptionMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author chewyang-reused"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "//Reused from https://stackoverflow.com/questions/15758685/how-to-write-logs-in-text-file-when-using-java-util-logging"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "// -logger#:~:text\u003dTo%20send%20logs%20to%20a,will%20enable%20file%20logging%20globally. with some modifications"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * Logger class to store logs into a file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Logging extends Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    Logger logger \u003d Logger.getLogger(\"MyLog\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    FileHandler fh;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructor for the logging class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath path of file to be stored into"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public Logging(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        super(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks if the file to input the loggers is present and sets up the logging mechanism."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUpLogger() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            //Ensures that the files with the proper directories are created."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            createFileHierarchy();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            // This block configure the logger with handler and formatter."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            fh \u003d new FileHandler(this.filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.addHandler(fh);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            SimpleFormatter formatter \u003d new SimpleFormatter();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            fh.setFormatter(formatter);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (SecurityException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            displaySecurityExceptionMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            displayIoExceptionMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Writes a log of INFO level."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param logMessage is the message to be logged"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void writeToLogInfo(String logMessage) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logger.info(logMessage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Writes a log of SEVERE level."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param logMessage is the message to be logged"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public void writeToLogSevere(String logMessage) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logger.severe(logMessage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Writes a log of WARNING level."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param logMessage is the message to be logged"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public void writeToLogWarning(String logMessage) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logger.warning(logMessage);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 11,
      "-": 69
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.ActivityList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.DayMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Exercise;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Food;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.Ui.displayNotSavedMessage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//@@author chewyang"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * Storage class to decode and encode the .csv file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    File dataFile;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static final String LOAD_DATA_SUCCESS_MESSAGE \u003d \"Data successfully loaded into application\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static final String LOAD_DATA_FAILURE_MESSAGE \u003d \"Unable to load data from the file, the CSV file might \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            + \"be corrupted\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static final String BOTH_PARENT_AND_DATA_EXIST_MESSAGE \u003d \"Parent folder /tpdata and data file \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            + \"/tpdata/tpcsv already exists, \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            + \"proceeding to use this folder.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static final String ONLY_PARENT_FOLDER_EXISTS_MESSAGE \u003d \"Parent folder /tpdata exists but data file \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            + \"/tpdata/tpcsv has not been \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            + \"created yet, proceeding to create this file\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static final String PARENT_FOLDER_NOT_EXIST_MESSAGE \u003d \"Parent folder /tpdata does not exist, \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            + \"proceeding to create both the\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            + \" parent folder /tpdata and data file /tpdata/tpcsv\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Constructor for the storage class."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param filePath path of file to be stored into"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Creates the file hierarchy if not present."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @throws IOException if there is an issue"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected void createFileHierarchy() throws IOException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (dataFile.getParentFile().exists()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            if (dataFile.exists()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                logging.writeToLogInfo(BOTH_PARENT_AND_DATA_EXIST_MESSAGE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                dataFile.createNewFile();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                logging.writeToLogInfo(ONLY_PARENT_FOLDER_EXISTS_MESSAGE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            dataFile.getParentFile().mkdir();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            dataFile.createNewFile();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            logging.writeToLogInfo(PARENT_FOLDER_NOT_EXIST_MESSAGE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Appends to the file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param textToAdd string to append the file with"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private void appendToFile(String textToAdd) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(bw);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            pw.println(textToAdd);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            pw.flush();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            //System.out.println(\"record saved\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            //displaySavedMessage();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            //System.out.println(\"record not saved\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            displayNotSavedMessage();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Overwrites the file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param textToAdd string to override the file with"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private void writeToFile(String textToAdd) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        FileWriter fw \u003d null;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            fw.write(textToAdd);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            System.out.println(\"Unable to write to file!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Updates the file."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param dayMap dayMap to update the file with"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void updateFile(DayMap dayMap) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        HashMap\u003cLocalDate, ActivityList\u003e dayHashMap;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dayHashMap \u003d dayMap.getHashMap();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Iterator it \u003d dayHashMap.entrySet().iterator();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        writeToFile(\"\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        while (it.hasNext()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            Map.Entry pair \u003d (Map.Entry) it.next();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            String activities \u003d pair.getValue().toString();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            appendToFile(pair.getKey().toString() + \", \" + activities);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        //displaySaveMessage();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //@@author chewyang"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    //@@author poonchuanan"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Loads saved CSV data into the list when the program starts."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param calList used to store the current activities"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void loadData(DayMap calList) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            createFileHierarchy();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            //Read from CSV- reads the file line by line and stores the lines in an array list"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String line \u003d null;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                lines.add(line);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            //Read line by line"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            for (int i \u003d 0; i \u003c lines.size(); i++) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                processData(calList, lines.get(i));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            logging.writeToLogInfo(LOAD_DATA_SUCCESS_MESSAGE);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            System.out.println(LOAD_DATA_FAILURE_MESSAGE);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            logging.writeToLogWarning(LOAD_DATA_FAILURE_MESSAGE);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Splits the current line of CSV data into date and activity, then processes the activity."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param calList used to store the current activities"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param data line of CSV data"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private void processData(DayMap calList, String data) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String dateString \u003d data.substring(0, data.indexOf(\u0027,\u0027));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        //If the date is the same as today, append it to our list for the day"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        //if (date.compareTo(LocalDate.now()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String activities \u003d data.substring(data.indexOf(\",\") + 1);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String firstActivityString \u003d null;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        while (activities.contains(\",\")) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            firstActivityString \u003d activities.substring(0, activities.indexOf(\u0027,\u0027));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            processActivity(calList, firstActivityString, date.atStartOfDay());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            activities \u003d activities.substring(activities.indexOf(\",\") + 1);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        processActivity(calList, activities, date.atStartOfDay());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Splits the activity data into food or exercise, then adds the activity to calList."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param calList used to store the current activities"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param activity activity data in to format of type, description and calories"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param date date the activity was conducted"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private void processActivity(DayMap calList, String activity, LocalDateTime date) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        char typeOfActivity \u003d activity.charAt(2);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String description \u003d activity.substring(activity.indexOf(\"|\") + 1);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        description \u003d description.substring(0, description.indexOf(\"|\")).trim();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        int calorieStartIndex \u003d activity.lastIndexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String calorieString \u003d activity.substring(calorieStartIndex).trim();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        int calories \u003d Integer.parseInt(calorieString);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        switch (typeOfActivity) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        case \u0027F\u0027:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Food food \u003d new Food(description, calories,date.toLocalDate(), true);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            calList.addActivity(date, food);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Exercise exercise \u003d new Exercise(description, calories, date.toLocalDate(), true);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            calList.addActivity(date, exercise);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            System.out.println(\"Corrupted data. Activity should be either exercise or food\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            logging.writeToLogWarning(LOAD_DATA_FAILURE_MESSAGE);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 127,
      "poonchuanan": 84
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/UserInfoStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.Trakcal;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.Trakcal.jarFilePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//@@author jlifah"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": " * Updates the text file with user info."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class UserInfoStorage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static final String FILE_PATH \u003d jarFilePath + \"/tpdata/tp.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Create text file is present, if not create a new run."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static ArrayList\u003cString\u003e update() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (Files.exists(Path.of(jarFilePath))) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                while (s.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    String dataString \u003d s.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    data.add(dataString);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                s.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return data;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                createDataFile();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                System.out.println(\"IO Exception found\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Creates a new text file for user profile."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void createDataFile() throws IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        File file \u003d new File(jarFilePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        boolean isDirCreated \u003d file.mkdir();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (isDirCreated) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            file \u003d new File(jarFilePath + \"/tp.txt\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Writes user profile to text profile."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void save(String test) throws IOException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String[] parts \u003d test.split(\",\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Files.write(Path.of(FILE_PATH), Arrays.asList(parts));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//@@author jlifah"
      }
    ],
    "authorContributionMap": {
      "jlifah": 72,
      "chewyang": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/UserSetStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.OutputStreamWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.Trakcal.jarFilePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayMissingAddSetInfoMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidCalorieMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidCreateSetCommandMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayIncompleteSetMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayCalorieMustBeIntegerMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayMissingFileNameMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.exception.FileAlreadyExistException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.exception.InvalidCalorieException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.exception.InvalidCreateSetCommandException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.exception.NoFileNameException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayExistingShortcutMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayIoExceptionMessage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": " * Updates the text file with short cut info."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class UserSetStorage {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer MAX_CALORIES \u003d 3000;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer MIN_CALORIES \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String WHITE_SPACE \u003d \" \";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String FOOD_TAG \u003d \"f/\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String CALORIE_TAG \u003d \"c/\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String EXERCISE_TAG \u003d \"e/\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String SLASH \u003d \"/\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Checks if tags and file are given by user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param userInput command given by user to createSet"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void prepareNewSet(String userInput) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkFileNameNotPresent(userInput);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkActivityAndCalorieTag(userInput);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            String fileName \u003d userInput.substring(0, userInput.indexOf(SLASH) - 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            createNewTextFile(SLASH + fileName + \".txt\", userInput.substring(userInput.indexOf(SLASH) - 1));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (NoFileNameException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayMissingFileNameMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (InvalidCreateSetCommandException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidCreateSetCommandMessage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayIncompleteSetMessage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Creates a new text file with shortcut surname."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param fileName shortcut name"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param toTrim contents to be added into shortcut"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void createNewTextFile(String fileName, String toTrim) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String filePath \u003d jarFilePath + \"/tpdata\" + fileName;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            logging.writeToLogInfo(\"Attempting to create shortcut file.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkExistingFile(filePath);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            logging.writeToLogInfo(\"Shortcut file successfully created.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayIoExceptionMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (FileAlreadyExistException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayExistingShortcutMessage();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        updateTextFile(filePath, toTrim);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Deletes an corrupted text file."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param filePath name of shortcut to be deleted"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void deleteInvalidSetFile(String filePath) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        logging.writeToLogInfo(\"Attempting to deleted corrupted shortcut file.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        file.delete();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        logging.writeToLogInfo(\"Corrupted shortcut file deleted successfully.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Writes shortcut content to text file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param path shortcut name"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param toTrim contents to be added into shortcut"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void updateTextFile(String path, String toTrim) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            FileOutputStream fos \u003d new FileOutputStream(path);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(new OutputStreamWriter(fos));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            String[] activity \u003d toTrim.split(\"\\\\+\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            for (String s : activity) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                logging.writeToLogInfo(\"Check if entry is of valid format.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                s \u003d removeWhiteSpaces(s);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                bw.write(s);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                String calories \u003d s.substring(s.indexOf(CALORIE_TAG) + 2);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                calories \u003d removeWhiteSpaces(calories);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                String description \u003d s.substring(2,s.indexOf(CALORIE_TAG) - 1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                description \u003d removeWhiteSpaces(description);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                checkEmptyDescription(description);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                checkEmptyDescription(calories);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                checkCalorieType(calories);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                checkValidCalorieRange(calories);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                Integer.parseInt(calories);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                logging.writeToLogInfo(\"Entry is of valid format.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    Ui.drawDivider();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    System.out.println(\"You have created a shortcut containing:\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                if (s.indexOf(FOOD_TAG) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    System.out.println(index + \". \" + \"Food: \" + description"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                            + \", Calories: \" + calories);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                } else if (s.indexOf(EXERCISE_TAG) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    System.out.println(index + \". \" + \"Exercise: \" + description"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                            + \", Calories: \" + calories);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                bw.newLine();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            Ui.drawDivider();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayIncompleteSetMessage();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            deleteInvalidSetFile(path);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }  catch (InvalidCalorieException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidCalorieMessage();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayIncompleteSetMessage();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            deleteInvalidSetFile(path);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayMissingAddSetInfoMessage();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayIncompleteSetMessage();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            deleteInvalidSetFile(path);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayCalorieMustBeIntegerMessage();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayIncompleteSetMessage();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            deleteInvalidSetFile(path);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Checks whether a description given by user is empty or null."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param description user input"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void checkEmptyDescription(String description) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (description.isBlank() || description.isEmpty()) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Check that an existing shortcut exists."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param fileName short cut name"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void checkExistingFile(String fileName) throws FileAlreadyExistException {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        File file \u003d new File(fileName);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            throw new FileAlreadyExistException();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Check that there are activity and calorie has tag."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void checkActivityAndCalorieTag(String input) throws InvalidCreateSetCommandException {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (!input.contains(CALORIE_TAG) || !(input.contains(FOOD_TAG) | input.contains(EXERCISE_TAG))) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            throw new InvalidCreateSetCommandException();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Check that calorie is within 0 and 3000 kcal."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void checkValidCalorieRange(String input) throws InvalidCalorieException {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        int calories \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (calories \u003c MIN_CALORIES || calories \u003e MAX_CALORIES) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            throw new InvalidCalorieException();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Check that calorie is of integer type."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void checkCalorieType(String input) throws NumberFormatException {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Integer.parseInt(input);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Check if user gave short cut name."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void checkFileNameNotPresent(String input) throws NoFileNameException {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (input.indexOf(FOOD_TAG) \u003d\u003d 0 || input.indexOf(EXERCISE_TAG) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            throw new NoFileNameException();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Removes all white spaces at front and back of input."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return input of edited param without white spaces"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static String removeWhiteSpaces(String input) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        while (input.startsWith(WHITE_SPACE)) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            input \u003d input.substring(1);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        while (input.endsWith(WHITE_SPACE)) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            input \u003d input.substring(0, input.length() - 1);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 245,
      "chewyang": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/ExceptionMessages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.Ui.DIVIDER;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static seedu.duke.ui.Ui.PROMPT_USER_OF_HELP_MESSAGE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.Ui.drawDivider;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Deals with error/exception messages."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class ExceptionMessages {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints error message when StringIndexOutOfBoundsException occurs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayStringIndexOutOfBoundsExceptionMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"The index entered is not within the range!\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + PROMPT_USER_OF_HELP_MESSAGE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints error message when IOException occurs."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayIoExceptionMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"IO Exception has occurred!\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + PROMPT_USER_OF_HELP_MESSAGE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Prints error message when the user does not have logging permission."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static void displaySecurityExceptionMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        print(\"Sorry! It appears you do not have logging permissions!\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + PROMPT_USER_OF_HELP_MESSAGE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints error message when NumberFormatException occurs in delete command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static void displayIndexNotNumberExceptionMessage() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"Index is not a number!\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + PROMPT_USER_OF_HELP_MESSAGE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static void sameIndexForMoveCommandExceptionMessage() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        print(\"The indexes entered for this move command does not result in any change!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints error message when NullPointerException occurs in delete command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayDeleteCommandNullPointerExceptionMessage() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        print(\"There is no index to remove!\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + PROMPT_USER_OF_HELP_MESSAGE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Prints error message when attempting to access an empty list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static void displayListNotFoundExceptionMessage() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"The list to work on is empty!\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Try entering a list command first.\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + PROMPT_USER_OF_HELP_MESSAGE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints error message when error occurs in add command."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayAddCommandErrorMessage() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"Invalid input given!\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"The input format for adding food activity is:\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tadd f/ FOOD_DESCRIPTION c/ CALORIE_COUNT d/ DATE\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t- where food description is FOOD_DESCRIPTION, calories consumed is CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tand date(YYYY-MM-DD) is DATE\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"The input format for adding exercise activity is:\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tadd e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT d/ DATE\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t- where exercise description is EXERCISE_DESCRIPTION, calories lost is CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tand date(YYYY-MM-DD) is DATE\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Do note that DATE is optional!\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"If you do not input it, the activity would be added to today\u0027s list!\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"If this is still too confusing for you, please input \u0027help\u0027 for more information.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out error message when input of user is not understood."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static String displayInvalidInputErrorMessage() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String invalidMessage \u003d \"Sorry I do not understand the input given!\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + PROMPT_USER_OF_HELP_MESSAGE;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return invalidMessage;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints error message when error occurs in find command."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayFindErrorMessage() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"I do not understand what you mean!\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"The input format for finding food or exercise activity\\n\\tvia keyword is \u0027find d/ DESCRIPTION\u0027\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \" - where keyword is DESCRIPTION\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"The input format for finding calorie count via keyword is \u0027find c/ CALORIE_COUNT\u0027\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t- where calories count is CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"The input format for finding (all) is \u0027find a/ KEYWORD1 / KEYWORD2...\u0027\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t- where KEYWORDS are all the words that matches the search result\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"The input format for finding (either) is \u0027find e/ KEYWORD1 / KEYWORD2...\u0027\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t- where just one KEYWORD has to match the search result\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + PROMPT_USER_OF_HELP_MESSAGE);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out error message when date and time format entered is wrong."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayIncorrectDateTimeFormatEnteredMessage() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"Wrong format of date entered!\\n\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"The accepted format is YYYY-MM-DD!\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Also, ensure that the date input actually exists!\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + PROMPT_USER_OF_HELP_MESSAGE);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out error message when invalid input for add activity given."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayAddActivityExceptionMessage() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"Sorry I do not understand what you mean!\\n\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"One of the following has been violated:\\n\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t1. Description and calorie count input cannot be empty\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t2. Calorie count input must be an integer \u003e 0!\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t3. Wrong input format\\n\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t\\tInput format is:\\n\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t\\tadd f/ FOOD_DESCRIPTION c/ CALORIES d/ YYYY-MM-DD\\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t\\tadd e/ EXERCISE_DESCRIPTION c/ CALORIES d/ YYYY-MM-DD\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + PROMPT_USER_OF_HELP_MESSAGE);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out error message when invalid input for add activity given."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayEditActivityExceptionMessage() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"Sorry I do not understand what you mean!\\n\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"One of the following has been violated:\\n\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t1. Description and calorie count input cannot be empty\\n\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t2. Calorie count input must be an integer \u003e 0!\\n\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t3. Wrong input format\\n\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t\\tInput format is:\\n\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t\\tedita INDEX f/ FOOD_DESCRIPTION c/ CALORIES\\n\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t\\tedita INDEX e/ EXERCISE_DESCRIPTION c/ CALORIES\\n\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + PROMPT_USER_OF_HELP_MESSAGE);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out error message when DateTimeException occurs."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayDateTimeExceptionMessage() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"Sorry, I do not understand!\\n\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"The input format of date is YYYY-MM-DD!\\n\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //@@author jlifah"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints out error message when invalid gender input."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayInvalidGenderMessage() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"Sorry this is an invalid gender format!\\nPlease input gender as female or male only!\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints out error message when invalid weight goal input."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayInvalidWeightGoalMessage() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"Please input lose/maintain/gain as weight goal only!\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints out error message when invalid weight input."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayInvalidWeightMessage() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"Please enter a valid weight format!\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints out error message when invalid height input."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayInvalidHeightMessage() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"Please enter a valid height format!\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints out error message when invalid age input."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayInvalidAgeMessage() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"Please enter a valid age format!\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints out error message when invalid activity level input."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayInvalidActivityLevelMessage() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"Sorry this is an invalid activity factor!\\n\""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                + \"Please enter an integer from 1 to 5, with 1 being the least active and 5 being the most active\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //@@author jlifah"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out error message when IndexOutOfBoundsException occurs in edit command."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayEditIndexOutOfBoundsExceptionMessage() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"Index entered is not within the range!\\n\""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Please pull out the list for the day before editing on it!\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //@@author jlifah"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints out error message when a shortcut has not been created in addSet command."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayShortcutDoesNotExistMessage() {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"This shortcut does not exists!\\n\""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                + \"Please create a shortcut before adding it!\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints out error message when weight range is not between 20 to 650kg."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayInvalidWeightRangeMessage() {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"Please enter a weight range from 30kg to 650kg\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints out error message when age is not between 0 to 120 years old."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayInvalidAgeRangeMessage() {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"Please enter an age range from 10 to 120 years old\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints out error message when height is not between 10 to 300cm."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayInvalidHeightRangeMessage() {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"Please enter a height range from 90cm to 300cm\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints out error message when activity level from 1 to 5."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayInvalidActivityLevelRangeMessage() {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"Please enter an activity level from 1 to 5 only\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //@@author jlifah"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out error message when calorie count is out of the accepted bound of this application."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayCalorieCountOutOfBoundMessage() {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String calorieOutOfBoundMessage \u003d \"Calorie count should be \u003e 0 and \u003c\u003d 3000!\\n\""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Please input a valid calorie count that is within the range!\";"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(calorieOutOfBoundMessage);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out error message when calorie tag not found."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayCalorieTagNotFoundExceptionMessage() {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String calorieTagNotFoundExceptionMessage \u003d \"Calorie count tag[c/] is missing in your input!\";"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(calorieTagNotFoundExceptionMessage);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out error message when description length exceed limit."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayDescriptionLengthExceedExceptionMessage() {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String descriptionLengthExceedExceptionMessage \u003d \"Maximum description length is 40 characters only!\";"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(descriptionLengthExceedExceptionMessage);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out error message when description input by user is empty."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayEmptyDescriptionMessage() {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String emptyDescriptionMessage \u003d \"Current description is empty!\\n\""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Please input a valid description that is not empty!\";"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(emptyDescriptionMessage);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out error message when date input exceeds range accepted."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayDateLimitExceptionMessage() {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String dateLimitExceptionMessage \u003d \"You have exceeded the accepted date range!\\n\""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Date input has to be from 2020-10-14 to current date!\";"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(dateLimitExceptionMessage);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out error message when invalid calorie count entered."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayInvalidCalorieExceptionMessage() {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String invalidCalorieExceptionMessage \u003d \"Invalid calorie input!\\n\""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Calorie count must be an integer!\";"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(invalidCalorieExceptionMessage);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out error message for invalid number for delete command."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayDeleteCommandStringOutOfBoundExceptionMessage() {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"Invalid Index!\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints a message in a specified format."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param message is the message to be printed out"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void print(String message) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //@@author jlifah"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message when string entered is empty."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayEmptyStringMessage() {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"Please do not enter an empty input\");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message when txt file read from is corrupted."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayInvalidEditedUserProfileMessage() {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Corrupted user profile!\");"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Please do not edit the text file unnecessarily.\");"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"You are being directed to create a new user profile.\");"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"This is to ensure that all features can be used properly.\");"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message when shortcut of similar name already exists."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayExistingShortcutMessage() {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"There is a shortcut with this name already. Please choose another name\");"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message when missing calorie tag and/or activity tag."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayInvalidCreateSetCommandMessage() {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"You are missing an activity tag or calorie tag or both\");"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message when calories is not within range."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayInvalidCalorieMessage() {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Please enter a valid calorie range.\");"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message user did not enter type integer as calorie."
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayCalorieMustBeIntegerMessage() {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Please enter calorie as integer.\");"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message for wrongly edited set text file."
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayIncompleteSetMessage() {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"This shortcut was not successfully created as there was an error in your input.\");"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Please try again!\");"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message when user did not specify shortcut name."
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayMissingFileNameMessage() {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"You did not specify a shortcut name in your createSet command.\");"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"As such, no shortcut was created. Please try again!\");"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints corrupted shortcut message."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayCorruptedSetMessage() {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Your shortcut text file is corrupted!\");"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"As such, it will now be deleted.\\n Please avoid editing the text file to the \""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                + \"wrong format in the future.\");"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Items in the shortcut may have been added partially only.\");"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints out empty description for activity of calories tag message."
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayMissingAddSetInfoMessage() {"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"This shortcut has an empty description for activity or calorie or both.\");"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message when edit user profile command is invalid."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayInvalidEditCommandMessage() {"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"I do not understand all or part of this edit command. Your command has only been processed partially.\");"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //@@author jlifah"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message when there is too many arguments."
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayExcessNumberOfArguments() {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"This command has no description!\");"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message when there is too little arguments."
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayShortageOfArguments() {"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"This command has missing description!\");"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message when the list is empty."
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayEmptyListError() {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"List is empty!\");"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message when traKCAL is unable to write/read file."
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayFileError() {"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"Unable to read/write file\");"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message when find command finds no results."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayKeywordNotFoundMessage() {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"No results were found!\");"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message when there are consecutive slashes in input."
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayEmptyKeywordMessage() {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"Current keyword is empty!\\n\""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                + \"Please input a valid keyword that is not empty!\");"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message when there are consecutive slashes in input."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayFindSlashExceptionMessage() {"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"There are consecutive slashes in your input!\");"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Prints message when there are consecutive slashes in input."
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void displayInvalidEditUserProfileMessage() {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        print(\"I do not understand this edit user profile command!\");"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 253,
      "chewyang": 20,
      "e0425705": 226,
      "1-Karthigeyan-1": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.print;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prompts user to seek help if needed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final String PROMPT_USER_OF_HELP_MESSAGE \u003d \"Please input \u0027help\u0027 for the commands \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            + \"and their respective input format.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Divider."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Help list divider."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final String HELP_LIST_DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * logo of application and the welcoming message."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    private static final String LOGO \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            \"| Hello from                                                                       |\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            + \"|  _                  _  __   ___     _     _                                      |\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            + \"| | |_   _ _   __ _  | |/ /  / __|   /_\\\\   | |                                     |\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            + \"| |  _| | \u0027_| / _` | | \u0027 \u003c  | (__   / _ \\\\  | |__                                   |\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            + \"|  \\\\__| |_|   \\\\__,_| |_|\\\\_\\\\  \\\\___| /_/ \\\\_\\\\ |____|                                  |\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            + \"|                                                                                  |\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            + \"| Hello! I\u0027m traKCAL.                                                              |\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            + \"| \" + PROMPT_USER_OF_HELP_MESSAGE + \"          |\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out welcome message to user when program is run."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayWelcomeMessage() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(LOGO);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out the divider."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void drawDivider() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out help list showing the commands available."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayHelpMessage() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(HELP_LIST_DIVIDER);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String helpList \u003d \"This section displays the commands available and their respective input format.\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\u003e Words in CAPS are parameters to be filled in by you!\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\u003e Variables in \u003chere\u003e are optional!\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Viewing help:\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"help                   - Prints out commands available and their input format\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"User Profiling\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"user l/                - Prints out current user profile\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"user c/                - Creates new user profile\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"user e/ \u003cn/ NAME\u003e, \u003cg/ GENDER\u003e, \u003cw/ WEIGHT\u003e, \u003ch/ HEIGHT\u003e, \u003cage/ AGE\u003e, \u003cal/ ACTIVITY_FACTOR\u003e,\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                         \u003cgoal/ GOAL\u003e\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                       - Edits user profile to name, NAME, gender(male/female), GENDER,\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                         height(in cm), HEIGHT, age, AGE, activity factor(1-5), ACTIVITY_FACTOR,\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                         goal(lose/maintain/gain), GOAL\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Creating shortcut:\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"*[This command is extensive, there are a lot of variations. The following is one such example]*\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"createSet SHORTCUT_NAME f/ FOOD_DESCRIPTION c/ CALORIE_COUNT +\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT + f/ FOOD_DESCRIPTION c/ CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"*[Another possible example is:]*\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"createSet SHORTCUT_NAME f/ FOOD_DESCRIPTION c/ CALORIE_COUNT + f/ FOOD_DESCRIPTION c/\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \" CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                       - Creates shortcut, SHORTCUT_NAME for adding food(s) and/or exercise(s)\\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                         depending on the format entered\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"addSet SHORTCUT_NAME   - Adds SHORTCUT_NAME that was created in createSet into today\u0027s list\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Adding:\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"add f/ FOOD_DESCRIPTION c/ CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                       - Adds food consumed, FOOD_DESCRIPTION and calories gained, CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                         to today\u0027s date\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"add f/ FOOD_DESCRIPTION c/ CALORIE_COUNT d/ DATE\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                       - Adds food consumed, FOOD_DESCRIPTION, calories gained, CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                         and date(YYYY-MM-DD), DATE\\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"add e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                       - Adds exercise done, EXERCISE_DESCRIPTION and calories lost, CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                         to today\u0027s date\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"add e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT d/ DATE\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                       - Adds exercise done, EXERCISE_DESCRIPTION, calories lost, CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                         and date(YYYY-MM-DD), DATE\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Listing:\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"list                   - Prints out the list of entries.\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"list DATE              - Prints out the list of entries for the date(YYYY-MM-DD), DATE\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Editing:\\n\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"edit LIST_INDEX f/ FOOD_DESCRIPTION c/ CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                       - Edits entry at index LIST_INDEX of latest list printed out\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                         to food consumed, FOOD_DESCRIPTION, calories gained, CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"edit LIST_INDEX e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                       - Edits entry at index LIST_INDEX of latest list printed out\\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                         to exercise done, EXERCISE_DESCRIPTION, calories lost, CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Finding:\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"find d/ DESCRIPTION    - Searches for all entries description with the DESCRIPTION keyword\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"find c/ CALORIE_COUNT  - Searches for all entries with calories of CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"find a/ DESCRIPTION1 / DESCRIPTION2 ... / DESCRIPTION\\n\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                        - Searches for all entries with ALL matching keywords from\\n\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                          DESCRIPTION1 to DESCRIPTION\\n\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"find e/ DESCRIPTION1 / DESCRIPTION2 ... / DESCRIPTION\\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                        - Searches for all entries with AT LEAST one matching keyword from\\n\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                          DESCRIPTION1 to DESCRIPTION\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Moving:\\n\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"move from/ INDEX1 below/ INDEX2\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                       - Moves the entry at index INDEX1 to the index below INDEX2\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Deleting:\\n\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"delete LIST_INDEX      - Deletes entry located at index LIST_INDEX of latest list printed out\\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"delete all/            - Deletes all entries in current date list\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Graphing:\\n\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"graph                  - Generates a graph of target calorie and net calorie obtained up to\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                         last 7 days\\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Chaining:\\n\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"*[This command is extensive, there are a lot of variations,\\n\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                          but is only available to add, list and edit.]*\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"*[One possible example is:]*\\n\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"add f/ FOOD_DESCRIPTION c/ CALORIE_COUNT d/ DATE \u0026\u0026 list \u0026\u0026 edit LIST_INDEX f/ FOOD_DESCRIPTION\\n\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"add f/ FOOD_DESCRIPTION c/ CALORIE_COUNT d/ DATE \u0026\u0026 list \u0026\u0026 edit LIST_INDEX f/ FOOD_DESCRIPTION\\n\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                         c/ CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"*[Another possible example is:]*\\n\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"add f/ FOOD_DESCRIPTION c/ CALORIE_COUNT d/ DATE \u0026\u0026 add e/ EXERCISE_DESCRIPTION c/ CALORIE_COUNT\\n\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Exiting:\\n\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"bye                    - Terminates the application\\n\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.print(helpList);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(HELP_LIST_DIVIDER);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message when editing activity successful."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayEditMessage() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"Noted! The following has been edited:\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message when adding activity successful."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayAddMessage() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"Noted! The following has been added into list:\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out acknowledgement of saving current activity list in file."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displaySavedMessage() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"The current activity list has been saved.\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out error in saving current activity list in file."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayNotSavedMessage() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"The current activity list has not been saved.\\n\""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"An error has occurred!\\n\""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + PROMPT_USER_OF_HELP_MESSAGE);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    //@@author e0425705"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out bye message and let the user know that the current list has been saved to file."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayByeMessage() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"| Thank you for using traKCAL. See you again!\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"                                      |\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message when list command given but activity list is empty."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayEmptyActivityCounterMessage() {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Nothing was added!\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message asking for gender."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayAskUserGenderMessage() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"What is your gender (male/female)?\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message asking for weight goal."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayAskUserWeightGoalMessage() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"Do you wish to lose/maintain/gain weight?\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message asking for weight."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayAskUserWeightMessage() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"What is your weight in kg?\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message asking for height."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayAskUserHeightMessage() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"What is your height in cm?\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message asking for age."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayAskUserAgeMessage() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"What is your age?\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message asking for activity level."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayAskUserActivityLevelMessage() {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"How active are you on a scale of 1-5? With 1 being least active and 5 being most active.\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayMessage(String message) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawDivider();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out edited name."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayEditNameMessage() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.print(\"Your name has been updated to \");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out edited gender."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayEditGenderMessage() {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.print(\"Your gender has been updated to \");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out edited weight."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayEditWeightMessage() {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.print(\"Your weight has been updated to \");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out the edited height."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayEditHeightMessage() {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.print(\"Your height has been updated to \");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out the edited age."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayEditAgeMessage() {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.print(\"Your age has been updated to \");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out edited activity level."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayEditActivityLevelMessage() {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.print(\"Your activity level has been updated to \");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Printed updated goal."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayEditGoalMessage() {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.print(\"Your weight goal has been updated to \");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out welcoming message to the user."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayReturningUserMessage() {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"Welcome! What would you like to do today?\");"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message asking for name."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayAskUserNameMessage() {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"What is your name?\");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out confirmation message for addSet."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayAddSetConfirmationMessage() {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        print(\"We are attempting to add activities listed in this shortcut.\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 1,
      "chewyang": 3,
      "e0425705": 319
    }
  },
  {
    "path": "src/main/java/seedu/duke/userprofile/CheckNewUser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.userprofile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.Trakcal.getJarFilePath;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.Trakcal.jarFilePath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//@@author jlifah"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": " * Checks if the user is a new user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class CheckNewUser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static final String FILE_PATH \u003d jarFilePath + \"/tpdata/tp.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Check if it is a new user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return boolean for new user outcome"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static boolean isNewUser() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (!Files.exists(Path.of(FILE_PATH))) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(\"Hey there! We do not have a record of your profile. Please create one now! :)\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//@@author jlifah"
      }
    ],
    "authorContributionMap": {
      "jlifah": 28,
      "chewyang": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/userprofile/InitialiseUserProfile.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.userprofile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//@@author jlifah"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": " * Initialises user profile."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class InitialiseUserProfile {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected String gender;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected String weight;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected String height;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected String age;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected String activityLevel;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected String weightGoal;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected double calories;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer DIFFERENCE_CALORIES \u003d 500;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public InitialiseUserProfile(String name, String gender, String weight, String height,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                                 String age, String activityLevel, String weightGoal) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.gender \u003d gender;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.height \u003d height;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.age \u003d age;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.activityLevel \u003d activityLevel;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.weightGoal \u003d weightGoal;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Gets name."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return name"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Gets gender."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return gender"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getGender() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return gender;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Gets weight."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return weight"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getWeight() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return weight;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Gets height."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return height"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getHeight() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return height;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Gets age."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return age"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getAge() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return age;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Gets activity level."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return activityLevel"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getActivityLevel() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return activityLevel;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Gets weight goal."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return weight goal"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getWeightGoal() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return weightGoal;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Gets calories."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return calories"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public double getCalories() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return calories;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final DecimalFormat df2 \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Calculates edited user bmi, recommended calories and actual calories needed."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void calculateEditedUserDetails() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        double activityMultiple \u003d calculateActivityMultiple(this.activityLevel);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        double bmi \u003d calculateBmi(this.weight, this.height);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        assert bmi \u003e 0 : \"bmi should be more than 0\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        calories \u003d calculateCalories(this.gender, this.weight, this.height, this.age) * activityMultiple;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        assert calories \u003e 0 : \"calories should be greater than 0\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Calculates user bmi, recommended calories and actual calories needed."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String calculateNewUserDetails() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        double activityMultiple \u003d calculateActivityMultiple(this.activityLevel);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String details \u003d \"\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        double bmi \u003d calculateBmi(this.weight, this.height);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        assert bmi \u003e 0 : \"bmi should be more than 0\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        details +\u003d \"\\nYour BMI is \" + df2.format(bmi) + \"\\n\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        calories \u003d calculateCalories(this.gender, this.weight, this.height, this.age) * activityMultiple;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        assert calories \u003e 0 : \"calories should be greater than 0\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        details +\u003d \"Your recommend daily calories intake is \" + df2.format(calories) + \" calories.\" + \"\\n\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (this.getWeightGoal().equals(\"lose\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            calories -\u003d DIFFERENCE_CALORIES;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            details +\u003d \"To \" + this.getWeightGoal() + \" weight, you should consume \""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    + df2.format(calories) + \" calories instead.\\n\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } else if (this.getWeightGoal().equals(\"gain\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            calories +\u003d DIFFERENCE_CALORIES;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            details +\u003d \"To \" + this.getWeightGoal() + \" weight, you should consume \""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    + df2.format(calories) + \" calories instead.\\n\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Calculates activity multiple from activity level."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param activityLevel how active is the user from 1 to 5"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return activity multiple"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public double calculateActivityMultiple(String activityLevel) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        switch (Integer.parseInt(activityLevel)) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return 1.2;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return 1.375;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return 1.55;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return 1.725;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return 1.9;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Calculates bmi of user."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param weight of user"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param height of user"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return bmi"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public double calculateBmi(String weight, String height) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return (Double.parseDouble(weight)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                / (Double.parseDouble(height) * Double.parseDouble(height)))"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                * 10000;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Calculates recommended calories."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param gender of user"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param weight of user"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param height of user"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param age of user"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return activity multiple"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public double calculateCalories(String gender, String weight, String height, String age) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        double v \u003d (10 * Double.parseDouble(weight))"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                + (6.25 * Double.parseDouble(height));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (gender.equals(\"female\")) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return ((v) - (5 * Double.parseDouble(age)) - 161);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return (v - (5 * Double.parseDouble(age)) + 5);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return getName() + \",\" + getGender() + \",\" + getWeight() + \",\""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                + getHeight() + \",\" + getAge() + \",\" + getActivityLevel() + \",\" + getWeightGoal();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//@@author jlifah"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jlifah": 211
    }
  },
  {
    "path": "src/main/java/seedu/duke/userprofile/UserProfile.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.userprofile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.Trakcal;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.exception.InvalidEditedUserProfileException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.storage.UserInfoStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.Trakcal.logging;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidEditCommandMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidEditedUserProfileMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.Ui.displayEditWeightMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.Ui.displayEditHeightMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.Ui.displayEditAgeMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.Ui.displayEditActivityLevelMessage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.Ui.displayEditGoalMessage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.Ui.displayEditGenderMessage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.Ui.displayEditNameMessage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidActivityLevelMessage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidActivityLevelRangeMessage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidAgeMessage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidAgeRangeMessage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidHeightMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidHeightRangeMessage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidWeightMessage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.ui.ExceptionMessages;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidWeightGoalMessage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidGenderMessage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayIoExceptionMessage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static seedu.duke.ui.ExceptionMessages.displayInvalidWeightRangeMessage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//@@author jlifah"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": " * Initialises user profile after asking for user input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": " */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class UserProfile {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static String[] data \u003d new String[7];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer MAX_WEIGHT \u003d 650;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer MIN_WEIGHT \u003d 30;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer MAX_HEIGHT \u003d 300;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer MIN_HEIGHT \u003d 90;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer MIN_AGE \u003d 10;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer MAX_AGE \u003d 120;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer MIN_AL \u003d 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer MAX_AL \u003d 5;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String WHITE_SPACES \u003d \" \";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String BLANKS \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer NUM_PARAMETERS \u003d 7;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String COMMAND_SEPARATOR \u003d \",\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String NAME_TAG \u003d \"n/\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String GENDER_TAG \u003d \"g/\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String WEIGHT_TAG \u003d \"w/\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String HEIGHT_TAG \u003d \"h/\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String AGE_TAG \u003d \"age/\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String ACTIVITY_LEVEL_TAG \u003d \"al/\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String GOAL_TAG \u003d \"goal/\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer NAME_INDEX \u003d 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer GENDER_INDEX \u003d 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer WEIGHT_INDEX \u003d 2;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer HEIGHT_INDEX \u003d 3;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer AGE_INDEX \u003d 4;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer ACTIVITY_LEVEL_INDEX \u003d 5;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final Integer GOAL_INDEX \u003d 6;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Read user input."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return user input"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static String input() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return Trakcal.in.nextLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(\"Force quit. See you again!\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Create a new user profile."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return InitialiseUserProfile"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static InitialiseUserProfile createNewProfile() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        InitialiseUserProfile profile \u003d null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        logging.writeToLogInfo(\"Attempting to gather all user data.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        gatherData();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        logging.writeToLogInfo(\"All user data valid.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            profile \u003d enterNewUserInfo();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayIoExceptionMessage();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return profile;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Calls method to gather user info."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void gatherData() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        name();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        gender();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        weight();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        height();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        age();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        activityLevel();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        weightGoal();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Interprets edit commands from user."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param info user input"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void edit(String info) throws IOException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ArrayList\u003cString\u003e previous \u003d UserInfoStorage.update();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            for (int i \u003d 0; i \u003c NUM_PARAMETERS; i++) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                data[i] \u003d previous.get(i);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            String[] arguments \u003d info.split(COMMAND_SEPARATOR);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            for (String argument : arguments) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                argument \u003d removeWhiteSpaces(argument);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                String description;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                if (argument.startsWith(NAME_TAG)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    description \u003d removeWhiteSpaces(argument.substring(2));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    editName(description);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                } else if (argument.startsWith(GENDER_TAG)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    description \u003d removeWhiteSpaces(argument.substring(2));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    editGender(description);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                } else if (argument.startsWith(WEIGHT_TAG)) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    description \u003d removeWhiteSpaces(argument.substring(2));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    editWeight(description);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                } else if (argument.startsWith(HEIGHT_TAG)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    description \u003d removeWhiteSpaces(argument.substring(2));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    editHeight(description);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                } else if (argument.startsWith(AGE_TAG)) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    description \u003d removeWhiteSpaces(argument.substring(4));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    editAge(description);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                } else if (argument.startsWith(ACTIVITY_LEVEL_TAG)) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    description \u003d removeWhiteSpaces(argument.substring(3));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    editAl(description);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                } else if (argument.startsWith(GOAL_TAG)) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    description \u003d removeWhiteSpaces(argument.substring(5));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    editGoal(description);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    throw new InvalidEditedUserProfileException();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (InvalidEditedUserProfileException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidEditCommandMessage();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        InitialiseUserProfile profile \u003d"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                new InitialiseUserProfile(data[NAME_INDEX],data[GENDER_INDEX],data[WEIGHT_INDEX],data[HEIGHT_INDEX],"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                        data[AGE_INDEX],data[ACTIVITY_LEVEL_INDEX],data[GOAL_INDEX]);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        UserProfile.save(profile);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        profile.calculateEditedUserDetails();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Removes all white spaces before and after given description."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param description to have white spaces removed from"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static String removeWhiteSpaces(String description) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        while (description.startsWith(WHITE_SPACES)) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            description \u003d description.substring(1);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        while (description.endsWith(WHITE_SPACES)) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            description \u003d description.substring(0, description.length() - 1);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Edit name."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param name user input"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void editName(String name) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            logging.writeToLogInfo(\"Attempting to edit name.\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkEmptyInput(name);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            logging.writeToLogInfo(\"Name has been edited.\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            data[NAME_INDEX] \u003d name;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayEditNameMessage();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(data[NAME_INDEX] + \".\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ExceptionMessages.displayEmptyStringMessage();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Edit gender."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param gender user input"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void editGender(String gender) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            logging.writeToLogInfo(\"Attempting to edit gender.\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkEmptyInput(gender);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkGender(gender);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            logging.writeToLogInfo(\"Gender has been edited.\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            data[GENDER_INDEX] \u003d gender;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayEditGenderMessage();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(data[GENDER_INDEX] + \".\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidGenderMessage();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ExceptionMessages.displayEmptyStringMessage();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Edit weight."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param weight user input"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void editWeight(String weight) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            logging.writeToLogInfo(\"Attempting to edit weight.\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkEmptyInput(weight);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkInputIsDouble(weight);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkWeightIsWithinRange(weight);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            logging.writeToLogInfo(\"Weight has been edited.\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            data[WEIGHT_INDEX] \u003d weight;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayEditWeightMessage();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(data[WEIGHT_INDEX] + \"kg.\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidWeightMessage();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidWeightRangeMessage();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ExceptionMessages.displayEmptyStringMessage();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Edit height."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param height user input"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void editHeight(String height) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            logging.writeToLogInfo(\"Attempting to edit height.\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkEmptyInput(height);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkInputIsDouble(height);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkHeightIsWithinRange(height);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            logging.writeToLogInfo(\"Height has been edited.\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            data[HEIGHT_INDEX] \u003d height;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayEditHeightMessage();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(data[HEIGHT_INDEX] + \"cm.\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidHeightMessage();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidHeightRangeMessage();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ExceptionMessages.displayEmptyStringMessage();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Edit age."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param age user input"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void editAge(String age) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            logging.writeToLogInfo(\"Attempting to edit age.\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkEmptyInput(age);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkInputIsInt(age);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkAgeIsWithinRange(age);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            logging.writeToLogInfo(\"Age has been edited.\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            data[AGE_INDEX] \u003d age;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayEditAgeMessage();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(data[AGE_INDEX] + \"years old.\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidAgeMessage();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidAgeRangeMessage();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ExceptionMessages.displayEmptyStringMessage();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Edit activity level."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param al user input"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void editAl(String al) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            logging.writeToLogInfo(\"Attempting to edit activity level.\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkEmptyInput(al);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkInputIsInt(al);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkAcLeIsWithinRange(al);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            logging.writeToLogInfo(\"Activity level has been edited.\");"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            data[ACTIVITY_LEVEL_INDEX] \u003d al;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayEditActivityLevelMessage();"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(data[ACTIVITY_LEVEL_INDEX] + \".\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidActivityLevelMessage();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidActivityLevelRangeMessage();"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ExceptionMessages.displayEmptyStringMessage();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Edit goal."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param goal user input"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void editGoal(String goal) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            logging.writeToLogInfo(\"Attempting to edit goal.\");"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkEmptyInput(goal);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkWeightGoal(goal);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            logging.writeToLogInfo(\"Goal has been edited.\");"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            data[GOAL_INDEX] \u003d goal;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayEditGoalMessage();"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(data[GOAL_INDEX] + \".\");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidWeightGoalMessage();"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ExceptionMessages.displayEmptyStringMessage();"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * ask user for name and save in an array entry."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void name()  {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Ui.displayAskUserNameMessage();"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String name \u003d input();"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            assert name !\u003d null;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkEmptyInput(name);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            data[NAME_INDEX] \u003d name;"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ExceptionMessages.displayEmptyStringMessage();"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            name();"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * user gender restricted to what is stated in enum."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private enum GenderEnum {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        male, female"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * ask user for gender and save in an array entry."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void gender() {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Ui.displayAskUserGenderMessage();"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String gender \u003d input();"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            assert gender !\u003d null;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkEmptyInput(gender);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkGender(gender);"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            data[GENDER_INDEX] \u003d gender;"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidGenderMessage();"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            gender();"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ExceptionMessages.displayEmptyStringMessage();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            gender();"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * ask user for weight and save in an array entry."
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * must be between 20 to 650kg and type double."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void weight() {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Ui.displayAskUserWeightMessage();"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String weight \u003d input();"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            assert weight !\u003d null;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkEmptyInput(weight);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkInputIsDouble(weight);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkWeightIsWithinRange(weight);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            data[WEIGHT_INDEX] \u003d weight;"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidWeightMessage();"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            weight();"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidWeightRangeMessage();"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            weight();"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ExceptionMessages.displayEmptyStringMessage();"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            weight();"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * ask user for height and save in an array entry."
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * must be between 10 to 300cm and type double."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void height() {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Ui.displayAskUserHeightMessage();"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String height \u003d input();"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            assert height !\u003d null;"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkEmptyInput(height);"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkInputIsDouble(height);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkHeightIsWithinRange(height);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            data[HEIGHT_INDEX] \u003d height;"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidHeightMessage();"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            height();"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidHeightRangeMessage();"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            height();"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ExceptionMessages.displayEmptyStringMessage();"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            height();"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * ask user for age and save in an array entry."
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * must be between 1 to 120 years old."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void age() {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Ui.displayAskUserAgeMessage();"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String age \u003d input();"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            assert age !\u003d null;"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkEmptyInput(age);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkInputIsInt(age);"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkAgeIsWithinRange(age);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            data[AGE_INDEX] \u003d age;"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidAgeMessage();"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            age();"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidAgeRangeMessage();"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            age();"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ExceptionMessages.displayEmptyStringMessage();"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            age();"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * ask user for activity level and save in an array entry."
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void activityLevel() {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Ui.displayAskUserActivityLevelMessage();"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String activityLevel \u003d input();"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            assert activityLevel !\u003d null;"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkEmptyInput(activityLevel);"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkInputIsInt(activityLevel);"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkAcLeIsWithinRange(activityLevel);"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            data[ACTIVITY_LEVEL_INDEX] \u003d activityLevel;"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidActivityLevelMessage();"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            activityLevel();"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidActivityLevelRangeMessage();"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            activityLevel();"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ExceptionMessages.displayEmptyStringMessage();"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            activityLevel();"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * user weight goal restricted to what is stated in enum."
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private enum WeightGoalEnum {"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        lose, maintain, gain"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * ask user for weight goal and save in an array entry."
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void weightGoal() {"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Ui.displayAskUserWeightGoalMessage();"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String weightGoal \u003d input();"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            assert weightGoal !\u003d null;"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkEmptyInput(weightGoal);"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkWeightGoal(weightGoal);"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            data[GOAL_INDEX] \u003d weightGoal;"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidWeightGoalMessage();"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            weightGoal();"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ExceptionMessages.displayEmptyStringMessage();"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            weightGoal();"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Check genders validity."
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param gender user input"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void checkGender(String gender) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        for (GenderEnum validGender : GenderEnum.values()) {"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            if (validGender.name().equals(gender)) {"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Check if input is of type double."
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param userInput user input"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void checkInputIsDouble(String userInput) throws NumberFormatException {"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Double.parseDouble(userInput);"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Check weight is within range."
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param weight user input"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void checkWeightIsWithinRange(String weight) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (Double.parseDouble(weight) \u003c MIN_WEIGHT || Double.parseDouble(weight) \u003e MAX_WEIGHT) {"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Check height is within range."
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param height user input"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void checkHeightIsWithinRange(String height) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (Double.parseDouble(height) \u003c MIN_HEIGHT || Double.parseDouble(height) \u003e MAX_HEIGHT) {"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Check age is within range."
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param age user input"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void checkAgeIsWithinRange(String age) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (Integer.parseInt(age) \u003c MIN_AGE || Integer.parseInt(age) \u003e MAX_AGE) {"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Check input is of type integer."
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param userInput user input"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void checkInputIsInt(String userInput) throws NumberFormatException {"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Check input is within range."
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param al user input"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void checkAcLeIsWithinRange(String al) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (Integer.parseInt(al) \u003c MIN_AL || Integer.parseInt(al) \u003e MAX_AL) {"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Check weight goal fits enum."
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param wg user input"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void checkWeightGoal(String wg) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        for (WeightGoalEnum validWg : WeightGoalEnum.values()) {"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            if (validWg.name().equals(wg)) {"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Check for empty input for string."
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param userInput user input"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void checkEmptyInput(String userInput) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (userInput.equals(WHITE_SPACES) || userInput.equals(BLANKS) || userInput.isEmpty() || userInput.isBlank()) {"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Check for empty input for array."
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param data user input"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void checkEmptyInput2(String[] data) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        for (String datum : data) {"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            if (datum.isEmpty() || datum.isBlank()) {"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Saves new user info."
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static InitialiseUserProfile enterNewUserInfo() throws IOException {"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        InitialiseUserProfile profile \u003d"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                new InitialiseUserProfile(data[NAME_INDEX],data[GENDER_INDEX],data[WEIGHT_INDEX],data[HEIGHT_INDEX],"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                        data[AGE_INDEX],data[ACTIVITY_LEVEL_INDEX],data[GOAL_INDEX]);"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(profile.calculateNewUserDetails());"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        UserProfile.save(profile);"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return profile;"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * override and save user details in text file."
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param profile to be saved in text file"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void saveExistingUserInfo(InitialiseUserProfile profile) throws IOException {"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        UserProfile.save(profile);"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * create a new text file and save user input into the text file."
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @param profile question to be printed"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void save(InitialiseUserProfile profile) throws IOException {"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        UserInfoStorage storage \u003d new UserInfoStorage();"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        storage.save(profile.toString());"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * Reading user input from existing text file and save a profile type."
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     * @return Storage type"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "jlifah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static InitialiseUserProfile loadProfile() {"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String[] data \u003d new String[NUM_PARAMETERS];"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        ArrayList\u003cString\u003e previousInput \u003d UserInfoStorage.update();"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        for (int i \u003d 0; i \u003c NUM_PARAMETERS; i++) {"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                if (!previousInput.get(i).isEmpty() \u0026\u0026 !previousInput.get(i).isBlank()) {"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    data[i] \u003d previousInput.get(i);"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    throw new NullPointerException();"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } catch (IndexOutOfBoundsException | NullPointerException e) {"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                displayInvalidEditedUserProfileMessage();"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                createNewProfile();"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkEmptyInput2(data);"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkGender(data[GENDER_INDEX]);"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkWeightGoal(data[GOAL_INDEX]);"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkInputIsInt(data[AGE_INDEX]);"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkInputIsDouble(data[WEIGHT_INDEX]);"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkInputIsInt(data[ACTIVITY_LEVEL_INDEX]);"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkInputIsDouble(data[HEIGHT_INDEX]);"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkAcLeIsWithinRange(data[ACTIVITY_LEVEL_INDEX]);"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkAgeIsWithinRange(data[AGE_INDEX]);"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkWeightIsWithinRange(data[WEIGHT_INDEX]);"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            checkHeightIsWithinRange(data[HEIGHT_INDEX]);"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IllegalArgumentException | EmptyDescriptionException | NullPointerException e) {"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayInvalidEditedUserProfileMessage();"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            createNewProfile();"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        InitialiseUserProfile profile \u003d"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                new InitialiseUserProfile(data[NAME_INDEX], data[GENDER_INDEX], data[WEIGHT_INDEX], data[HEIGHT_INDEX],"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                        data[AGE_INDEX], data[ACTIVITY_LEVEL_INDEX], data[GOAL_INDEX]);"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        profile.calculateNewUserDetails();"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            UserProfile.saveExistingUserInfo(profile);"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            displayIoExceptionMessage();"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return profile;"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//@@author jlifah"
      }
    ],
    "authorContributionMap": {
      "jlifah": 733,
      "chewyang": 4
    }
  },
  {
    "path": "src/test/java/seedu/duke/ActivityAddTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import seedu.duke.command.AddExerciseCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import seedu.duke.command.AddFoodCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.ActivityList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Exercise;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Food;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class ActivityAddTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private final LocalDate date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    void createObjects(ActivityList dummyList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyList.addActivity(new Food(\"Apple\", 50, date, false));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyList.addActivity(new Food(\"Banana\", 100, date, false));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyList.addActivity(new Food(\"Apple pie\", 55, date, false));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyList.addActivity(new Exercise(\"Juggle Apples\", 100, date, false));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    void addActivityFood_success() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Food food \u003d new Food(\"Apple\", 50, date, false);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String output \u003d food.getString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        assertEquals(\"[F] | Apple | 50\", output);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    void addActivityFood2_success() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        ActivityList dummyList \u003d new ActivityList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        createObjects(dummyList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        AddFoodCommand food \u003d new AddFoodCommand(\"Apple\", 50, false);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Assertions.assertThrows(NullPointerException.class, food::execute);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    void addActivityExercise_success() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Exercise exercise \u003d new Exercise(\"Running\", 450, date, false);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String output \u003d exercise.getString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        assertEquals(\"[E] | Running | 450\", output);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    void addActivityExercise2_success() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        ActivityList dummyList \u003d new ActivityList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        createObjects(dummyList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        AddExerciseCommand exercise \u003d new AddExerciseCommand(\"Running\", 450, false);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Assertions.assertThrows(NullPointerException.class, exercise::execute);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 14,
      "e0425705": 44
    }
  },
  {
    "path": "src/test/java/seedu/duke/ActivityChainTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static seedu.duke.logic.parser.ChainingParser.CHAIN_SEPARATOR;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static seedu.duke.logic.parser.ChainingParser.CHAIN_SEPARATOR_LENGTH;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static seedu.duke.logic.parser.CommandParser.SPACE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class ActivityChainTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public void parseChainCommand_testExample1() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String userInput \u003d \"add f/ food c/ 90 \u0026\u0026 add e/ running c/ 80\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int chainIndex \u003d userInput.indexOf(CHAIN_SEPARATOR);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String firstString \u003d userInput.substring(0, chainIndex).trim();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        assertEquals(\"add f/ food c/ 90\", firstString);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput.substring(chainIndex + CHAIN_SEPARATOR_LENGTH).trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        assertEquals(\"add e/ running c/ 80\", userInput);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public void parseChainCommand_testExample2() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String userInput \u003d \"graph \u0026\u0026 list\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int chainIndex \u003d userInput.indexOf(CHAIN_SEPARATOR);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String firstString \u003d userInput.substring(0, chainIndex).trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        assertEquals(\"graph\", firstString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput.substring(chainIndex + CHAIN_SEPARATOR_LENGTH).trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        assertEquals(\"list\", userInput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public void parseChainCommand_testExample3() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String userInput \u003d \"edita 2 e/ jumping c/ 88 \u0026\u0026 add f/ food c/ 77 d/ 2020-11-09 \u0026\u0026 list\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int chainIndex \u003d userInput.indexOf(CHAIN_SEPARATOR);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String firstString \u003d userInput.substring(0, chainIndex).trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        assertEquals(\"edita 2 e/ jumping c/ 88\", firstString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput.substring(chainIndex + CHAIN_SEPARATOR_LENGTH).trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        assertEquals(\"add f/ food c/ 77 d/ 2020-11-09 \u0026\u0026 list\", userInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput + SPACE + CHAIN_SEPARATOR;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        chainIndex \u003d userInput.indexOf(CHAIN_SEPARATOR);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        firstString \u003d userInput.substring(0, chainIndex).trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        assertEquals(\"add f/ food c/ 77 d/ 2020-11-09\", firstString);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput.substring(chainIndex + CHAIN_SEPARATOR_LENGTH).trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        assertEquals(\"list \u0026\u0026\", userInput);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        chainIndex \u003d userInput.indexOf(CHAIN_SEPARATOR);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        firstString \u003d userInput.substring(0, chainIndex).trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        assertEquals(\"list\", firstString);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 55
    }
  },
  {
    "path": "src/test/java/seedu/duke/ActivityEditTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import seedu.duke.command.EditExerciseCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import seedu.duke.command.EditFoodCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Activity;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.ActivityList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.DayMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Exercise;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Food;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class ActivityEditTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    LocalDate date \u003d LocalDate.of(2020, Month.OCTOBER, 25);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    LocalDate date2 \u003d LocalDate.of(2020, Month.NOVEMBER, 10);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    LocalDate date3 \u003d LocalDate.of(2020, Month.DECEMBER, 11);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    void createObjects(ActivityList dummyList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyList.addActivity(new Food(\"Apple\", 50, date, false));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyList.addActivity(new Food(\"Banana\", 100, date, false));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyList.addActivity(new Food(\"Apple pie\", 55, date, false));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyList.addActivity(new Exercise(\"Juggle Apples\", 100, date, false));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    void createObjects2(DayMap dummyMap) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date.atStartOfDay(), new Food(\"rice with eggs\", 50, date, false));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date.atStartOfDay(), new Exercise(\"run 2km\", 100, date, false));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Exercise(\"run 10km\", 51, date2, false));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Food(\"rice with tofu\", 101, date2, false));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date3.atStartOfDay(), new Food(\"rice with shit\", 51, date3, false));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date3.atStartOfDay(), new Food(\"rice with pork\", 101, date3, false));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    void editActivityFoodToExercise_success() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        ActivityList dummyList \u003d new ActivityList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        createObjects(dummyList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Activity activity \u003d new Exercise(\"jumping\", 900, date, false);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        dummyList.insertActivity(0, activity);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        assertEquals(\"[E] | jumping | 900, [F] | Banana | 100, [F] | Apple pie | 55, \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"[E] | Juggle Apples | 100\", dummyList.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    void editActivityFoodToExercise2_success() throws NullPointerException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        ActivityList dummyList \u003d new ActivityList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        createObjects(dummyList);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        createObjects2(dummyMap);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Assertions.assertThrows(NullPointerException.class, () -\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            EditExerciseCommand exercise \u003d new EditExerciseCommand(0, \"jumping\", 900);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            exercise.execute();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        });"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    void editActivityExerciseToFood_success() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        ActivityList dummyList \u003d new ActivityList();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        createObjects(dummyList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Activity activity \u003d new Food(\"Pineapple\", 77, date,false);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        dummyList.insertActivity(3, activity);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        assertEquals(\"[F] | Apple | 50, [F] | Banana | 100, [F] | Apple pie | 55, \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"[F] | Pineapple | 77\", dummyList.toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    void editActivityExerciseToFood2_success() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        ActivityList dummyList \u003d new ActivityList();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        createObjects(dummyList);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        createObjects2(dummyMap);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Assertions.assertThrows(NullPointerException.class, () -\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            EditFoodCommand food \u003d new EditFoodCommand(3, \"Pineapple\", 77);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            food.execute();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        });"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    void editActivityExerciseToExercise_success() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        ActivityList dummyList \u003d new ActivityList();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        createObjects(dummyList);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Activity activity \u003d new Exercise(\"jumping\", 900, date,false);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        dummyList.insertActivity(3, activity);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        assertEquals(\"[F] | Apple | 50, [F] | Banana | 100, [F] | Apple pie | 55, \""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"[E] | jumping | 900\", dummyList.toString());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    void editActivityExerciseToExercise2_success() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        ActivityList dummyList \u003d new ActivityList();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        createObjects(dummyList);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        createObjects2(dummyMap);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Assertions.assertThrows(NullPointerException.class, () -\u003e {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            EditExerciseCommand exercise \u003d new EditExerciseCommand(3, \"jumping\", 900);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            exercise.execute();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        });"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    void editActivityFoodToFood_success() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        ActivityList dummyList \u003d new ActivityList();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        createObjects(dummyList);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Activity activity \u003d new Food(\"Pineapple\", 77,  date,false);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        dummyList.insertActivity(2, activity);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        assertEquals(\"[F] | Apple | 50, [F] | Banana | 100, [F] | Pineapple | 77, \""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"[E] | Juggle Apples | 100\", dummyList.toString());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    void editActivityFoodToFood2_success() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        ActivityList dummyList \u003d new ActivityList();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        createObjects(dummyList);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        createObjects2(dummyMap);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Assertions.assertThrows(NullPointerException.class, () -\u003e {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            EditFoodCommand food \u003d new EditFoodCommand(2, \"Pineapple\", 77);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            food.execute();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        });"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    void editActivity_success() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String userInput0 \u003d \"list 2020-10-25\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Parser parser \u003d new Parser(userInput0);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        parser.parseCommand();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String userInput1 \u003d \"edita a f/ Pineapple c/ 77\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Parser parser1 \u003d new Parser(userInput1);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Command command \u003d parser1.parseCommand();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Assertions.assertThrows(NumberFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        });"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 30,
      "e0425705": 140
    }
  },
  {
    "path": "src/test/java/seedu/duke/ActivityFindTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.command.FindAllCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.command.FindCalorieCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.command.FindDescriptionCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.command.FindEitherCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.exception.EmptyKeywordException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.exception.FindSlashException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.exception.KeywordNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import seedu.duke.model.DayMap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Exercise;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Food;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "class ActivityFindTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    LocalDate date \u003d LocalDate.of(2020, Month.OCTOBER, 9);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    LocalDate date2 \u003d LocalDate.of(2020, Month.NOVEMBER, 10);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    LocalDate date3 \u003d LocalDate.of(2020, Month.DECEMBER, 11);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    void createObjects(DayMap dummyMap) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        dummyMap.addActivity(date.atStartOfDay(), new Food(\"fried rice\", 60, date, false));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        dummyMap.addActivity(date.atStartOfDay(), new Exercise(\"Noodles\", 100, date, false));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Exercise(\"run 10km\", 100,  date2,false));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Food(\"chicken rice\", 200, date2, false));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        dummyMap.addActivity(date3.atStartOfDay(), new Food(\"rice with vegs\", 100, date3, false));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        dummyMap.addActivity(date3.atStartOfDay(), new Food(\"rice with tofu\", 300, date3, false));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    void findDescription_success() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Command findCommand \u003d new FindDescriptionCommand(\"rice\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        findCommand.setData(dummyMap);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        findCommand.execute();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        assertEquals(\"[F] | rice with vegs | 100, [F] | rice with tofu | 300, \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                + \"[F] | chicken rice | 200, [F] | fried rice | 60\", dummyMap.getLastSeenList().toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    void findCalorie_success() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Command findCommand \u003d new FindCalorieCommand(\"100\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        findCommand.setData(dummyMap);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        findCommand.execute();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        assertEquals(\"[F] | rice with vegs | 100, [E] | run 10km | 100, \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                + \"[E] | Noodles | 100\", dummyMap.getLastSeenList().toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    void findDescriptionAll_success() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Command findCommand \u003d new FindAllCommand(\"find a/ rice / with\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        findCommand.setData(dummyMap);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        findCommand.execute();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        assertEquals(\"[F] | rice with vegs | 100, [F] | rice with tofu | 300\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                dummyMap.getLastSeenList().toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    void findDescriptionAll_withNoResult_success() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Command findCommand \u003d new FindAllCommand(\"find a/ rice / banana\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        findCommand.setData(dummyMap);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        findCommand.execute();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        assertEquals(\"\", dummyMap.getLastSeenList().toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    void findDescriptionEither_success() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Command findCommand \u003d new FindEitherCommand(\"find e/ rice / run\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        findCommand.setData(dummyMap);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        findCommand.execute();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        assertEquals(\"[F] | rice with vegs | 100, [F] | rice with tofu | 300, \""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        + \"[E] | run 10km | 100, [F] | chicken rice | 200, [F] | fried rice | 60\","
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                dummyMap.getLastSeenList().toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    void findDescriptionEither_withNoResult_success() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Command findCommand \u003d new FindEitherCommand(\"find e/ papaya / western\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        findCommand.setData(dummyMap);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        findCommand.execute();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        assertEquals(\"\", dummyMap.getLastSeenList().toString());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    void findDescriptionAll_consecutiveSlashException_success() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Assertions.assertThrows(FindSlashException.class, () -\u003e {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            dummyMap.listActivitiesContainingAll(\"find e/ papaya // western\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        });"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    void findDescription_emptyKeywordException_success() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Assertions.assertThrows(EmptyKeywordException.class, () -\u003e {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            dummyMap.listActivitiesContainingDescription(\"\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        });"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    void findCalorie_keywordNotFoundException_success() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Assertions.assertThrows(KeywordNotFoundException.class, () -\u003e {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            dummyMap.listActivitiesContainingCalorie(\"1000\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        });"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 5,
      "poonchuanan": 134
    }
  },
  {
    "path": "src/test/java/seedu/duke/ActivityListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.ActivityList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Food;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "class ActivityListTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected ActivityList dummyList \u003d new ActivityList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    LocalDate date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    void createObjects(ActivityList dummyList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyList.addActivity(new Food(\"Apple\", 50, date, false));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyList.addActivity(new Food(\"Banana\", 100, date, false));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyList.addActivity(new Food(\"Orange\", 25, date, false));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    void removeActivity_validIndex_success() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        createObjects(dummyList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dummyList.removeActivity(1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        assertEquals(\"[F] | Apple | 50, [F] | Orange | 25\", dummyList.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    void clearList_success() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        createObjects(dummyList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dummyList.clearList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertEquals(0, dummyList.getNumberOfActivities());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    void removeActivity_InvalidPositiveIndex_success() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        createObjects(dummyList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Assertions.assertThrows(IndexOutOfBoundsException.class, () -\u003e {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            dummyList.removeActivity(10);;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        });"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    void removeActivity_InvalidNegativeIndex_success() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        createObjects(dummyList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Assertions.assertThrows(IndexOutOfBoundsException.class, () -\u003e {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            dummyList.removeActivity(-1);;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        });"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 9,
      "1-Karthigeyan-1": 43
    }
  },
  {
    "path": "src/test/java/seedu/duke/AdvancedListingTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.DeleteByIndexCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.command.FindDescriptionCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.command.ListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.DayMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Exercise;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Food;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "class AdvancedListingTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    LocalDate date \u003d LocalDate.of(2020, Month.OCTOBER, 9);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    LocalDate date2 \u003d LocalDate.of(2020, Month.NOVEMBER, 10);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    LocalDate date3 \u003d LocalDate.of(2020, Month.DECEMBER, 11);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    void createObjects(DayMap dummyMap) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date.atStartOfDay(), new Food(\"rice with eggs\", 50, date, false));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date.atStartOfDay(), new Exercise(\"run 2km\", 100, date, false));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Exercise(\"run 10km\", 51,  date2,false));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Food(\"rice with tofu\", 101, date2, false));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date3.atStartOfDay(), new Food(\"rice with vegs\", 51, date3, false));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date3.atStartOfDay(), new Food(\"rice with pork\", 101, date3, false));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    void listDate_andDeleteFromActivityListShown_successfully() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Command listCommand \u003d new ListCommand(date);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        listCommand.setData(dummyMap);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        listCommand.execute();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        assertEquals(\"2020-10-09, [F] | rice with eggs | 50, [E] | run 2km | 100\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                dummyMap.toString(date.atStartOfDay()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Command deleteCommand \u003d new DeleteByIndexCommand(0);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        deleteCommand.setData(dummyMap);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        deleteCommand.execute();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        assertEquals(\"2020-10-09, [E] | run 2km | 100\", dummyMap.toString(date.atStartOfDay()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    void findDescription_andDeleteFromActivityListShown_successfully() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Command findCommand \u003d new FindDescriptionCommand(\"rice\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        findCommand.setData(dummyMap);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        findCommand.execute();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        assertEquals(\"[F] | rice with vegs | 51, [F] | rice with pork | 101, [F] | rice with tofu | 101, \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + \"[F] | rice with eggs | 50\", dummyMap.getLastSeenList().toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Command deleteCommand \u003d new DeleteByIndexCommand(2);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        deleteCommand.setData(dummyMap);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        deleteCommand.execute();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        assertEquals(\"[F] | rice with vegs | 51, [F] | rice with pork | 101, [F] | rice with eggs | 50\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                dummyMap.getLastSeenList().toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 68,
      "1-Karthigeyan-1": 3
    }
  },
  {
    "path": "src/test/java/seedu/duke/DayMapTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.DayMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Food;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "class DayMapTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    LocalDate date \u003d LocalDate.of(2020, Month.AUGUST, 9);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    LocalDate date2 \u003d LocalDate.of(2020, Month.AUGUST, 10);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    void createObjects(DayMap dummyMap) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date.atStartOfDay(), new Food(\"Apple\", 50, date, false));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date.atStartOfDay(), new Food(\"Banana\", 100, date, false));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date.atStartOfDay(), new Food(\"Orange\", 25, date, false));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Food(\"Apple2\", 51, date2, false));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Food(\"Banana2\", 101, date2, false));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Food(\"Orange2\", 26, date2, false));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    void listingCorrectKeyValueMatch() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        assertEquals(\"2020-08-09, [F] | Apple | 50, [F] | Banana | 100, [F] | Orange | 25\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                dummyMap.toString(date.atStartOfDay()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        assertEquals(\"2020-08-10, [F] | Apple2 | 51, [F] | Banana2 | 101, [F] | Orange2 | 26\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                dummyMap.toString(date2.atStartOfDay()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 35
    }
  },
  {
    "path": "src/test/java/seedu/duke/GraphPropertyTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.DayMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.model.Exercise;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Food;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.model.GraphProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "class GraphPropertyTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private LocalDate date1 \u003d LocalDate.of(2020, Month.AUGUST, 9);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private LocalDate date2 \u003d LocalDate.of(2020, Month.MARCH, 12);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public DayMap setDummyMap() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        DayMap dayMap \u003d new DayMap();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return dayMap;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void setProperty_TargetCalorieAsMiddle_success() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        DayMap dummyMap \u003d setDummyMap();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dummyMap.addActivity(date1.atStartOfDay(), new Food(\"apple\", 1000, date1, false));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Food(\"banana\", 2000, date2, false));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        GraphProperty graphProperty \u003d new GraphProperty(dummyMap, 1500);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        graphProperty.setProperties();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertEquals(2, graphProperty.row);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertEquals(2000, graphProperty.maxCalories);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertEquals(1000, graphProperty.minCalories);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void setProperty_TargetCalorieInLower_success() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        DayMap dummyMap \u003d setDummyMap();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dummyMap.addActivity(date1.atStartOfDay(), new Food(\"apple\", 1000, date1, false));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Food(\"banana\", 2000, date2, false));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        GraphProperty graphProperty \u003d new GraphProperty(dummyMap, 500);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        graphProperty.setProperties();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertEquals(2, graphProperty.row);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertEquals(2000, graphProperty.maxCalories);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertEquals(500, graphProperty.minCalories);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void setProperty_TargetCalorieInHigher_success() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        DayMap dummyMap \u003d setDummyMap();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dummyMap.addActivity(date1.atStartOfDay(), new Food(\"apple\", 1000, date1, false));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Food(\"banana\", 2000, date2, false));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        GraphProperty graphProperty \u003d new GraphProperty(dummyMap, 3000);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        graphProperty.setProperties();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertEquals(2, graphProperty.row);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertEquals(3000, graphProperty.maxCalories);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertEquals(1000, graphProperty.minCalories);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void setProperty_EmptyList_Exception() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        DayMap dummyMap \u003d setDummyMap();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Assertions.assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            GraphProperty graphProperty \u003d new GraphProperty(dummyMap, 3000);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            graphProperty.setProperties();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        });"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void setProperty_NegativeCalories_success() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        DayMap dummyMap \u003d setDummyMap();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dummyMap.addActivity(date1.atStartOfDay(), new Exercise(\"pushup\", 1000, date1, false));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Food(\"banana\", 2000, date2, false));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        GraphProperty graphProperty \u003d new GraphProperty(dummyMap, 1000);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        graphProperty.setProperties();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertEquals(2, graphProperty.row);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertEquals(2000, graphProperty.maxCalories);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertEquals(-1000, graphProperty.minCalories);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void setProperty_sameCalories_success() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        DayMap dummyMap \u003d setDummyMap();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dummyMap.addActivity(date1.atStartOfDay(), new Food(\"apple\", 1000, date1, false));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Food(\"banana\", 1000, date2, false));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        GraphProperty graphProperty \u003d new GraphProperty(dummyMap, 1000);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        graphProperty.setProperties();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertEquals(2, graphProperty.row);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertEquals(1005, graphProperty.maxCalories);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertEquals(995, graphProperty.minCalories);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 2,
      "1-Karthigeyan-1": 93
    }
  },
  {
    "path": "src/test/java/seedu/duke/MoveActivityCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.command.ListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.exception.ListNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.parser.CommandParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.DayMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.model.Food;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class MoveActivityCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    LocalDate date \u003d LocalDate.of(2020, Month.AUGUST, 9);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    LocalDate date2 \u003d LocalDate.of(2020, Month.AUGUST, 10);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    void createObjects(DayMap dummyMap) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date.atStartOfDay(), new Food(\"Apple\", 50, date, false));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date.atStartOfDay(), new Food(\"Banana\", 100, date, false));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date.atStartOfDay(), new Food(\"Orange\", 25, date, false));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Food(\"Apple2\", 51, date2, false));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Food(\"Banana2\", 101, date2, false));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.addActivity(date2.atStartOfDay(), new Food(\"Orange2\", 26, date2, false));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    void whiteSpace_parsingTest() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Command listCommand \u003d new ListCommand(date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        listCommand.setData(dummyMap);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        listCommand.execute();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        assertEquals(\"2020-08-09, [F] | Apple | 50, [F] | Banana | 100, [F] | Orange | 25\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                dummyMap.toString(date.atStartOfDay()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        CommandParser parser \u003d new CommandParser(\"move from/   3 below/ 1\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Command command \u003d parser.parseArgument();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        command.setData(dummyMap);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        command.execute();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        assertEquals(\"2020-08-09, [F] | Apple | 50, [F] | Orange | 25, [F] | Banana | 100\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                dummyMap.toString(date.atStartOfDay()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        CommandParser parser2 \u003d new CommandParser(\"move from/3 below/  1\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Command command2 \u003d parser2.parseArgument();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        command2.setData(dummyMap);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        command2.execute();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        assertEquals(\"2020-08-09, [F] | Apple | 50, [F] | Banana | 100, [F] | Orange | 25\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                dummyMap.toString(date.atStartOfDay()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    void numberFormatExceptionThrown_ifIndexEnteredIsNotANumber() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Command listCommand \u003d new ListCommand(date);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        listCommand.setData(dummyMap);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        listCommand.execute();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        assertEquals(\"2020-08-09, [F] | Apple | 50, [F] | Banana | 100, [F] | Orange | 25\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                dummyMap.toString(date.atStartOfDay()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        CommandParser parser \u003d new CommandParser(\"move from/a below/2\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Assertions.assertThrows(NullPointerException.class, () -\u003e {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            parser.parseArgument().execute();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    void indexOutOfBoundsExceptionThrown_ifIndexEnteredIsWrong() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dummyMap.setLastSeenList(dummyMap.getActivityList(date.atStartOfDay()));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Assertions.assertThrows(IndexOutOfBoundsException.class, () -\u003e {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            dummyMap.move(3,5);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Assertions.assertThrows(IndexOutOfBoundsException.class, () -\u003e {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            dummyMap.move(5,2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    void listNotFoundException_IfTryToAccessEmptyLastSeenList() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Assertions.assertThrows(ListNotFoundException.class, () -\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            dummyMap.move(1,2);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    void moveTest_TopToBottom() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Command listCommand \u003d new ListCommand(date);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        listCommand.setData(dummyMap);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        listCommand.execute();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        assertEquals(\"2020-08-09, [F] | Apple | 50, [F] | Banana | 100, [F] | Orange | 25\","
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                dummyMap.toString(date.atStartOfDay()));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        CommandParser parser \u003d new CommandParser(\"move from/ 3 below/ 1\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Command command \u003d parser.parseArgument();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        command.setData(dummyMap);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        command.execute();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        assertEquals(\"2020-08-09, [F] | Apple | 50, [F] | Orange | 25, [F] | Banana | 100\","
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                dummyMap.toString(date.atStartOfDay()));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        CommandParser parser2 \u003d new CommandParser(\"move from/1 below/ 2\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Command command2 \u003d parser2.parseArgument();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        command2.setData(dummyMap);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        command2.execute();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        assertEquals(\"2020-08-09, [F] | Orange | 25, [F] | Apple | 50, [F] | Banana | 100\","
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                dummyMap.toString(date.atStartOfDay()));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    void moveTest_BottomToTop() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        DayMap dummyMap \u003d new DayMap();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        createObjects(dummyMap);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Command listCommand \u003d new ListCommand(date);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        listCommand.setData(dummyMap);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        listCommand.execute();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        assertEquals(\"2020-08-09, [F] | Apple | 50, [F] | Banana | 100, [F] | Orange | 25\","
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                dummyMap.toString(date.atStartOfDay()));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        CommandParser parser2 \u003d new CommandParser(\"move from/1 below/ 2\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Command command2 \u003d parser2.parseArgument();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        command2.setData(dummyMap);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        command2.execute();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        assertEquals(\"2020-08-09, [F] | Banana | 100, [F] | Apple | 50, [F] | Orange | 25\","
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                dummyMap.toString(date.atStartOfDay()));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 143,
      "1-Karthigeyan-1": 7
    }
  },
  {
    "path": "src/test/java/seedu/duke/NewUserAddTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.userprofile.InitialiseUserProfile;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class NewUserAddTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    void addNewUserTest_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        InitialiseUserProfile userinfo \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                new InitialiseUserProfile(\"Sam\",\"Female\",\"50\",\"130\",\"20\",\"2\",\"maintain\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String output \u003d userinfo.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        assertEquals(output, \"Sam,Female,50,130,20,2,maintain\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 16
    }
  },
  {
    "path": "src/test/java/seedu/duke/TrakcalTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "class TrakcalTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 1,
      "-": 11
    }
  },
  {
    "path": "src/test/java/seedu/duke/logic/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.DeleteByIndexCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.logic.parser.CommandParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void deleteIndex_success() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        CommandParser parser \u003d new CommandParser(\"delete 2\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Command cmd \u003d parser.parseArgument();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertTrue(cmd instanceof DeleteByIndexCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 20
    }
  },
  {
    "path": "src/test/java/seedu/duke/logic/preparecommand/PrepareDeleteCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke.logic.preparecommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.command.DeleteByIndexCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.model.DayMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.model.Exercise;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.model.Food;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "class PrepareDeleteCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String DELETE \u003d \"Delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    LocalDate date \u003d LocalDate.of(2020, Month.OCTOBER, 25);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    void createObjects(DayMap dummyMap) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dummyMap.addActivity(date.atStartOfDay(), new Food(\"rice with eggs\", 50, date, false));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        dummyMap.addActivity(date.atStartOfDay(), new Exercise(\"run 2km\", 100, date, false));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void prepareDeleteCommand_DeleteByIndex_Success() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        DayMap dayMap \u003d new DayMap();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        createObjects(dayMap);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String[] arguments \u003d {DELETE,\"2\"};"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Command command \u003d new PrepareDeleteCommand(arguments).prepareCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        assertTrue(command instanceof DeleteByIndexCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        command.setData(dayMap);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        command.execute();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 35
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "create new user"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": "test"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "female"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "63"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "167"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "30"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "maintain"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "add f/ apple c/ 50"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "add f/ banana c/ 100"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "add e/ pushup c/ 10"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "add e/ jogging c/ 60"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "delete /all"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jlifah": 7,
      "1-Karthigeyan-1": 12
    }
  }
]
