[
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Rani Karthigeyan Rajendrakumar| [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Poon Chuan An | [Github](https://github.com/poonchuanan) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jenny Lin | [Github](https://github.com/jlifah) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Owen Chew | [Github](https://github.com/chewyang) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Puah Siew Wen | [Github](https://github.com/e0425705) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "jlifah": 1,
      "chewyang": 1,
      "e0425705": 1,
      "-": 4,
      "1-Karthigeyan-1": 1,
      "poonchuanan": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/Activity.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Store activities attributes."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Activity {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected int calories;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Activity(String description, int calories) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.calories \u003d calories;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns String to be printed out."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return String to be printed out."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return description + \" | \" + calories;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 1,
      "e0425705": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/ActivityList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * List of activities for any day."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class ActivityList extends Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    private ArrayList\u003cActivity\u003e activities;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private int activityCounter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public ActivityList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        activities \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns the current number of activities in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return current number of activities in the list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public int getNumberOfActivities() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return activities.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public ArrayList getArrayList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return activities;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Adds food with its respective calories to activity list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     //* @param userInput Food description."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     //* @param calories  Amount of calories."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //public void addFood(String userInput, int calories) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //Activity item \u003d new Food(userInput, calories);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //activities.add(item);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //System.out.println(\"\\t\" + activities.get(activityCounter++).toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //return activityCounter;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Adds exercise with its respective calories to activity list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     //* @param userInput Exercise description."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     //* @param calories  Amount of calories."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //public void addExercise(String userInput, int calories) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //Activity item \u003d new Exercise(userInput, calories);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //activities.add(item);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //System.out.println(\"\\t\" + activities.get(activityCounter++).toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //return activityCounter;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    // }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void addActivity(Activity activity) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        //Activity item \u003d new Activity(userInput, calories);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        activities.add(activity);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        System.out.println(activities.get(activityCounter++).toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public Activity getActivity(int index) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return activities.get(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return (Arrays.toString(activities.toArray()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 54,
      "e0425705": 11,
      "1-Karthigeyan-1": 1,
      "poonchuanan": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/DayMap.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * Use hashmap of to store all the data."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": " * The key of the hashmap would be the date and the value would be the activityList for that day."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class DayMap {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private HashMap\u003cLocalDate, ActivityList\u003e dayMap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public DayMap() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.dayMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Adds activity into activityList under the corresponding dateTime."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * Creates a new activityList if there are none under the specified date."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param dateTime Specified date to extract activitylist from the dayMap."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     * @param activity Description of the activity, the userinput"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//     * @param calories number of calories"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//     * @param activityType food or exercise activity"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void addActivity(LocalDateTime dateTime, Activity activity) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        ActivityList alist \u003d this.getActivityList(dateTime);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        //if the day specified does not contain an activity list yet, create one first"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (alist \u003d\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            dayMap.put(dateTime.toLocalDate(), new ActivityList());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        alist \u003d this.getActivityList(dateTime);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        alist.addActivity(activity);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public ArrayList getArrayList(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return getActivityList(dateTime).getArrayList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //returns the activityList for the given dateTime"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public ActivityList getActivityList(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return dayMap.get(dateTime.toLocalDate());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //returns the number of activities for the given day"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public int getSizeOfActivityList(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        ActivityList alist \u003d this.getActivityList(dateTime);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (alist \u003d\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return alist.getNumberOfActivities();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public HashMap\u003cLocalDate, ActivityList\u003e getHashMap() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return dayMap;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public String toString(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        ActivityList alist \u003d this.getActivityList(dateTime);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return dateTime.toLocalDate().toString() + \" : \" + alist.toString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 72
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.storage.Userinfotextfilestorage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.userprofile.Initialiseuser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.userprofile.Userinfo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static Scanner userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static DayMap calList \u003d new DayMap();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static Storage storage \u003d new Storage(getJarFilePath() + \"/tpdata/tpcsv.csv\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "         * Create user profile for first time user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "         * Edit user profile"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "         */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        storage.loadData();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Duke.run();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void run() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Userinfo profile;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            while (in.hasNextLine()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                String userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                if (userInput.startsWith(\"create new user\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    Initialiseuser.sendname();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    Initialiseuser.gender();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    String[] data \u003d new String[4];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    ArrayList\u003cString\u003e previous \u003d Userinfotextfilestorage.update();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    for (int i \u003d 0; i \u003c 4; i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                        data[i] \u003d previous.get(i);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    profile \u003d new Userinfo(data[0], data[1], data[2], data[3]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    Initialiseuser.saveExistingUserInfo(profile);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                Parser parser \u003d new Parser(userInput);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    Command cmd \u003d parser.parseCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    executeCmd(cmd);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    storage.updateFile(calList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    System.out.println(\"invalid command1\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            System.out.println(\"IO exception has occured!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static DayMap getDayMap() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return calList;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static void executeCmd(Command cmd) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        cmd.setData(calList);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        cmd.execute();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private static String getJarFilePath() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return new File(Duke.class.getProtectionDomain().getCodeSource().getLocation().getPath())"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                .getParent().replace(\"%20\", \" \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/*"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Calorie List and List"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "// Example code to use calorie list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//DayMap calList \u003d new DayMap();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//LocalDateTime adatetime \u003d LocalDateTime.of(2015, Month.JULY, 29, 19, 30, 40);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chewyang"
        },
        "content": "//calList.addActivity(adatetime, \"description of activity\", 500, \"food\"); //daymap equivalent"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": "//System.out.println(calList.toString(aDateTime));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "//System.out.println(\"Size of activity list: \" + calList.getSizeOfActivityList(aDateTime));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jlifah": 4,
      "chewyang": 34,
      "e0425705": 12,
      "-": 16,
      "1-Karthigeyan-1": 32,
      "poonchuanan": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/Exercise.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Sub-class of Activity."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Exercise extends Activity {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Exercise(String description, int calories) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(description, calories);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return \"[E] | \" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 1,
      "e0425705": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/Food.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Sub-class of Activity."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Food extends Activity {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Food(String description, int calories) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(description, calories);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return \"[F] | \" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 1,
      "e0425705": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.command.AddExerciseCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.command.AddFoodCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.command.ListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.userprofile.Initialiseuser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.userprofile.Userinfo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected LocalDateTime date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected DayMap calList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Parser(String userInput) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.date \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.calList \u003d Duke.getDayMap();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public Command parseCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String[] arguments \u003d userInput.split(\" \", 2); //TODO split for all types of spaces etc TAB."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            switch (arguments[0].toLowerCase()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            case \"add\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                //TODO apply SLAP"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                return prepareAddCommand(userInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                //break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                //TODO apply SLAP"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                if (arguments[1].startsWith(\"d/\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    arguments[1] \u003d arguments[1].substring(3).trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    System.out.println(\"Here are the matching descriptions: \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    //used method inside daymap to get size of the activitylist instead"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    for (int i \u003d 0; i \u003c calList.getSizeOfActivityList(date); i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                        //created new method to get the arraylist inside the activity list from the daymap"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                        //maybe can find a better implementation of this later on"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                        String description \u003d calList.getArrayList(date).toArray()[i].toString().substring("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                                0, calList.getArrayList(date).toArray()[i].toString().indexOf(\",\")).trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                        if (description.contains(arguments[1])) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                            System.out.println(calList.getArrayList(date).toArray()[i]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                } else if (arguments[1].startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    arguments[1] \u003d arguments[1].substring(7).trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    System.out.println(\"Here are the matching descriptions: \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    //used method inside daymap to get size of the activitylist instead"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    for (int i \u003d 0; i \u003c calList.getSizeOfActivityList(date); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                        //created new method to get the arraylist inside the activity list from the daymap"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                        //maybe can find a better implementation of this later on"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                        String calories \u003d calList.getArrayList(date).toArray()[i].toString().substring("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                                calList.getArrayList(date).toArray()[i].toString().indexOf(\",\") + 1).trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                        if (calories.equals(arguments[1])) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                            System.out.println(calList.getArrayList(date).toArray()[i]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            case \"edit\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                //TODO apply SLAP"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                Userinfo store \u003d new Userinfo();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                store.editUserInfo(arguments[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                Initialiseuser.save(store);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //TODO delete command"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                System.out.println(\"THank you for using TraKCAL. See you again!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                System.out.println(\"Invalid command. Please type \u0027help\u0027 for more information.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            System.out.println(\"Something went wrong!! I do not understand what you mean.\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    + \"There could be an error in the way of input.\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    + \"Please do input \u0027help\u0027 for the commands and their respective input format.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            System.out.println(\"IO Exception found!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private Command prepareAddCommand(String userInput) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            String[] arguments \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            if (arguments[1].startsWith(\"f/\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                int calorieIndex \u003d arguments[1].indexOf(\"c/\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                int calories \u003d Integer.parseInt(arguments[1].substring(calorieIndex + 2).trim());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                arguments[1] \u003d arguments[1].substring(2, calorieIndex - 1).trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                //calList.addActivity(date, arguments[1], calories, \"food\"); //daymap equivalent"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                //System.out.println(\"Current number of activities is: \" + calList.getSizeOfActivityList(date));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                // calList.getSizeOfActivityList(date));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                return new AddFoodCommand(arguments[1], calories);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            } else if (arguments[1].startsWith(\"e/\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                int calorieIndex \u003d arguments[1].indexOf(\"c/\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                int calories \u003d Integer.parseInt(arguments[1].substring(calorieIndex + 2).trim());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                arguments[1] \u003d arguments[1].substring(2, calorieIndex - 1).trim();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                //calList.addActivity(date, arguments[1], calories, \"exercise\"); //daymap equivalent"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                return new AddExerciseCommand(arguments[1], calories);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                //System.out.println(\"Current number of activities is: \" + calList.getSizeOfActivityList(date));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } catch (NullPointerException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 40,
      "1-Karthigeyan-1": 78
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    File dataFile;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //ICsvMapWriter writer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private void createFileHierarchy() throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (dataFile.getParentFile().exists()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            if (dataFile.exists()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                dataFile.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            dataFile.getParentFile().mkdir();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            dataFile.createNewFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private void appendToFile(String textToAdd) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath,true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(bw);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            pw.println(textToAdd);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            pw.flush();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            System.out.println(\"record saved\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            System.out.println(\"record not saved\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private void writeToFile(String textToAdd)  {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        FileWriter fw \u003d null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            fw.write(textToAdd);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            System.out.println(\"Unable to write to file!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void updateFile(DayMap dayMap) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        HashMap\u003cLocalDate, ActivityList\u003e dayHashMap;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dayHashMap \u003d dayMap.getHashMap();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Iterator it \u003d dayHashMap.entrySet().iterator();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        writeToFile(\"\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        final String[] header \u003d new String[]{\"Date\", \"Activities\"};"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        while (it.hasNext()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            Map.Entry pair \u003d (Map.Entry)it.next();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            String activities \u003d pair.getValue().toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            activities \u003d activities.substring(1, activities.length() - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            appendToFile(pair.getKey().toString() + \",\" + activities);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void loadData() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            createFileHierarchy();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            System.out.println(\"Unable to load data\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 86
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddExerciseCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.Exercise;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class AddExerciseCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected Exercise exercise;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public AddExerciseCommand(String description, int calories) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.exercise \u003d new Exercise(description, calories);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.date \u003d LocalDateTime.now().toLocalDate();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public AddExerciseCommand(String description, int calories, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.exercise \u003d new Exercise(description, calories);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dayMap.addActivity(date.atStartOfDay(), exercise);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddFoodCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class AddFoodCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected Food food;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public AddFoodCommand(String description, int calories) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.food \u003d new Food(description, calories);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.date \u003d LocalDateTime.now().toLocalDate();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public AddFoodCommand(String description, int calories, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.food \u003d new Food(description, calories);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        dayMap.addActivity(date.atStartOfDay(), food);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.DayMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected DayMap dayMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    //to be overriden"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void setData(DayMap dayMap) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.dayMap \u003d dayMap;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import seedu.duke.ActivityList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public ListCommand(LocalDate date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.date \u003d LocalDateTime.now().toLocalDate();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        ActivityList activities \u003d dayMap.getActivityList(date.atStartOfDay());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int activityCounter \u003d activities.getNumberOfActivities();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if (activityCounter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            System.out.println(\"Nothing was added!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            for (int i \u003d 0; i \u003c activityCounter; i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                System.out.println((i + 1) + \". \" + activities.getActivity(i).toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 34
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Userinfotextfilestorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class Userinfotextfilestorage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String PATH \u003d new File(\"\").getAbsolutePath();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static final String FILE_PATH \u003d PATH + \"/tp.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static ArrayList\u003cString\u003e update() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (Files.exists(Path.of(PATH))) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                while (s.hasNext()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    String dataString \u003d s.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    data.add(dataString);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                s.close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return data;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                createDataFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                System.out.println(\"IO Exception found\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void createDataFile() throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        File file \u003d new File(Userinfotextfilestorage.PATH);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        boolean isDirCreated \u003d file.mkdir();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (isDirCreated) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            file \u003d new File(Userinfotextfilestorage.PATH + \"/tp.txt\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void save(String test) throws IOException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String[] parts \u003d test.split(\",\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Files.write(Path.of(FILE_PATH), Arrays.asList(parts));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 58,
      "1-Karthigeyan-1": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/userprofile/Initialiseuser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.userprofile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import seedu.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import seedu.duke.storage.Userinfotextfilestorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class Initialiseuser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static Userinfo userInfo \u003d new Userinfo();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static String[] data \u003d new String[4];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static String input(String text) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.print(text);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return Duke.in.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static String input2() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return Duke.in.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void sendname()  {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        data[0] \u003d input(\"What is your name?\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void gender() throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        data[1] \u003d input(\"What is your gender (male/female)?\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        weight();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void weight() throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        data[2] \u003d input(\"What is your weight in kg?\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        height();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void height() throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        data[3] \u003d input(\"What is your height in m?\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        enterNewUserInfo();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void enterNewUserInfo() throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Userinfo profile \u003d new Userinfo(data[0],data[1],data[2],data[3]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        profile.printNewUserCalculatedDetails();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Initialiseuser.save(profile);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void saveExistingUserInfo(Userinfo profile) throws IOException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Initialiseuser.save(profile);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void save(Userinfo profile) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Userinfotextfilestorage storage \u003d new Userinfotextfilestorage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        storage.save(profile.toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 46,
      "1-Karthigeyan-1": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/userprofile/Userinfo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package seedu.duke.userprofile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class Userinfo {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected static String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected static String gender;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected static String weight;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected static String height;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Userinfo() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Userinfo(String name, String gender, String weight, String height) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.gender \u003d gender;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.height \u003d height;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getGender() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return gender;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getWeight() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return weight;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getHeight() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return height;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void printNewUserCalculatedDetails() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        double bmi;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        bmi \u003d Double.parseDouble(this.getWeight())"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                 / (Double.parseDouble(this.getHeight()) * Double.parseDouble(this.getHeight()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Your BMI is \" + bmi);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (this.getGender().equals(\"female\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(\"Your recommend calories requirements is 2000 calories\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    + \"We recommend 1500 calories to lose weight!\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(\"Your recommend calories requirements is 2500 calories\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    + \"We recommend 2000 calories to lose weight!\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void editUserInfo(String userInput) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String[] split \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        new Userinfo(split[1].substring(2),split[2].substring(2),split[3].substring(2),split[4].substring(2));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Noted, I have edited your user profile. Here are your new details: \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Name: \" + this.getName());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Gender: \" + this.getGender());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Weight: \" + this.getWeight());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Height: \" + this.getHeight());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        printNewUserCalculatedDetails();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return getName() + \",\" + getGender() + \",\" + getWeight() + \",\" + getHeight();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jlifah": 66
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "create new user"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "human"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "male"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "50"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "1.65"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "add f/ apple c/ 50"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "add f/ banana c/ 100"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "add e/ pushup c/ 10"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "add e/ jogging c/ 60"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chewyang": 1,
      "1-Karthigeyan-1": 10
    }
  }
]
